(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    217048,       4166]
NotebookOptionsPosition[    213697,       4107]
NotebookOutlinePosition[    214246,       4127]
CellTagsIndexPosition[    214203,       4124]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initial conditions", "Title",
 CellChangeTimes->{{3.8604604993059244`*^9, 
  3.860460503471142*^9}},ExpressionUUID->"c28aa2a7-d21e-426d-960c-\
e1f494daa54f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "we", " ", "keep", " ", "the", " ", "same", " ", "values", " ", "for", " ", 
   "unrescaled", " ", "quantities", " ", "as", " ", "the", " ", "numerical", 
   " ", "solution", " ", "notebook", " ", "for", " ", "matching"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8608001569208097`*^9, 3.86080017822126*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b4bce99e-c48b-4c62-b18f-f1b511f509a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Keep", " ", "m1"}], " ", ">", " ", 
      RowBox[{
       RowBox[{"m2", ".", " ", "Set"}], " ", "Rinit", " ", "and", " ", 
       "Pinit", " ", "so", " ", "that", " ", "you", " ", "start", " ", "at", 
       " ", "the", " ", "point", " ", "of", " ", "closest", " ", 
       RowBox[{"distance", ".", " ", "Keep"}], " ", "PN", " ", "parameter", 
       " ", 
       RowBox[{"small", ":", " ", "\[Epsilon]"}]}]}], " ", "->", "0"}], ",", 
    " ", 
    RowBox[{"P", " ", "->", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"1", "/", "R"}], " ", "->", " ", "0"}], ",", "  ", 
    RowBox[{
     FractionBox["spins", 
      RowBox[{"orb", ".", " ", "ang", ".", " ", "momentum"}]], " ", "->", " ",
      "0"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"m1", "=", 
     RowBox[{"5", "/", "2"}]}], ";", 
    RowBox[{"m2", "=", "1"}], ";", 
    RowBox[{"G", "=", "1"}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", "=", " ", 
     FractionBox["5", "1000"]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tfin", " ", "=", " ", 
     RowBox[{"500", "/", "\[Epsilon]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"precisionGoal", "=", "Automatic"}], " ", 
    RowBox[{"(*", "50", "*)"}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spinSuppressFac", " ", "=", " ", 
     SuperscriptBox["\[Epsilon]", 
      RowBox[{"1", "/", "2"}]]}], ";", "    ", 
    RowBox[{"c", " ", "=", " ", 
     FractionBox["1", "spinSuppressFac"]}], "   ", ";", "    ", 
    RowBox[{"kGoldstein", " ", "=", " ", 
     RowBox[{"G", " ", "M", " ", "\[Mu]"}]}], " ", ";", "  ", 
    RowBox[{"M", " ", "=", " ", 
     RowBox[{"m1", "+", "m2"}]}], " ", ";", "  ", 
    RowBox[{"\[Mu]", " ", "=", " ", 
     RowBox[{"m1", " ", 
      RowBox[{"m2", "/", "M"}]}]}], " ", ";", " ", 
    RowBox[{"spinScalingFactor", " ", "=", " ", 
     RowBox[{"G", " ", 
      SuperscriptBox["M", "2"]}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rinit", "=", 
     RowBox[{"1", 
      RowBox[{"{", " ", 
       RowBox[{"3", ",", "0", ",", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pinit", "=", 
     RowBox[{"1", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S1init", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}], "spinScalingFactor"], " ", 
      "spinSuppressFac"}]}], ";"}], "         ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2init", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"-", "3"}], "/", "10"}], ",", "0"}], "}"}], 
       "spinScalingFactor"], "spinSuppressFac"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"These", " ", "spin", " ", "numbers", " ", 
     RowBox[{"(", 
      RowBox[{"times", " ", "spinSuppressFac"}], ")"}], " ", "entered", " ", 
     "by", " ", "user", " ", "are", " ", "unscaled", " ", 
     RowBox[{"quantities", ".", " ", "But"}], " ", "S1init", " ", "and", " ", 
     "S2init", " ", "are", " ", "scaled", " ", 
     RowBox[{"(", "reduced", ")"}], " ", "spins"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S1ninit", " ", "=", " ", 
     RowBox[{"Norm", "[", "S1init", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2ninit", " ", "=", " ", 
     RowBox[{"Norm", "[", "S2init", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rinit", "=", 
     FractionBox["Rinit", 
      RowBox[{"G", " ", "M"}]]}], "     ", ";", "     ", 
    RowBox[{"pinit", "=", 
     FractionBox["Pinit", "\[Mu]"]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Linit", "=", 
     RowBox[{"Cross", "[", 
      RowBox[{"rinit", ",", "pinit"}], "]"}]}], " ", ";", "     ", 
    RowBox[{"Lninit", " ", "=", " ", 
     RowBox[{"Norm", "[", "Linit", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]1", "=", 
     RowBox[{"2", " ", "m1", " ", 
      FractionBox["m2", 
       SuperscriptBox["M", "2"]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         FractionBox["3", "4"], " ", 
         FractionBox["m2", "m1"]}]}], ")"}]}]}], "  ", ";", 
    RowBox[{"\[Delta]2", "=", 
     RowBox[{"2", " ", "m2", " ", 
      FractionBox["m1", 
       SuperscriptBox["M", "2"]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         FractionBox["3", "4"], " ", 
         FractionBox["m1", "m2"]}]}], ")"}]}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Prepare", "  ", "a", " ", "sign", " ", "function", " ", "for", " ", 
     "later", " ", "use", " ", "in", " ", "solution"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", " ", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Delta]2", 
         RowBox[{
          SuperscriptBox["c", "2"], 
          SuperscriptBox[
           RowBox[{"Norm", "[", "rinit", "]"}], "3"], " ", "S1ninit", " ", 
          "Lninit"}]], 
        RowBox[{"Linit", ".", 
         RowBox[{"Cross", "[", 
          RowBox[{"S1init", ",", " ", "S2init"}], "]"}]}]}], "   ", ">", " ", 
       "0"}], ",", " ", 
      RowBox[{"sign", " ", "=", "1"}], ",", " ", 
      RowBox[{"sign", " ", "=", 
       RowBox[{"-", "1"}]}]}], " ", "]"}], " ", ";"}]}]}]], "Input",
 CellChangeTimes->{{3.861505203176077*^9, 3.861505211313445*^9}, {
   3.8615052492012873`*^9, 3.861505257612753*^9}, {3.861505316131177*^9, 
   3.861505347800949*^9}, {3.861505887379456*^9, 3.861505888135997*^9}, 
   3.861506084804438*^9, {3.861506402084787*^9, 3.861506462161069*^9}, {
   3.8615071091971207`*^9, 3.861507115267798*^9}, {3.861507150484117*^9, 
   3.861507150738566*^9}, {3.8615072195072317`*^9, 3.8615072228363657`*^9}, {
   3.861507292116331*^9, 3.8615072944090652`*^9}, {3.861507368708111*^9, 
   3.86150737111124*^9}, {3.861550460975625*^9, 3.8615504622856216`*^9}, {
   3.861550690529727*^9, 3.861550696168511*^9}, {3.861550762352476*^9, 
   3.861550771982109*^9}, {3.861550834810636*^9, 3.8615508400091*^9}, {
   3.861550891444612*^9, 3.861550897890771*^9}, {3.861550939900196*^9, 
   3.8615509447598133`*^9}, {3.8615510308031797`*^9, 3.861551033384852*^9}, {
   3.861551096261897*^9, 3.8615511241167393`*^9}, {3.861551178576521*^9, 
   3.861551202709674*^9}, {3.8615512843437243`*^9, 3.861551333638756*^9}, {
   3.8615514981235313`*^9, 3.861551543251113*^9}, {3.8615515882728453`*^9, 
   3.861551588508163*^9}, {3.8615516241825666`*^9, 3.861551666471239*^9}, 
   3.8615516998809*^9, {3.861551783670269*^9, 3.861551793033908*^9}, {
   3.861551827159412*^9, 3.861551832680564*^9}, {3.861551955873992*^9, 
   3.861551956016224*^9}, {3.861552090538467*^9, 3.861552123321302*^9}, 
   3.8615525184408484`*^9, {3.8616708204614353`*^9, 3.861670821890383*^9}, {
   3.86167111232908*^9, 3.8616711126454887`*^9}, {3.8616713233027887`*^9, 
   3.861671323447782*^9}, {3.861671358877248*^9, 3.8616713599509172`*^9}, {
   3.861672016244692*^9, 3.861672085204442*^9}, {3.861678985554181*^9, 
   3.861678985790229*^9}, {3.8616790488200293`*^9, 3.861679049017941*^9}, {
   3.861680987536757*^9, 3.861680987832634*^9}, {3.8617402729435596`*^9, 
   3.8617402735718927`*^9}, {3.861740608276115*^9, 3.8617406085874453`*^9}, {
   3.861740871296981*^9, 3.8617408715453157`*^9}, 3.861740923117964*^9, {
   3.861741171254281*^9, 3.861741186243741*^9}, {3.861741262380727*^9, 
   3.861741262981257*^9}, {3.861741295824161*^9, 3.861741306644526*^9}, {
   3.861741384491438*^9, 3.861741389523692*^9}, {3.861741534060012*^9, 
   3.861741622002494*^9}, {3.861741931263895*^9, 3.861741932715352*^9}, {
   3.861741991540522*^9, 3.86174199299544*^9}, {3.861742292314049*^9, 
   3.861742293849925*^9}, {3.8617424380104237`*^9, 3.8617424546304617`*^9}, {
   3.861742543787023*^9, 3.861742544436039*^9}, {3.8617426591116867`*^9, 
   3.861742670925596*^9}, {3.8617427717328253`*^9, 3.8617427959315863`*^9}, 
   3.8617428802792807`*^9, {3.8617430073893147`*^9, 3.861743020279496*^9}, {
   3.861743108508348*^9, 3.8617431088536*^9}, {3.86174320760745*^9, 
   3.861743225750619*^9}, {3.8617433334800177`*^9, 3.8617433336440153`*^9}, {
   3.861748998779592*^9, 3.8617490381422577`*^9}, {3.861750198970017*^9, 
   3.8617502066536827`*^9}, {3.861750440058003*^9, 3.861750446057592*^9}, {
   3.861751571352803*^9, 3.8617515812157803`*^9}, {3.8617531689526157`*^9, 
   3.861753170220834*^9}, {3.861753815493597*^9, 3.861753816792544*^9}, {
   3.8618442406759853`*^9, 3.861844250663933*^9}, {3.861844787844488*^9, 
   3.861844820954522*^9}, {3.861844875001211*^9, 3.861844891552496*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"cec9ec4b-9ab9-499f-a003-9b8815933399"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Jvec", "=", " ", 
     RowBox[{"Linit", " ", "+", " ", "S1init", " ", "+", " ", "S2init"}]}], 
    "  ", ";", "  ", 
    RowBox[{"J", " ", "=", " ", 
     RowBox[{"Norm", "[", "Jvec", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sphericalAngles", "[", "V_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Jx", ",", "Jy", ",", "Jz"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"polarAngJ", " ", "=", " ", 
         RowBox[{
          RowBox[{"ToSphericalCoordinates", "[", "V", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"azimuthAngJ", " ", "=", "  ", 
         RowBox[{
          RowBox[{"ToSphericalCoordinates", "[", "V", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"polarAngJ", ",", "azimuthAngJ"}], "}"}], "]"}], " ", 
        ";"}]}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vectorComponents", "[", 
      RowBox[{"{", 
       RowBox[{"V_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "}"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Vx", ",", "Vy", ",", "Vz"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Vz", " ", "=", " ", 
         RowBox[{"V", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Vx", "=", 
         RowBox[{"V", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ";", "  ", 
        "\[IndentingNewLine]", 
        RowBox[{"Vy", "=", 
         RowBox[{"V", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"Vx", ",", " ", "Vy", ",", " ", "Vz"}], "}"}], "]"}], " ", 
        ";"}]}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Xi]2", ",", " ", "\[Xi]1"}], "}"}], "=", 
     RowBox[{
      RowBox[{"sphericalAngles", "[", "Jvec", "]"}], "+", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EulMat", " ", "=", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Xi]1", "]"}], ",", " ", 
         RowBox[{"Sin", "[", "\[Xi]1", "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Xi]1", "]"}]}], 
          RowBox[{"Cos", "[", "\[Xi]2", "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Xi]1", "]"}], 
          RowBox[{"Cos", "[", "\[Xi]2", "]"}]}], ",", " ", 
         RowBox[{"Sin", "[", "\[Xi]2", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "\[Xi]1", "]"}], 
          RowBox[{"Sin", "[", "\[Xi]2", "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "\[Xi]1", "]"}]}], 
          RowBox[{"Sin", "[", "\[Xi]2", "]"}]}], ",", " ", 
         RowBox[{"Cos", "[", "\[Xi]2", "]"}]}], "}"}]}], "}"}]}], "      ", 
    ";"}], "\[IndentingNewLine]", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Frame", " ", "A"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "one", " ", "in", " ", "which", " ", "the", " ", "above", 
       " ", "components", " ", "are", " ", 
       RowBox[{
       "given", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "Euler"}], 
       " ", "matrix", " ", "which", " ", "when", " ", "multiplies", " ", 
       "with", " ", "a", " ", "column", " ", "containing", " ", "components", 
       " ", "in", " ", "Frame", " ", "A", " ", "yields", " ", "components", 
       " ", "in", " ", "the", " ", "inertial", " ", "frame", " ", "whose", 
       " ", "z"}], "-", 
      RowBox[{"axis", " ", "is", " ", "along", " ", "J", " ", "vector", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"total", " ", "angular", " ", "momentum"}], ")"}], ".", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "Gives"}], " ", 
       RowBox[{"components", ":", " ", 
        RowBox[{
         RowBox[{"Basic", " ", 
          RowBox[{"frame", " ", "--"}]}], ">", " ", 
         RowBox[{"J", "-", 
          RowBox[{"vector", " ", "centered", " ", "frame"}]}]}]}]}]}]}], 
    "\[IndentingNewLine]", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.861672089191999*^9, 3.861672138542931*^9}, {
   3.861672219359784*^9, 3.8616724355948153`*^9}, {3.8616724667930727`*^9, 
   3.8616725609341497`*^9}, {3.8616726078538313`*^9, 3.8616730902778177`*^9}, 
   3.861673141311883*^9, {3.861673604517894*^9, 3.861673630979302*^9}, {
   3.861673664446309*^9, 3.861673762601123*^9}, {3.8616738041715307`*^9, 
   3.861673883935069*^9}, {3.861674223347932*^9, 3.861674251683526*^9}, {
   3.86167834717461*^9, 3.861678476165113*^9}, {3.8616805170702057`*^9, 
   3.861680575726276*^9}, {3.8617400239293118`*^9, 3.861740057402918*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e5d261c3-dec1-4280-af62-24891e4eb90a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Un-rescaled/rescaled quantities", "Title",
 CellChangeTimes->{{3.860798770096822*^9, 3.860798775584608*^9}, 
   3.8608029634041452`*^9, {3.86149212511432*^9, 3.861492125494061*^9}, 
   3.861492213169786*^9, {3.861505504526184*^9, 
   3.861505517941978*^9}},ExpressionUUID->"93e68de5-0837-4f20-899e-\
f3a3d61b9519"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Rx", ",", " ", "Ry", ",", "Rz"}], "}"}]}], " ", ";", " ", 
  RowBox[{"P", " ", "=", 
   RowBox[{"{", 
    RowBox[{"Px", ",", "Py", ",", "Pz"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", " ", 
   RowBox[{"{", 
    RowBox[{"S1x", ",", " ", "S1y", ",", "S1z"}], "}"}]}], " ", ";", "    ", 
  RowBox[{"S2", "=", " ", 
   RowBox[{"{", 
    RowBox[{"S2x", ",", " ", "S2y", ",", "S2z"}], "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1n", " ", "=", " ", 
    RowBox[{"Norm", "[", "S1", "]"}]}], " ", ";", "     ", 
   RowBox[{"S2n", " ", "=", " ", 
    RowBox[{"Norm", "[", "S2", "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Seff", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Delta]1", " ", "S1"}], "+", " ", 
     RowBox[{"\[Delta]2", " ", "S2"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r", "=", 
   FractionBox["R", 
    RowBox[{"G", " ", "M"}]]}], ";", "       ", 
  RowBox[{"p", "=", 
   FractionBox["P", "\[Mu]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{"r", ",", "p"}], "]"}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Conserved", " ", "quantities", " ", "defined", " ", "in", " ", "terms", 
    " ", "of", " ", "scaled", " ", "variables"}], "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ln", "=", 
   RowBox[{"Norm", "[", "L", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jn", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"L", "+", "S1", "+", "S2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeffL", "=", " ", 
   RowBox[{"Seff", ".", "L"}]}], " ", ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8604605495801725`*^9, 3.860460726428547*^9}, {
   3.860467799555441*^9, 3.8604678211564703`*^9}, {3.860467987665392*^9, 
   3.860467996942706*^9}, {3.8604682265398026`*^9, 3.8604682334552746`*^9}, 
   3.860468322972333*^9, {3.8604683674289546`*^9, 3.860468372689849*^9}, {
   3.8607975052376165`*^9, 3.8607975401549788`*^9}, {3.8607976178733873`*^9, 
   3.860797654782824*^9}, {3.8607978998783436`*^9, 3.860797901432599*^9}, {
   3.86079818777748*^9, 3.8607981999666576`*^9}, {3.8607985810546837`*^9, 
   3.8607985814809246`*^9}, {3.8607986212369843`*^9, 3.860798750618828*^9}, {
   3.8607987820510435`*^9, 3.860798791699768*^9}, {3.860798835914669*^9, 
   3.8607988482851133`*^9}, {3.860798885798452*^9, 3.86079897354749*^9}, 
   3.8607998413832517`*^9, 3.8607998971896453`*^9, {3.860799972669767*^9, 
   3.860800008290717*^9}, {3.860800198037237*^9, 3.860800198421895*^9}, {
   3.860800535574095*^9, 3.86080055044881*^9}, {3.860801186909719*^9, 
   3.8608013985523853`*^9}, {3.86080143384153*^9, 3.860801529065855*^9}, {
   3.860801560894085*^9, 3.860801569284627*^9}, {3.8608016956566973`*^9, 
   3.860801717073454*^9}, {3.8608205347398825`*^9, 3.8608205389458003`*^9}, {
   3.860894060254075*^9, 3.8608941018195305`*^9}, {3.860894203777671*^9, 
   3.8608942293971453`*^9}, {3.8608942644441123`*^9, 3.860894294497435*^9}, {
   3.860894375934427*^9, 3.860894484105527*^9}, {3.8608946201108265`*^9, 
   3.860894621853591*^9}, {3.860894729099269*^9, 3.860894730938306*^9}, 
   3.860895935044954*^9, {3.8611393420127583`*^9, 3.86113934450283*^9}, {
   3.861139734478798*^9, 3.8611398291082582`*^9}, {3.861139882338176*^9, 
   3.861139895412895*^9}, {3.861141935111014*^9, 3.8611420346669073`*^9}, {
   3.8614950963787107`*^9, 3.861495099880206*^9}, 3.86150347583921*^9, {
   3.861503535465166*^9, 3.861503536452588*^9}, {3.86150363097497*^9, 
   3.861503641615816*^9}, {3.8615055705174303`*^9, 3.861505635557371*^9}, {
   3.8615056851047993`*^9, 3.8615057002595177`*^9}, 3.861505882562746*^9, {
   3.861506127411954*^9, 3.861506161440105*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"46ca37b3-b282-4e19-bd6f-d7095dd05190"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Evaluating", " ", "\[Sigma]1", " ", "and", " ", "\[Sigma]2"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}], " ", "=", " ", "Rinit"}], 
    "  ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Px", ",", "Py", ",", "Pz"}], "}"}], "=", "Pinit"}], "  ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}], " ", "=", " ", 
     "S1init"}], " ", ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S2x", ",", "S2y", ",", "S2z"}], "}"}], " ", "=", " ", 
     "S2init"}], "  ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]1", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"S1", ".", "S2"}], 
       RowBox[{"S1n", " ", "S2n"}]], " ", "-", 
      RowBox[{
       FractionBox["Ln", "S2n"], 
       FractionBox[
        RowBox[{"\[Delta]1", "-", "\[Delta]2"}], "\[Delta]2"], 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"S1", ".", "L"}]}], 
        RowBox[{"Ln", " ", "S1n"}]]}]}]}], " ", ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{"\[Sigma]1", "=", 
     RowBox[{
      RowBox[{"Cos", " ", "\[Gamma]"}], " ", "-", 
      RowBox[{
       FractionBox["L", "S2"], 
       FractionBox[
        RowBox[{"Q1", "-", "Q2"}], "Q2"], "Cos", " ", "\[Kappa]1"}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]2", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{"S2", ".", "L"}]}], 
       RowBox[{"Ln", " ", "S2n"}]], " ", "+", " ", 
      RowBox[{
       FractionBox[
        RowBox[{"\[Delta]1", " ", "S1n"}], 
        RowBox[{"\[Delta]2", " ", "S2n"}]], 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"S1", ".", "L"}]}], 
        RowBox[{"Ln", " ", "S1n"}]]}]}]}], " ", ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"\[Sigma]2", "=", " ", 
     RowBox[{
      RowBox[{"Cos", " ", "\[Kappa]2"}], " ", "+", 
      RowBox[{
       FractionBox[
        RowBox[{"Q1", " ", "S1"}], 
        RowBox[{"Q2", " ", "S2"}]], " ", "Cos", " ", "\[Kappa]1"}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Enwt", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"P", ".", "P"}], 
       RowBox[{"2", " ", "\[Mu]"}]], " ", "-", 
      FractionBox[
       RowBox[{"G", " ", "\[Mu]", " ", "M"}], 
       RowBox[{"Norm", "[", "R", "]"}]]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Newtonian", " ", "expression", " ", "for", " ", "energy"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Lun", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"Cross", "[", 
       RowBox[{"R", ",", "P"}], "]"}], "]"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"norm", " ", "of", " ", "unscaled", " ", "ang", " ", "momentum"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e", " ", "=", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", " ", "+", " ", 
        RowBox[{"2", " ", "Enwt", "  ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["Lun", "2"], " "}], 
          RowBox[{"\[Mu]", " ", 
           SuperscriptBox["kGoldstein", "2"]}]]}]}], ")"}], 
      RowBox[{"1", "/", "2"}]]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Newtonian", " ", "eccentricity", " ", "in", " ", "unrescaled", " ", 
     "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aUnrescaled", "=", " ", 
     FractionBox[
      RowBox[{"-", "kGoldstein"}], 
      RowBox[{"2", " ", "Enwt"}]]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", " ", "=", " ", 
     FractionBox["aUnrescaled", 
      RowBox[{"G", " ", "M"}]]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["Ln", 
         RowBox[{"a", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["e", "2"]}], ")"}], 
           RowBox[{"1", "/", "2"}]]}]], ")"}], "3"], 
      RowBox[{"G", " ", "M"}]]}], " ", ";"}], "   ", 
   RowBox[{"(*", "unrescaled", "*)"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxUsow3EAB/D/cFi52PrLa2aWR5jHwUEbshJRtGYHkcdIoSERq12WOMxx
y9rRysVrQlmWQhs5CDMrc5jDNiZ/mtpm8pjf93/49CkcmlKOpFAUJSBwDkde
EHAy8qPEhxhfdJpKsaN3rBJPfk3IsER33IItozvj7CLhIqYKem6w8WjYjROp
7owg+cGgy2SPxaZx+MA4g+N2hR7nlmvZ40tzvBBZYAnyMfd1NAsLT2kRvix+
LMFrTb2l+Ml7XY3PDdk1mPbNm7BUU2PGC1F6FW/J3JtY7I9URsi1NlUVjqbt
/+G6e04SXxW9cz/ILkk0Czsa2wT4SWplV/Q17vJdjHxlwMluVndf4705Nbv0
0OZfJvPWA+z+3V+P7IyRb7joO5zu0TA4L1/Pvt3xHMftL+FPfDt78oO16tYk
7rd3lNWTY8bmCvwX+r7HXivXh98iyq4GMj1oVuF/2d4HQw==
  "],
 CellLabel->"In[31]:=",ExpressionUUID->"b679f6b1-cc78-4998-b53c-e65093b74335"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cubic equation", "Title",
 CellChangeTimes->{{3.860822576605688*^9, 3.8608225770805225`*^9}, {
  3.860822620754016*^9, 3.860822640936638*^9}, {3.861492131017334*^9, 
  3.8614921316091623`*^9}},ExpressionUUID->"235c7a58-0182-47a7-9361-\
cdc6f24d11dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"2", " ", "Ln", " ", "S1n", " ", "\[Delta]1", " ", 
     RowBox[{"(", 
      RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}]}]}], ";", 
   RowBox[{"cubiceq", "=", 
    RowBox[{
     RowBox[{"A", " ", 
      SuperscriptBox["x", "3"]}], " ", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Ln", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}], "2"]}], "+", 
        RowBox[{
        "2", " ", "\[Delta]2", " ", "Ln", " ", "\[Sigma]2", " ", "S2n", "  ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["S1n", "2"], " ", 
         SuperscriptBox["\[Delta]1", "2"]}], "+", 
        RowBox[{
        "2", " ", "\[Delta]1", " ", "\[Delta]2", " ", "\[Sigma]1", " ", "S1n",
          " ", "S2n"}], " ", "+", 
        RowBox[{
         SuperscriptBox["\[Delta]2", "2"], "  ", 
         SuperscriptBox["S2n", "2"]}]}], "  ", ")"}], 
      SuperscriptBox["x", "2"]}], "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "  ", "\[Delta]2", " ", "S2n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ln", " ", "\[Sigma]1", 
           RowBox[{"(", 
            RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}]}], " ", "+", 
          RowBox[{"\[Sigma]2", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"\[Delta]1", " ", "S1n"}], "+", " ", 
             RowBox[{"\[Delta]2", " ", "\[Sigma]1", " ", "S2n"}]}], ")"}]}]}],
          " ", ")"}]}], ")"}], " ", "x"}], "+", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["S2n", "2"]}], " ", 
      SuperscriptBox["\[Delta]2", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Sigma]1", "2"], "+", 
        SuperscriptBox["\[Sigma]2", "2"], "-", "1"}], ")"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"A", 
     RowBox[{"(", 
      RowBox[{"x", " ", "-", "x1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", " ", "-", "x2"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", " ", "-", "x3"}], ")"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{" "}]}], "Input",
 CellChangeTimes->{{3.8608224381989107`*^9, 3.860822556686841*^9}, {
   3.8608226896080875`*^9, 3.860822697182497*^9}, {3.860822980359644*^9, 
   3.860822985117237*^9}, {3.860823015710429*^9, 3.860823052111555*^9}, {
   3.860823090890751*^9, 3.8608231109576855`*^9}, {3.8608231484855275`*^9, 
   3.860823250389859*^9}, {3.8608237798541985`*^9, 3.8608238257903833`*^9}, {
   3.8608238841627035`*^9, 3.860823928174265*^9}, {3.8608239975646667`*^9, 
   3.8608240241591816`*^9}, 3.860824088450692*^9, {3.8608241241637793`*^9, 
   3.8608241504654446`*^9}, {3.8608242093333807`*^9, 
   3.8608242836229057`*^9}, {3.860824482444661*^9, 3.8608244849300203`*^9}, 
   3.8608245778214364`*^9, 3.8608246223199368`*^9, {3.8608247926936655`*^9, 
   3.86082491999257*^9}, {3.8608249689229407`*^9, 3.8608249724232845`*^9}, 
   3.8608250329543257`*^9, {3.8608265808846436`*^9, 3.860826616414554*^9}, {
   3.8608266716482472`*^9, 3.86082672642173*^9}, {3.861141247806658*^9, 
   3.86114125046666*^9}, {3.861502338066778*^9, 3.861502356987935*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"7b21dda6-0b67-4411-bf34-de2d9fb94bbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "evaluate", " ", "the", " ", "cubic", " ", "and", " ", "find", " ", "the", 
    " ", "roots"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rtsol", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"cubiceq", "\[Equal]", "0"}], ",", "x"}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x2", "=", 
     RowBox[{"x", "/.", 
      RowBox[{"rtsol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x3", "=", 
     RowBox[{"x", "/.", 
      RowBox[{"rtsol", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x1", "=", 
     RowBox[{"x", "/.", 
      RowBox[{"rtsol", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", " ", "x3", ",", " ", "x1"}], "}"}], " ", "=", " ", 
     RowBox[{"Sort", "[", 
      RowBox[{"{", 
       RowBox[{"x2", ",", " ", "x3", ",", " ", "x1"}], "}"}], "]"}]}], " ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "Rx", ",", " ", "Ry", ",", " ", "Rz", ",", " ", "Px", ",", " ", "Py", ",",
      " ", "Pz", ",", " ", "S1x", ",", " ", "S1y", ",", " ", "S1z", ",", " ", 
     "S2x", ",", " ", "S2y", ",", " ", "S2z", ",", " ", "m1", ",", " ", 
     "m2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.860824656915515*^9, 3.860824657477194*^9}, {
   3.8608250948957586`*^9, 3.860825106725681*^9}, {3.860826039092862*^9, 
   3.860826040689515*^9}, {3.8608263976132016`*^9, 3.8608264689015837`*^9}, {
   3.8608949651335955`*^9, 3.8608949730901937`*^9}, {3.860895203508599*^9, 
   3.860895239420532*^9}, {3.860895452936109*^9, 3.8608954977682376`*^9}, {
   3.860895556564497*^9, 3.860895574204098*^9}, {3.860895701807377*^9, 
   3.8608957697905397`*^9}, 3.861138797592785*^9, {3.861138884816885*^9, 
   3.86113892023549*^9}, 3.8611399891511087`*^9, {3.861141258850905*^9, 
   3.861141289138701*^9}, {3.8615038395863934`*^9, 3.861503850716688*^9}, {
   3.861506870814052*^9, 3.861506884018413*^9}, {3.861670858473631*^9, 
   3.861670881372212*^9}, {3.861670914295412*^9, 3.8616709263360243`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"46216a88-e346-4f16-ba31-ce4764f2b520"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Cos", "[", 
    SubscriptBox["\[Kappa]", "1"]}], TraditionalForm]],ExpressionUUID->
  "92ca396e-f413-4177-a1b1-1f6a486d39ad"],
 "]"
}], "Title",
 CellChangeTimes->{{3.8608923925495014`*^9, 3.8608923994813333`*^9}, {
  3.86149213404443*^9, 
  3.861492144947094*^9}},ExpressionUUID->"7755eab6-9597-4055-b1fd-\
35fda311e642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]e", " ", "=", " ", 
   FractionBox["e", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["e", "2"]}], ")"}], 
      RowBox[{"1", "/", "2"}]]}]]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Nu]", " ", "=", " ", 
    RowBox[{"u", " ", "+", " ", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", " ", 
       FractionBox[
        RowBox[{"\[Beta]e", " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], 
        RowBox[{"1", "-", 
         RowBox[{"\[Beta]e", " ", 
          RowBox[{"Cos", "[", "u", "]"}]}]}]], "]"}]}]}]}], "      ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"same", " ", "as", " ", "\[Nu]"}], "=", " ", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"1", "+", "e"}], 
         RowBox[{"1", "-", "e"}]]], " ", 
       RowBox[{"Tan", "[", 
        RowBox[{"u", "/", "2"}], "]"}]}], "]"}], " ", "but", " ", "without", 
     " ", "the", " ", "ArcTan", " ", "issues"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", " ", "=", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"x3", "-", "x2"}], 
      RowBox[{"x1", "-", "x2"}]], ")"}], 
    RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", " ", "=", "  ", 
   RowBox[{"sign", 
    FractionBox["2", 
     SqrtBox[
      RowBox[{"A", 
       RowBox[{"(", 
        RowBox[{"x1", "-", "x2"}], ")"}]}]]], 
    RowBox[{"EllipticF", "[", 
     RowBox[{
      RowBox[{"ArcSin", "[", 
       SqrtBox[
        FractionBox[
         RowBox[{
          FractionBox[
           RowBox[{" ", 
            RowBox[{"S1init", ".", "Linit"}]}], 
           RowBox[{"Lninit", " ", "S1ninit"}]], "-", "x2"}], 
         RowBox[{"x3", "-", "x2"}]]], "]"}], ",", 
      SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalUpsilon]", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    SqrtBox[
     RowBox[{"A", 
      RowBox[{"(", 
       RowBox[{"x1", "-", "x2"}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{"\[Alpha]", "+", 
      FractionBox[
       RowBox[{"\[Nu]", " ", "+", " ", 
        RowBox[{"e", " ", 
         RowBox[{"Sin", "[", "\[Nu]", "]"}]}]}], 
       RowBox[{
        SuperscriptBox["c", "2"], 
        SuperscriptBox["Ln", "3"]}]]}], ")"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cos\[Kappa]1", "=", 
   RowBox[{"x2", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x3", "-", "x2"}], ")"}], 
     SuperscriptBox[
      RowBox[{"JacobiSN", "[", 
       RowBox[{"\[CapitalUpsilon]", ",", 
        SuperscriptBox["\[Beta]", "2"]}], "]"}], "2"]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8608924083066835`*^9, 3.8608924329801188`*^9}, {
   3.860892479432002*^9, 3.8608925073104424`*^9}, {3.8608925440633063`*^9, 
   3.860892548078041*^9}, {3.8608925780976286`*^9, 3.8608925882775187`*^9}, {
   3.8608926360393977`*^9, 3.8608926513055563`*^9}, {3.8608927355763035`*^9, 
   3.8608927699145665`*^9}, {3.860892935805621*^9, 3.8608929723350945`*^9}, {
   3.8608930308124714`*^9, 3.8608930344628*^9}, {3.8608938045301757`*^9, 
   3.8608939154981885`*^9}, {3.8608943127288895`*^9, 
   3.8608943274020576`*^9}, {3.8608945150210276`*^9, 3.8608945164989967`*^9}, 
   3.8608946129793034`*^9, {3.8608946868346677`*^9, 3.860894702062374*^9}, {
   3.860896163957806*^9, 3.860896193570142*^9}, 3.8608962439180317`*^9, {
   3.861139993338573*^9, 3.8611400100807323`*^9}, {3.861140449437024*^9, 
   3.861140486481666*^9}, {3.861140530640531*^9, 3.861140692132641*^9}, 
   3.861485722336391*^9, 3.861485762999198*^9, {3.861488774399995*^9, 
   3.8614888363285027`*^9}, {3.861677144540987*^9, 3.861677145830858*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"1ca705eb-b49e-4392-9c52-bb5dd4b2c6b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Evaluate", " ", "coskp1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}], " ", "=", " ", "Rinit"}], 
    "  ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Px", ",", "Py", ",", "Pz"}], "}"}], "=", "Pinit"}], "  ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}], " ", "=", " ", 
     "S1init"}], " ", ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S2x", ",", "S2y", ",", "S2z"}], "}"}], " ", "=", " ", 
     "S2init"}], "  ", ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findu", "[", 
      RowBox[{"t_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"FindRoot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"n", " ", "t"}], " ", "==", " ", 
        RowBox[{"u", " ", "-", " ", 
         RowBox[{"e", " ", 
          RowBox[{"Sin", "[", "u", "]"}]}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", 
         RowBox[{"n", " ", "t"}], ",", " ", 
         RowBox[{
          RowBox[{"n", " ", "t"}], " ", "-", " ", 
          RowBox[{"2", " ", "\[Pi]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"n", " ", "t"}], " ", "+", " ", 
          RowBox[{"2", " ", "\[Pi]"}]}]}], "}"}], ",", " ", 
       RowBox[{"PrecisionGoal", "->", "precisionGoal"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.860895794171365*^9, 3.860895806670927*^9}, {
   3.8608958416856146`*^9, 3.860895945448574*^9}, {3.8608959967702603`*^9, 
   3.8608960703268433`*^9}, {3.8608961091008654`*^9, 3.860896111247663*^9}, {
   3.860896144365302*^9, 3.8608961466158648`*^9}, {3.8608962933091507`*^9, 
   3.8608963084938354`*^9}, {3.8611393353582582`*^9, 3.861139336965755*^9}, {
   3.861141357018989*^9, 3.861141372380659*^9}, {3.861141905294222*^9, 
   3.861141922812286*^9}, {3.861142317284169*^9, 3.86114234135645*^9}, {
   3.8611423854080887`*^9, 3.8611424067468643`*^9}, {3.8611424415968437`*^9, 
   3.8611425069451714`*^9}, 3.861318718262719*^9, {3.8613203043838625`*^9, 
   3.8613203070368676`*^9}, {3.861320365591267*^9, 3.861320433513455*^9}, {
   3.86132059145255*^9, 3.861320612604617*^9}, {3.861320668808439*^9, 
   3.861320672101037*^9}, {3.8613207397888575`*^9, 3.8613207646379952`*^9}, {
   3.8613209142911444`*^9, 3.861320955378435*^9}, {3.8613210362410283`*^9, 
   3.861321172322667*^9}, {3.861321269161363*^9, 3.8613213114104977`*^9}, {
   3.8613213720180693`*^9, 3.8613213753184633`*^9}, {3.8613216707893925`*^9, 
   3.861321679326131*^9}, {3.8613218158417068`*^9, 3.8613218361734457`*^9}, {
   3.86137501507241*^9, 3.861375154208465*^9}, {3.8614846205183434`*^9, 
   3.8614846313115287`*^9}, {3.861485212084961*^9, 3.861485232021091*^9}, 
   3.861485429456444*^9, 3.861485483861403*^9, 3.8614855464952497`*^9, {
   3.8615012042126102`*^9, 3.8615012304247427`*^9}, 3.861503526525119*^9, {
   3.861506378777898*^9, 3.861506381580179*^9}, {3.861506889014786*^9, 
   3.861506889360828*^9}, {3.861551921719078*^9, 3.8615519235977716`*^9}, {
   3.861576010574408*^9, 3.861576029119623*^9}, {3.86167093364399*^9, 
   3.861670942063346*^9}, 3.861671059233396*^9, {3.8616711708413877`*^9, 
   3.8616711731032553`*^9}, {3.861671379067487*^9, 3.861671391129171*^9}, {
   3.861676209504067*^9, 3.861676262233425*^9}, {3.8616763151115*^9, 
   3.8616763151143913`*^9}, {3.861677094255752*^9, 3.86167709626715*^9}, 
   3.861740443866497*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"d3823868-0507-44e2-8d43-00b0f4197af2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fcos\[Kappa]1", "[", 
     RowBox[{"t_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{"cos\[Kappa]1", "/.", 
     RowBox[{"findu", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"p1", " ", "="}], "          ", ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"fcos\[Kappa]1", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tfin"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"p2", ",", "p1", ",", " ", 
      RowBox[{"PlotRange", "->", "All"}], ",", " ", 
      RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "Rx", ",", " ", "Ry", ",", " ", "Rz", ",", " ", "Px", ",", " ", "Py", ",",
      " ", "Pz", ",", " ", "S1x", ",", " ", "S1y", ",", " ", "S1z", ",", " ", 
     "S2x", ",", " ", "S2y", ",", " ", "S2z", ",", " ", "m1", ",", " ", 
     "m2"}], "]"}], "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.861141541405088*^9, 3.8611415968034897`*^9}, {
   3.861141630391317*^9, 3.86114163576544*^9}, {3.861141792624633*^9, 
   3.861141796959711*^9}, {3.861141845821257*^9, 3.861141899123603*^9}, {
   3.861485689857028*^9, 3.8614856953753023`*^9}, 3.861485958217534*^9, {
   3.861486319130961*^9, 3.861486321461913*^9}, {3.861486380931882*^9, 
   3.861486386902505*^9}, {3.861486425145323*^9, 3.8614864262416153`*^9}, {
   3.8614889018735657`*^9, 3.861488933940536*^9}, {3.861488979798455*^9, 
   3.861489002824922*^9}, {3.8614892775314217`*^9, 3.861489281618862*^9}, {
   3.861489339976098*^9, 3.861489341119084*^9}, 3.861490736991049*^9, {
   3.861490777297224*^9, 3.8614907872196903`*^9}, {3.8614908284003*^9, 
   3.861490833257256*^9}, {3.86149111903441*^9, 3.861491129825794*^9}, {
   3.861491987033512*^9, 3.86149199516778*^9}, {3.861492662412612*^9, 
   3.86149267215355*^9}, 3.8614961471338577`*^9, {3.861499534072062*^9, 
   3.8614995491693087`*^9}, {3.861500743578952*^9, 3.861500745675408*^9}, {
   3.861500880006077*^9, 3.8615008811082993`*^9}, {3.861500913791602*^9, 
   3.861500951623122*^9}, {3.861501055358498*^9, 3.861501056491125*^9}, {
   3.8615012360834103`*^9, 3.861501236707847*^9}, {3.861501425837859*^9, 
   3.8615014270287037`*^9}, {3.86150154175079*^9, 3.861501548131529*^9}, {
   3.8615070412309237`*^9, 3.861507053970299*^9}, {3.861507173746513*^9, 
   3.861507184499421*^9}, {3.861507240618802*^9, 3.861507241823957*^9}, {
   3.8615073201705217`*^9, 3.861507321078842*^9}, {3.861507393325427*^9, 
   3.861507395595614*^9}, {3.861550492234902*^9, 3.8615504947319307`*^9}, {
   3.86155072861495*^9, 3.861550733920734*^9}, {3.861550788429731*^9, 
   3.8615507909818153`*^9}, {3.861550855974536*^9, 3.861550857674506*^9}, {
   3.8615509146136847`*^9, 3.8615509158514147`*^9}, {3.861551048000702*^9, 
   3.861551048976865*^9}, {3.86155108584779*^9, 3.8615510869697*^9}, 
   3.861551138278891*^9, {3.8615511723577557`*^9, 3.861551174068651*^9}, {
   3.861551208697749*^9, 3.8615512098333683`*^9}, {3.8615515554617643`*^9, 
   3.8615515808729343`*^9}, {3.861551643313925*^9, 3.86155164399054*^9}, {
   3.861551684058477*^9, 3.861551685311839*^9}, {3.86155175103855*^9, 
   3.86155175218686*^9}, {3.861551873269351*^9, 3.8615518742782717`*^9}, {
   3.861551940190291*^9, 3.861551949517818*^9}, {3.8615525336759167`*^9, 
   3.861552534758073*^9}, {3.861670969386732*^9, 3.8616710347476053`*^9}, {
   3.861671068483786*^9, 3.861671069814846*^9}, {3.86167112324113*^9, 
   3.861671124437298*^9}, {3.861671164259687*^9, 3.861671165381612*^9}, {
   3.861671239334763*^9, 3.861671309991837*^9}, {3.86167140909339*^9, 
   3.861671410603374*^9}, {3.861676218474866*^9, 3.861676220787147*^9}, {
   3.861676315115324*^9, 3.861676342954267*^9}, {3.8616771116479387`*^9, 
   3.861677111650004*^9}, {3.861679169222435*^9, 3.861679170200224*^9}, {
   3.861679609627448*^9, 3.861679637328267*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"ec48aafb-95d3-4d76-b9be-9daab44bffc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["L vector solution", "Title",
 CellChangeTimes->{{3.8616761066664*^9, 3.861676125784917*^9}, {
  3.861681631939687*^9, 
  3.8616816542979727`*^9}},ExpressionUUID->"86473ad7-0ae0-48f6-89ed-\
6d3302af9776"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LinitJframe", " ", "=", " ", 
   RowBox[{"EulMat", ".", "Linit"}]}], "      ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L\[Xi]10", " ", "=", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{"sphericalAngles", "[", "LinitJframe", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "+", " ", 
     RowBox[{"\[Pi]", "/", "2"}]}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]1", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "\[Delta]2"}], " ", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"J", " ", "+", " ", "Lninit", " ", "+", " ", 
       RowBox[{"S2ninit", " ", "\[Sigma]2"}]}], " ", ")"}], 
     RowBox[{"S1ninit", 
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}]]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]2", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "\[Delta]2"}], " ", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "J"}], " ", "+", " ", "Lninit", " ", "+", " ", 
       RowBox[{"S2ninit", " ", "\[Sigma]2"}]}], " ", ")"}], 
     RowBox[{"S1ninit", 
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}]]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]1", " ", "=", " ", 
   RowBox[{"\[Delta]2", " ", 
    FractionBox["1", 
     RowBox[{"2", " ", "S1ninit", " ", 
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Lninit", "2"], "\[Delta]1"}], "+", " ", 
        RowBox[{
         SuperscriptBox["J", "2"], "\[Delta]2"}], "+", " ", 
        RowBox[{"S1ninit", 
         RowBox[{"(", 
          RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"S1ninit", "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], "+", " ", 
        RowBox[{
        "Lninit", " ", "S2ninit", " ", "\[Delta]1", " ", "\[Sigma]2"}], " ", 
        "+", " ", 
        RowBox[{"J", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Lninit", 
            RowBox[{"(", 
             RowBox[{"\[Delta]1", "+", "\[Delta]2"}], ")"}]}], "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]2", " ", "\[Delta]2"}]}], 
          ")"}]}]}], ")"}]}], ")"}]}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]2", " ", "=", " ", 
   RowBox[{"\[Delta]2", " ", 
    FractionBox["1", 
     RowBox[{"2", " ", "S1ninit", " ", 
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Lninit", "2"], "\[Delta]1"}], "+", " ", 
        RowBox[{
         SuperscriptBox["J", "2"], "\[Delta]2"}], "+", " ", 
        RowBox[{"S1ninit", 
         RowBox[{"(", 
          RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"S1ninit", "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], "+", " ", 
        RowBox[{
        "Lninit", " ", "S2ninit", " ", "\[Delta]1", " ", "\[Sigma]2"}], " ", 
        "-", " ", 
        RowBox[{"J", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Lninit", 
            RowBox[{"(", 
             RowBox[{"\[Delta]1", "+", "\[Delta]2"}], ")"}]}], "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]2", " ", "\[Delta]2"}]}], 
          ")"}]}]}], ")"}]}], ")"}]}]}], "  ", ";"}]}], "Input",
 CellChangeTimes->{{3.861550911625313*^9, 3.861550911630085*^9}, {
  3.861673945788025*^9, 3.86167401381187*^9}, {3.861674067695208*^9, 
  3.861674124252503*^9}, {3.861674169225237*^9, 3.861674191519525*^9}, {
  3.861674261140751*^9, 3.861674551132612*^9}, {3.8616745905433207`*^9, 
  3.8616745909175673`*^9}, {3.8616764772096767`*^9, 3.8616764773834953`*^9}, {
  3.8616765146075907`*^9, 3.861676531052696*^9}, {3.861676732682493*^9, 
  3.861676735311871*^9}, {3.861676778032404*^9, 3.861676779860076*^9}, {
  3.861677527043379*^9, 3.861677541029666*^9}, {3.861679774971198*^9, 
  3.861679779823834*^9}, {3.8616814375835543`*^9, 3.861681437984193*^9}, {
  3.861740512069642*^9, 3.861740512617588*^9}, {3.861749111636099*^9, 
  3.861749118764543*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"6fb91cf1-9dd8-4516-bdb9-a3f21d548fd5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"solPiece1", " ", "=", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", 
          RowBox[{"(", 
           RowBox[{"x1", "-", "x2"}], ")"}]}], ")"}], 
        RowBox[{"1", "/", "2"}]]], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]1", "  ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]1", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]1", "+", "x2"}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]2", " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]2", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]2", "+", "x2"}]]}], ")"}]}]}], "  ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solPiece2", " ", "=", 
   RowBox[{"L\[Xi]10", " ", "-", 
    RowBox[{"(", 
     RowBox[{"solPiece1", "/.", 
      RowBox[{"u", "->", "0"}]}], " ", ")"}]}]}], "    ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L\[Xi]1sol", "=", 
   RowBox[{"solPiece1", " ", "+", " ", "solPiece2"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cos\[Kappa]2", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"\[Sigma]2", " ", "-", "  ", 
    RowBox[{"\[Delta]1", " ", 
     RowBox[{"S1ninit", "/", 
      RowBox[{"(", 
       RowBox[{"\[Delta]2", " ", "S2ninit"}], ")"}]}], " ", 
     RowBox[{"fcos\[Kappa]1", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LvecAzimuthAngle", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}], "+", "L\[Xi]1sol"}], "/.", 
    RowBox[{"findu", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LvecPolarAngle", "[", "t_", "]"}], ":=", " ", 
    RowBox[{"ArcCos", "[", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["Lninit", "2"], "+", " ", 
        RowBox[{"Lninit", " ", "S1ninit", "  ", 
         RowBox[{"fcos\[Kappa]1", "[", "t", "]"}]}], " ", "+", " ", 
        RowBox[{"Lninit", " ", "S2ninit", "  ", 
         RowBox[{"cos\[Kappa]2", "[", "t", "]"}]}]}], "  ", ")"}], 
      RowBox[{"Lninit", " ", "J"}]], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Lsol", "[", "t_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Lx", ",", "Ly", ",", "Lz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Lx", ",", "Ly", ",", "Lz"}], "}"}], " ", "=", " ", 
       RowBox[{"vectorComponents", "[", 
        RowBox[{"{", 
         RowBox[{"Lninit", ",", " ", 
          RowBox[{"LvecPolarAngle", "[", "t", "]"}], ",", 
          RowBox[{"LvecAzimuthAngle", "[", "t", "]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", " ", 
       RowBox[{"kGoldstein", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Inverse", "[", "EulMat", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"Lx", ",", "Ly", ",", "Lz"}], "}"}]}], ")"}]}], " ", "]"}],
       ";"}]}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.861675732971167*^9, 3.861675733854781*^9}, {
   3.861675767479105*^9, 3.861675898011263*^9}, {3.8616761374650373`*^9, 
   3.861676158569659*^9}, {3.86167645498209*^9, 3.8616764643412313`*^9}, {
   3.861676803553501*^9, 3.861676823145732*^9}, {3.861676872303378*^9, 
   3.861676901285598*^9}, {3.8616769500070267`*^9, 3.861677035451839*^9}, {
   3.861677160808025*^9, 3.8616771694242287`*^9}, {3.8616772039910917`*^9, 
   3.861677224535245*^9}, {3.861677284492354*^9, 3.8616773353654747`*^9}, {
   3.861677385658186*^9, 3.861677386978154*^9}, {3.861677626205275*^9, 
   3.86167765229154*^9}, {3.8616777266161547`*^9, 3.86167781599647*^9}, {
   3.8616779220706987`*^9, 3.86167813616227*^9}, {3.861678181379902*^9, 
   3.861678247748885*^9}, {3.861678290011442*^9, 3.861678306497006*^9}, {
   3.861678503744849*^9, 3.861678507588372*^9}, {3.8616786013208723`*^9, 
   3.8616786370965843`*^9}, {3.861678669601473*^9, 3.861678721186112*^9}, {
   3.861678754950734*^9, 3.8616788004018803`*^9}, {3.86167888110504*^9, 
   3.861678883493969*^9}, {3.861678949068596*^9, 3.861678958363497*^9}, {
   3.8616793048816013`*^9, 3.861679305784234*^9}, 3.861679831303697*^9, {
   3.86167987781398*^9, 3.861679905466139*^9}, {3.8616813754600897`*^9, 
   3.8616813766368723`*^9}, {3.8617395699959497`*^9, 3.861739581094137*^9}, {
   3.861739627793556*^9, 3.861739649278062*^9}, {3.861739790184771*^9, 
   3.861739853935358*^9}, {3.861739888556332*^9, 3.861739896191661*^9}, {
   3.8617405349984617`*^9, 3.8617405387123137`*^9}, 3.861746342304082*^9, 
   3.8617534260681543`*^9, {3.861753517346718*^9, 3.8617535182891693`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"9471877c-6c41-4542-951d-d342a150ffd8"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"p1", " ", "="}], "          ", ";", "\[IndentingNewLine]", 
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Lsol", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       TagBox[
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tfin"}], "}"}],
        NumberForm[#, 16]& ], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"p1", ",", " ", "p2"}], "]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.861677348973111*^9, 3.8616773778054123`*^9}, {
   3.861678902725378*^9, 3.8616789285870047`*^9}, 3.861678967704039*^9, {
   3.861679009473688*^9, 3.86167901048353*^9}, {3.861679079088915*^9, 
   3.8616790946034403`*^9}, 3.8616797563613367`*^9, {3.8616811262936707`*^9, 
   3.8616811515101223`*^9}, {3.861681184802569*^9, 3.861681187367405*^9}, {
   3.861681229723638*^9, 3.861681266494997*^9}, {3.8616813163168287`*^9, 
   3.8616813172494173`*^9}, {3.8616814023502274`*^9, 3.861681420945977*^9}, {
   3.861739898555241*^9, 3.861739899744711*^9}, {3.861740083019771*^9, 
   3.86174008331153*^9}, {3.861740121277367*^9, 3.861740121492072*^9}, {
   3.861740173698998*^9, 3.8617402611210127`*^9}, {3.8617403254916477`*^9, 
   3.861740327268095*^9}, {3.8617405762581377`*^9, 3.86174057726926*^9}, {
   3.861740628358548*^9, 3.8617406513457623`*^9}, {3.861740711782179*^9, 
   3.86174071796049*^9}, {3.861740749466907*^9, 3.861740759352388*^9}, {
   3.8617407989638367`*^9, 3.861740801386026*^9}, {3.861740896643711*^9, 
   3.861740897879238*^9}, {3.8617410393594*^9, 3.861741045951029*^9}, {
   3.861741128584271*^9, 3.861741129352559*^9}, {3.861741229311673*^9, 
   3.861741229732712*^9}, {3.8617416370495033`*^9, 3.8617416494698*^9}, {
   3.861741684374339*^9, 3.861741685227109*^9}, 3.8617425809130707`*^9, {
   3.8617426884285192`*^9, 3.8617426898969183`*^9}, {3.86174282185417*^9, 
   3.8617428227510433`*^9}, {3.861742996087688*^9, 3.861742996285734*^9}, {
   3.8617430437783737`*^9, 3.861743045110508*^9}, {3.8617431343906*^9, 
   3.861743135573193*^9}, {3.86174325029403*^9, 3.861743251348262*^9}, {
   3.8617433263882437`*^9, 3.8617433273931227`*^9}, {3.861746323729793*^9, 
   3.861746337555313*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"bd4799a1-2cba-4e36-a3c5-904b80f5858f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Quit", "[", "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.86149222265851*^9, 3.861492224389229*^9}, {
   3.861681286142968*^9, 3.8616812970688562`*^9}, {3.861681353136263*^9, 
   3.86168138384538*^9}, {3.861740295553425*^9, 3.861740296886793*^9}, {
   3.861740357105122*^9, 3.861740363109826*^9}, 3.86174121060351*^9, 
   3.8617412690056343`*^9, 3.8617418576215878`*^9, 3.8617423405883408`*^9, 
   3.861748915905817*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"c1e0d1d8-7add-4971-8770-e5a0580905ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["S1 vector solution", "Title",
 CellChangeTimes->{{3.86167657790646*^9, 3.861676723504183*^9}, {
  3.861676827908721*^9, 3.861676828222795*^9}, {3.8617422157885103`*^9, 
  3.8617422214806547`*^9}, {3.861748940226906*^9, 
  3.861748946715764*^9}},ExpressionUUID->"a85e9fdd-e3cb-4bc7-96b5-\
5042be5778a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"S1initJframe", " ", "=", " ", 
   RowBox[{"EulMat", ".", "S1init"}]}], "      ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1\[Xi]10", " ", "=", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{"sphericalAngles", "[", "S1initJframe", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "+", " ", 
     RowBox[{"\[Pi]", "/", "2"}]}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]1S1", " ", "=", "  ", 
   FractionBox[
    RowBox[{"\[Delta]2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "J"}], "+", "S1ninit", "+", 
       RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], 
    RowBox[{"Lninit", " ", "\[Delta]1"}]]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]2S1", " ", "=", 
   FractionBox[
    RowBox[{"\[Delta]2", " ", 
     RowBox[{"(", 
      RowBox[{"J", "+", "S1ninit", "+", 
       RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], 
    RowBox[{"Lninit", " ", "\[Delta]1"}]]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]1S1", " ", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Delta]2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Lninit", "2"], " ", "\[Delta]1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"S1ninit", " ", 
            RowBox[{"(", 
             RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}], "+", 
           RowBox[{"J", " ", "\[Delta]2"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "J"}], "+", "S1ninit", "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], "+", 
        RowBox[{
        "Lninit", " ", "S2ninit", " ", "\[Delta]1", " ", "\[Sigma]2"}]}], 
       ")"}]}], 
     RowBox[{"2", " ", "Lninit", " ", "\[Delta]1"}]]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]2S1", " ", "=", 
    FractionBox[
     RowBox[{"\[Delta]2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["Lninit", "2"]}], " ", "\[Delta]1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "S1ninit"}], " ", "\[Delta]1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"J", "+", "S1ninit"}], ")"}], " ", "\[Delta]2"}]}], 
          ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", "S1ninit", "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], "-", 
        RowBox[{
        "Lninit", " ", "S2ninit", " ", "\[Delta]1", " ", "\[Sigma]2"}]}], 
       ")"}]}], 
     RowBox[{"2", " ", "Lninit", " ", "\[Delta]1"}]]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solPiece1S1", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      FractionBox["2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", 
          RowBox[{"(", 
           RowBox[{"x1", "-", "x2"}], ")"}]}], ")"}], 
        RowBox[{"1", "/", "2"}]]], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]1S1", "  ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]1S1", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]1S1", "+", "x2"}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]2S1", " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]2S1", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]2S1", "+", "x2"}]]}], ")"}]}], "   ", "+", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Nu]", " ", "+", " ", 
       RowBox[{"e", " ", 
        RowBox[{"Sin", "[", "\[Nu]", "]"}]}]}], 
      SuperscriptBox["Ln", "3"]], "  ", 
     FractionBox[
      RowBox[{"J", " ", "\[Delta]2"}], 
      SuperscriptBox["c", "2"]]}]}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solPiece1", " ", "=", "         ", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", 
          RowBox[{"(", 
           RowBox[{"x1", "-", "x2"}], ")"}]}], ")"}], 
        RowBox[{"1", "/", "2"}]]], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]1", "  ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]1", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]1", "+", "x2"}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]2", " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]2", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]2", "+", "x2"}]]}], ")"}]}]}], "  ", ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solPiece2S1", " ", "=", 
   RowBox[{"S1\[Xi]10", " ", "-", 
    RowBox[{"(", 
     RowBox[{"solPiece1S1", "/.", 
      RowBox[{"u", "->", "0"}]}], " ", ")"}]}]}], "    ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1\[Xi]1sol", "=", 
    RowBox[{"solPiece1S1", " ", "+", " ", "solPiece2S1"}]}], "  ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cos\[Gamma]", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"\[Sigma]1", " ", "+", "   ", 
    RowBox[{"Lninit", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"\[Delta]2", " ", "S2ninit"}], ")"}]], " ", 
     RowBox[{"fcos\[Kappa]1", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1vecAzimuthAngle", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}], "+", "S1\[Xi]1sol"}], "/.", 
    RowBox[{"findu", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S1vecPolarAngle", "[", "t_", "]"}], ":=", " ", 
    RowBox[{"ArcCos", "[", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["S1ninit", "2"], "+", " ", 
        RowBox[{"Lninit", " ", "S1ninit", "  ", 
         RowBox[{"fcos\[Kappa]1", "[", "t", "]"}]}], " ", "+", " ", 
        RowBox[{"S1ninit", " ", "S2ninit", "  ", 
         RowBox[{"cos\[Gamma]", "[", "t", "]"}]}]}], "  ", ")"}], 
      RowBox[{"S1ninit", " ", "J"}]], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1sol", "[", "t_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}], " ", "=", " ", 
       RowBox[{"vectorComponents", "[", 
        RowBox[{"{", 
         RowBox[{"S1ninit", ",", " ", 
          RowBox[{"S1vecPolarAngle", "[", "t", "]"}], ",", 
          RowBox[{"S1vecAzimuthAngle", "[", "t", "]"}]}], "}"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", " ", 
       RowBox[{"spinScalingFactor", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Inverse", "[", "EulMat", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}]}], ")"}]}], " ", 
       "]"}], ";"}]}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S2sol", "[", "t_", "]"}], ":=", 
   RowBox[{"spinScalingFactor", 
    RowBox[{"(", 
     RowBox[{"Jvec", " ", "-", " ", 
      FractionBox[
       RowBox[{"Lsol", "[", "t", "]"}], "kGoldstein"], "-", 
      FractionBox[
       RowBox[{"S1sol", "[", "t", "]"}], "spinScalingFactor"]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.861506654095058*^9, 3.861506655895651*^9}, {
   3.861676377079265*^9, 3.861676389675899*^9}, {3.861748956831627*^9, 
   3.861748977171672*^9}, {3.861749055632312*^9, 3.8617490795490923`*^9}, {
   3.861749181307805*^9, 3.861749212183567*^9}, {3.86174933307372*^9, 
   3.861749436216477*^9}, {3.861749617762714*^9, 3.861749747846842*^9}, {
   3.8617498043582478`*^9, 3.8617498052446957`*^9}, {3.861749884387109*^9, 
   3.861749961765901*^9}, {3.8617500097665052`*^9, 3.861750028915041*^9}, {
   3.8617500740020313`*^9, 3.8617500879115334`*^9}, {3.861750789290161*^9, 
   3.861750822626951*^9}, {3.861750857210607*^9, 3.861750880104459*^9}, {
   3.8617510072373657`*^9, 3.8617510154044447`*^9}, {3.861751214109706*^9, 
   3.861751280547378*^9}, {3.8617529608393784`*^9, 3.8617529878360786`*^9}, {
   3.8617530245588627`*^9, 3.8617530250716333`*^9}, 3.861753431510006*^9, {
   3.8617535125932217`*^9, 3.8617535135178747`*^9}, {3.861753623684174*^9, 
   3.861753681910748*^9}, {3.861753914492053*^9, 3.861753918131893*^9}, {
   3.861844303692843*^9, 3.8618443078006268`*^9}, {3.861844341538162*^9, 
   3.8618443839913387`*^9}, {3.861844603087727*^9, 3.8618446072069387`*^9}, {
   3.8618449046270523`*^9, 3.861844919057205*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"95fab333-158f-4a26-8378-c3f5ce013768"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", "   ", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
oayzdu5JQy5+nS/yUmp8ElT97gq9uJaHdVmO8BrPToL6nW8eEcZ5ePyqdGTg
4iTwbKNOnbubh28XKAhWfJuESf/TXF2/8/ACy7lY+uoktP+ZMuZjzsd21zR2
86yfghMf3J3tOfLx7wLdRMVNU8CemrP/T0Q+dme9ue8e7xTwpOfW58flY3YD
s9TI3VNwX0O+cDU9H78ovH+g6cAUhB/evrJRvADzrX+c+eUoY77rRIGSVAFO
MHD9b/eJKeD+O9H+8XQBPkDxzVVVnIJINtsPC7gA560POfro/BTY/73KUt1U
gKUNowpTNKdg198su0e9BbiKknTsjd4UbMtpVfdVL8RKG7KL/tycAt/9/TbM
lwtxuyEhI2o+BaVHjs3ymhRiLaKi7MqDKWjVyNzQ0V+IRzY0yLs/noLH4v+8
/gwXYqPrHVX5rozxpgN+mz4V4jmi7/SY7xSEsEYx9Rym4Ptsb/GGkClY04Hh
9iMU/P36zBmpKAZr7/qccZqCncmFRqOkKSgRwaW/71IwC/u3c4FZU5BOjAmN
WVJwwI3V1nLKFAysT/r115uCuYtYL9LLp+Dlcw1HwzQKjmLf1MVdPwVhm9MV
92dQ8N6bvJqK7VOQEiEn6dNJwRlFu3sse6fgsvCLxflxChbnOKgdOToFXIke
KgmTFFxyU3ygkTYFVZuvfUhgJ7CjL/Wy6fspcF3K/e7EQ2CghL1Zt8QYf84o
4Oc2Am8YVdZIWZkC7YXHDWL7CTzn5kQXYqKC8sRDg0/KBFZ9dSXtCwsV3u5K
PG54nsB52UdN69iocBz2fjVXI/CW2g3CIRupYHOalLZxILBd3xTVaAsVBPaw
XZp+SODBufJEiW1U2Hi75dKrJwSW+xN68x8fY/zR50xLSQSO3XJv95sdVJhR
fsHqnkLgNRHl8YQ9VPhDXYvWTiOwidzu2PvCVCif+vdZt4PATeo/rikepMJ3
QfLC0S4CHzR5I7D5MBVavkR3B3cT2P9h1vDEUSqcbAnNu/mFwIv+7hH5x6iQ
cf3uucllAmsmGOg+k2HMf1r6599XAhOk1HYNeSpslXz7bpWbxNtbufp3nabC
wPHR1ed8JE4SsH1tqE6FLeIbqrfJkZjl6MUgMS0qZPJJOV5WILHZGRH1PzpU
8P1qzV93hcTtuqucnfqM+h22OBijS+IjloPtMYZUkD1Lz3TXJ/ELlwI/SyMq
PPeVC5N9QOLlMF+Vk6ZUiNvZepXHhsS6mcYbOM2pIF4tWy5nS+LyKvnmUUsq
4Bl+r+c+JN7Zw+OVfZ8KcoNa3x/6kthldkHpqR3D3z3LrWf8SExbaWJWfUSF
ze8veGTHkFh5U0KdgCOjfu4J73EsiTP3PXadf0aFM1aRD/TiSMx5Qkux3J0K
i7EV1/VySWx18b+/vt5UEIn2lFzMI/Gbm+uq9f2pEJt946xxPomP2791PBRE
BWv5Z68Ey0gc7lss/zOECt3jQdU/K0n8MzZopSWcChfLDldrV5HYgGJWFhFF
hbsXbI6U1ZC4pgk9MoujwtObOt7UZhILjQrInEiiwsIddOBQC4k9Py59XZ9G
BbWvn9rmGDzH3EkOZlJBUc26M72bxKp8abbpuVRg/6t3Z5TBeYefST4spILE
nzbu/16TeAvS+6xcRAVyWubdhT4S2+lIFGwvo8LYnhvs5gweNGe3nq2kAs0x
aI8Xg+WcaWLFtVRwTwpZ19NP4tiQyg+eDVR4TAyMvWbwWtrLbJ0WKtwY2riu
m8EmFVZ3RTqo0O+1PlqbMb+p+9yhr91U0D4z1L6VwYem98w19FJhbsVA8Wcv
iQN+/EwLG6TCI+alAUOGv4+cvaa3Rhn97ZT8epThX2tvjvDxCSrEODKbrHWR
mJTypDHTqEAYEE/fdJCY98L1pN5ZKrQF1CyJMuoVXlC6+HWeCqqfdlPGmhj7
lZdbnu8jFXI/vAvSqGfoTve85ZaooJ6lKkSvYOjTzb0G36nw1zH9PxcGh18Q
2vPsFxVyMvmXNlNIvK3Q0TLxLxXeJ62Lc2D0P4x3sLSemQZwX5VYziExj7ME
y+x6GiQP0cCfsV/Cpv0vbeCkgZmF2bGxaIauOhsrupkG3TtNT8kzOKxQcf4i
Dw0GF4jjmxj7k5svWtqajwaRRy9zCnqTOMT5q9uLHTSQtJu00/Yi8dYZjW5i
Dw22CNh3D9xn6KpZggPCNKBoiJVJWzN0yjqzHwdpcJY5eo+iFUPnu0EKiNFA
xo/lXIYOo9/PytZOStBAceb78WPaJA6e4Va7IUUDKXW+6V9aJN580SrSVZYG
iR9CLW1lGDqlZSb5FA3eVZbP8EgzdP59kk2IBnPu8bddjjP0Z07Oc2dpcEzA
o+f4dhJvmh1sY79AgwImeuQkD4kDL0ryiqnTgB625V3ZVhJzEQEmGlo00Of4
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
Tv0Pd4vOrg==
         "]]},
       Annotation[#, "Charting`Private`Tag$155048#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "       ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"S2sol", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tfin"}], "}"}],
      NumberForm[#, 16]& ], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8617494370256777`*^9, 3.861749446600301*^9}, {
   3.8617501549619007`*^9, 3.861750171610655*^9}, {3.8617502251499968`*^9, 
   3.86175023698571*^9}, {3.8617503224759083`*^9, 3.861750322734969*^9}, {
   3.861750400936005*^9, 3.861750401080289*^9}, {3.861750614623445*^9, 
   3.861750615390649*^9}, {3.861750652522147*^9, 3.861750652821941*^9}, {
   3.861751427913333*^9, 3.861751487075881*^9}, {3.8617515290353193`*^9, 
   3.861751529607774*^9}, {3.861751647376646*^9, 3.86175164766881*^9}, {
   3.86175310261197*^9, 3.8617531207051153`*^9}, {3.861753210957512*^9, 
   3.8617532123739767`*^9}, {3.861753248534112*^9, 3.861753254545247*^9}, {
   3.861753317292193*^9, 3.8617533218360767`*^9}, {3.861753471434822*^9, 
   3.861753490161663*^9}, {3.8617535344240417`*^9, 3.861753538288238*^9}, {
   3.8617537033396597`*^9, 3.8617537183601007`*^9}, {3.861753834712483*^9, 
   3.8617538383356752`*^9}, {3.861844461643942*^9, 3.8618445284961147`*^9}, {
   3.86184461858589*^9, 3.8618446197536793`*^9}, 3.8618447303182*^9},
 CellLabel->"In[92]:=",ExpressionUUID->"136bbf8a-f698-46b3-b8be-4d0096814682"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
oayzdu5JQy5+nS/yUmp8ElT97gq9uJaHdVmO8BrPToL6nW8eEcZ5ePyqdGTg
4iTwbKNOnbubh28XKAhWfJuESf/TXF2/8/ACy7lY+uoktP+ZMuZjzsd21zR2
86yfghMf3J3tOfLx7wLdRMVNU8CemrP/T0Q+dme9ue8e7xTwpOfW58flY3YD
s9TI3VNwX0O+cDU9H78ovH+g6cAUhB/evrJRvADzrX+c+eUoY77rRIGSVAFO
MHD9b/eJKeD+O9H+8XQBPkDxzVVVnIJINtsPC7gA560POfro/BTY/73KUt1U
gKUNowpTNKdg198su0e9BbiKknTsjd4UbMtpVfdVL8RKG7KL/tycAt/9/TbM
lwtxuyEhI2o+BaVHjs3ymhRiLaKi7MqDKWjVyNzQ0V+IRzY0yLs/noLH4v+8
/gwXYqPrHVX5rozxpgN+mz4V4jmi7/SY7xSEsEYx9Rym4Ptsb/GGkClY04Hh
9iMU/P36zBmpKAZr7/qccZqCncmFRqOkKSgRwaW/71IwC/u3c4FZU5BOjAmN
WVJwwI3V1nLKFAysT/r115uCuYtYL9LLp+Dlcw1HwzQKjmLf1MVdPwVhm9MV
92dQ8N6bvJqK7VOQEiEn6dNJwRlFu3sse6fgsvCLxflxChbnOKgdOToFXIke
KgmTFFxyU3ygkTYFVZuvfUhgJ7CjL/Wy6fspcF3K/e7EQ2CghL1Zt8QYf84o
4Oc2Am8YVdZIWZkC7YXHDWL7CTzn5kQXYqKC8sRDg0/KBFZ9dSXtCwsV3u5K
PG54nsB52UdN69iocBz2fjVXI/CW2g3CIRupYHOalLZxILBd3xTVaAsVBPaw
XZp+SODBufJEiW1U2Hi75dKrJwSW+xN68x8fY/zR50xLSQSO3XJv95sdVJhR
fsHqnkLgNRHl8YQ9VPhDXYvWTiOwidzu2PvCVCif+vdZt4PATeo/rikepMJ3
QfLC0S4CHzR5I7D5MBVavkR3B3cT2P9h1vDEUSqcbAnNu/mFwIv+7hH5x6iQ
cf3uucllAmsmGOg+k2HMf1r6599XAhOk1HYNeSpslXz7bpWbxNtbufp3nabC
wPHR1ed8JE4SsH1tqE6FLeIbqrfJkZjl6MUgMS0qZPJJOV5WILHZGRH1PzpU
8P1qzV93hcTtuqucnfqM+h22OBijS+IjloPtMYZUkD1Lz3TXJ/ELlwI/SyMq
PPeVC5N9QOLlMF+Vk6ZUiNvZepXHhsS6mcYbOM2pIF4tWy5nS+LyKvnmUUsq
4Bl+r+c+JN7Zw+OVfZ8KcoNa3x/6kthldkHpqR3D3z3LrWf8SExbaWJWfUSF
ze8veGTHkFh5U0KdgCOjfu4J73EsiTP3PXadf0aFM1aRD/TiSMx5Qkux3J0K
i7EV1/VySWx18b+/vt5UEIn2lFzMI/Gbm+uq9f2pEJt946xxPomP2791PBRE
BWv5Z68Ey0gc7lss/zOECt3jQdU/K0n8MzZopSWcChfLDldrV5HYgGJWFhFF
hbsXbI6U1ZC4pgk9MoujwtObOt7UZhILjQrInEiiwsIddOBQC4k9Py59XZ9G
BbWvn9rmGDzH3EkOZlJBUc26M72bxKp8abbpuVRg/6t3Z5TBeYefST4spILE
nzbu/16TeAvS+6xcRAVyWubdhT4S2+lIFGwvo8LYnhvs5gweNGe3nq2kAs0x
aI8Xg+WcaWLFtVRwTwpZ19NP4tiQyg+eDVR4TAyMvWbwWtrLbJ0WKtwY2riu
m8EmFVZ3RTqo0O+1PlqbMb+p+9yhr91U0D4z1L6VwYem98w19FJhbsVA8Wcv
iQN+/EwLG6TCI+alAUOGv4+cvaa3Rhn97ZT8epThX2tvjvDxCSrEODKbrHWR
mJTypDHTqEAYEE/fdJCY98L1pN5ZKrQF1CyJMuoVXlC6+HWeCqqfdlPGmhj7
lZdbnu8jFXI/vAvSqGfoTve85ZaooJ6lKkSvYOjTzb0G36nw1zH9PxcGh18Q
2vPsFxVyMvmXNlNIvK3Q0TLxLxXeJ62Lc2D0P4x3sLSemQZwX5VYziExj7ME
y+x6GiQP0cCfsV/Cpv0vbeCkgZmF2bGxaIauOhsrupkG3TtNT8kzOKxQcf4i
Dw0GF4jjmxj7k5svWtqajwaRRy9zCnqTOMT5q9uLHTSQtJu00/Yi8dYZjW5i
Dw22CNh3D9xn6KpZggPCNKBoiJVJWzN0yjqzHwdpcJY5eo+iFUPnu0EKiNFA
xo/lXIYOo9/PytZOStBAceb78WPaJA6e4Va7IUUDKXW+6V9aJN580SrSVZYG
iR9CLW1lGDqlZSb5FA3eVZbP8EgzdP59kk2IBnPu8bddjjP0Z07Oc2dpcEzA
o+f4dhJvmh1sY79AgwImeuQkD4kDL0ryiqnTgB625V3ZVhJzEQEmGlo00Of4
/HvhM4ED+en5D67QgHddgFv0JwJzuaDfoVdpkAN/zz5YYOiz0eeLr9PA6ndW
T1IbgTeqfQsbMqbBysOAQ6qtBA4gNKdWbtNA5b4r/5d6AnMKZIvttKCB++ex
eL0Ehu7C8uS0NQ2O/BA3/hpHYA76jSYjWxpM6+85ZBpKYD+18q0eD2mQbyKe
ts2WwOwkz420pzQYs/0onvCAoQtYZ7c8o8FIcunahisM3bX1+7w7DTaVR89M
AkOn71Pa6EODiMbrKZcQgdnUnYOPBjD6k2x+voePwD7k0NilYBpc331yFW9i
3B+Cxw7ZhdHA18g0bBMXQ3d9bh8eQYPCghEv1QkK3jBHx6UxjHw9v+3EwxTs
ow5cowk00DOhiE8MUvD6opirf1JocKb336aVFAr2EvyetjuTBti5e2k2gYJZ
3S4toVwacCiuiTXEMfS57NO3Cmnwy25iR7AZ437VYA3wKqKBecF46klTCvYo
ujmUUUaDyncNu2uMKXjdjgrh9ioapHoL3Co8xNDdtj1YwDQYTdnc0r6fob+z
rtrURANVx9tDrfsYukYbm2QbDT44sXq5dhVi5mLhK9pdNNjsWpQk11qI3XY8
S3LoYdRnY0tvFC7ETO7DixEDDD8l0xa2ygz93TH5ihHGfqzWOvgUMXTNQO+3
4zTYwOaxlU+GoRfP9f6l0qCICDotX1aA/+04s0eIToNatZ9almQBdnGPtVR6
TwMLBemIJykFeO3d99LbH2ngVDR5b3Z/Ad4td8Adlmignfyu1E6oACv4XVHb
9Z0GznsLSxy3FWDDEU/elRUa0Cye0L4E52NH0aKp/lUaSEdYc7IG5OPoJ9PZ
hUzTcEgiUpDFPR+Xt3E7PGedBudgJ/2L3/LwsMAZRXP2abhiaDsa9ykP/7hr
w36WaxoiU7eQT9/lYd6KxL49W6fh/r+Y9lO6eVia403c723TwC5uggw087DO
tTWzIf5pcPzE6Sx/IQ/bZR89Ru6chuJhlkU1MheH/rr+J2jvNFjWXtUxyM7F
FNXAZguRaVh8U8HSmZqL30RXvTh3aBoEz949VsGViz+9/3Btn9g0CP+dc6n+
l4MnFqZWJ+5OQ3jYO5Omu5l49dSW1gqradBgMYtBRpl4R6Bi6CubaRD9tST7
ID8Dy49bG9o6TINJX8qm1PQMfPVI/AGNJ9PwoP15aH18Bn7s3PVZ1Hka3ouH
bnGYT8cRXX8qWN2m4XeXTkDJZDou2SXmRfWcBr+KhZ6G4XQ8YGWgWe07Daio
wMt5Xzr+Wu0vEPV8Gj6d22+2b3s65tlUMW3/Yho820zkSjel42M35vMuvWSs
L7vne7BhGtbK538sFjkN7vtYIjedZ3yf/T1/hi12GiKUlvEsSsPBGo82ziRM
A1Ssn7mblorz49MHa1OmIe7MOuFUh1Tc9XEgMSZjGr6ellTwuZ+Kqz+3K+nP
TsPqLpX0fkjAK6GOMd7z08DsO3KNlhiHpaXFlosWpyFFdB3e4h+HbYbeqk5/
mQaV7PvNAg5xOPdJYPLW79PgfU/Lcqg7Bs/tOP1L8dc00DcWGm6sisHCNR+1
rP9Ow49G/UnTxBh80yghK5Z5BtbHFaxt/BWFY5gvMXWsnwEWh3PEg/ko/Hjb
QI3CoRnYnnfwS5fZS3xcdlJO2HIG5BdN6WefeuL7o8EhWvdnwPjZIbN/m9xw
jhOad7GbgeBhsxXlMVc8t/sLyn80A3pc6RSXQhe8ry4p8q3jDBSGOsi/uvEE
X791+TOH6wx4hfrrx+x5gqNY16nIec7Azuqohf3JDnggg0ww852B6rhjK9lx
NnirqumP8OczILxp7wS+YYM/GswXseXPwFBv29inYgOU5bIs/vHzDOz17+Yx
8/dH+R4EB/u3GZhhfen9wCQAkT42s8IrMxByLlfjtFsAKg2QwKdXZ6CIPLHi
VRiEqoI/RV9lmgXD4jenfSWDUV1YvoM96ywUGO/O2KwVjJoirC4Fs8+Cy7jQ
cHBPCGqPETuczTULJyytRk79DUGvEz6wNm2dBa9DW5+EbwpF/SnZU5PbZ+FQ
jogU1IShkYy7lb8EZuFk0MPKy1NhaCLn0Kvtu2dBel53zeNLGJoumHsgsW8W
Zr/KjQWnhKN3ZPrFiwdmgdtMN/5EbThaLL194M5/s/DojdWGyJ5w9KVShMnt
6CzYa+ufFvOIQN9rp8dijs3Cqz0SvHHREUjpX5/PBftZeOzw9YPNSCJSYQkz
MX08C/uSfXJxThJSZ7us4OI0C3s8LS16iSSktXErf7TrLPRMcwpKv01Culve
LBV5zsJro0UFBb9kZLAtuOu17yz88P7Zvv1FMrrJr5H5/jmjHt5Xx8TeJiPT
nVwerCGzsEZbkyy9lYLu7u28vjd8Fj58ddW4Z5GCrEUCZE9GMfxtsJMKWkxB
dodUeXTjZiH19BcprpOp6LEY+8cHSbOwwPKMlYRU5CzR2hqQxsifNF3nT09F
7lI+KelZs3CflcjatTkN+ciee1aXNwvzTe/XtW5PQwGnWK++pTD83ulTHWtO
Qy9Q4/EfxbPQyb220DyZhsLPemzirpiFrNr/kv3paShK5cy8WM0sDP4Q3GwS
k47i1Zgaz9fPQq6tuedcbjpKuYTjTZpnIYgpiTZGpqNMHZcnzu2zwDOx2eyz
eQbK0z+tE9k9C9Z7fNCNhxmIMFw9SvbOghJRw5PgnIFKjarYuwcZ/b1uOrRf
MhNVmTrOvBtl7C+3JV2OU5mozly+dt3kLPD1a85UKGWipnsrUbunGayVJhX9
NRO1Pyizl5ubheempQ87VjPRa/tHmjofZkGBNefKjvVZqO+xzH/3P80C+/k9
8Z5kFhp2+sbivzwLZ9ZLjrhVZqFx16LJ1B+z8HD/Xq/ixizkZq0i++T3LHQp
zKjM3ctG+w3fvlBfmwXl0FF1A/ts1HbhwbzQOjrsMWaVP+mYjaxOsJz5vp4O
C3NPNDn35KCt+yOj2znooK6yMzH6UA4q5hZbjt9Eh/gtRbduH81BV//VXrTj
pkNLw78hjvYc9HdRO/U8Lx1kH7SqPRrOQSljc392CNJhXTIRmjqeg863OV75
vIsOwWO9dmumuehDyeb8RiE6jHfu2tvlkYuCU1PWR+2nA1ukMleWby46Hnri
ppUoHa5Wp9751pKLhlw6SuEIw692U87D//KQo9XNLbySdGDSmOA/JZ6H9hgs
m7+XokMAV4rWI6U81KDiU1cjSwepqplp1c48ZCazQzDsFB26Gl+kH+vJQ5wi
BbZmiA79KfdeLY3loYKtSh0nz9LhtNT4J767+Uh7bVB4iwodWrP1x82s89GP
BQunmYt0aGvi21jikI9iRv/2l2nSoXrzQkv4v3yEWkOPBGrTwejUQ/+K9QVo
tviAt7EeHeJemysabixAfikVE9IGjHjt0HAytAAdCdE4wXGTDq7mlFrO6ALU
84wWPGFCh49vEplq4wuQw72H74g7dPg22qkZsLMQCVzjAB8LOvQyly4qHCpE
1efjowys6XCyMubGHbFCZCx9bEnclg5k7JadlyILEatwsyrLQzqEUAV3SFEK
UdaWaynDT+jwcn/w4S3FhUj97+LvXGc6DM8z912kF6IvH9x03Nzo4KOXtvxO
kILCR7bnXfGiw4QXl2rrTgqSa8li/c+PDi7KwdfjRShovEjhxt/ndLjg5zr3
6yoFuSf3lPS+oEOSyJIN1YCCDr64vTnjJR3WNFgGmI0oqMN5xcwxkg5VR2yx
wisKum8ZiDVj6XDFV8lROZKCeK4KCYgk0sH+t5wdZwwFlZ4rtvmZQofVdcOi
Ea8pyEDqQntnBh0abov4zvVQ0JrQ+L6kHDpcqsjiWtdPQSmbbRwdCuiAYoSY
/v9/2PlVlv4LJB0Mk4QmK9kI9OF9pNjuUjos8fd+fshBoOBhMa+lCka9Ov9Z
2MgSSKoZjzfX0OGTSF1o6SkCjZA6MjH1dBA2pAbIniaQc9K7oPvNdCiDBvs+
UwIJBTvNKbXT4defDafeWBGoyWkL4u+mg1CUs9/R+wS6a5EaudBDh9dSGXyn
XQnEpS/7BQ/Q4alEZO7vGAJRlDsvhI/QYV9twx6VOAJdOW6UfHecDpfLIqxT
kwm0svfrLwUqHVJsw23EWwgUt8lXm3uWsd/4ffIetxII/uzIpb+jw1DTyFuF
DgLR5wtYKhcYfpaFum9+IlCGaNN76mdG/87Evez8TCCzu6Nv2L7RwdFAYS1v
mUCHsj6ViK8w9Peq6tu3k2j+HUuc7iqjP+faOC7ykmhx7qr0Etcc7N5lxNaN
SJR/8P4OAe456FQX0ziiR6L7Zp5MiHcO5u7zfd2pTyLxjKi5O4JzkFZuPxZ3
l0Sf6fldgbvnYMT2t1ygHYkoBxrJon1zsLXYo/22PYls7oxEjR2YA0EuM52T
fiQ6lv7RhfnwHDTa6Ot0PifR8uy6O6Lic8D6LGUuNJBERfsF1C4dZ8RnZWbd
m0Qih9tHjz06MQfzcwfIuWQSyaQp8cefnIOz/uP7E1NI9GNG/2+j4hwsLlae
6Sz6H8VmHg7l18ZxSkiSiiKi7CRJizXnRqksEYpUkpSthCRLyVYoIlmyZN8Z
Zp602Q4VpZJCKpUfkm1mmDFL2t/n/fNznZ5zb9/7PudcJgI9UD7zddp8HM4q
H4r81ECg0BMxXct3j0MQc9n7hHsEMijJqjewHgfvNvD5/oRAP0ZrM47ZjYNH
qq5MxVMCNSo9jrjqOA6Hz1o9se4gULjH++MU53EwkV9b3feGQMbFjN39h8fh
5qfgDbvfEuj3iKDOr2Pj8PXV/sXfSG5Zv1pKyXMcXDc9jw8YJFDkce2fe7zH
Yci2+tEjklGR2fDZ0+PQq2CTv/8TgQRGDnZmBoxDpWdee/8wgdrXna5tCR6H
Es+n8n9IjnGPThsLHYdh4ZrEayMEsijMDF1yaRx89iy/vnCMQELDNW560eMw
tZe6QJLkDsX2nYeujEOUTF6lC8lXjw1oRSWOg/nSfy1/vxLIsoAuWZFM1qPy
yzE2ySL/CXzvvjkObZqGOzePEui5wqov3AwynlzXx89I+wluG57I5YxD3Y8q
x0KS9+ZDlXn+OFTpVs6cJ/0XGzqQ4lM8Du9yBuePkfG9XOt3PrV8HOLYizhy
JCcdjTr8oHocuj6tZxFkfmzvZJgN1Y3DOqWO2edkPiXIC9Oiu+OwuurykAfJ
PfJtS7UfjMP69DXdn8l6pB55x3FoGofvj95dEiJ5f970xzA8DulnfNyDyPqt
+PwPFz4ZBwUTp/0TZL375KTLnz0bB90L63ukSE4/rJU085K0l/Lr4E5SH065
KEj6zThsT4/500PqSfqTk4tJ/zio+yv7/Cb1NrDG1/TEh3FYOJIT1VVAoEzX
yyrXPo+DZ9mm4SxSr8456WK04XFwGH6r3nqNQDKDVaz3Y+T63tjjA6S+P8ri
gb+T4xBoIlZhRvZDzqH+ZlUm2Q+ZYVuOBhLocPZUsQ17HA4GTUm9PkMg+Y9/
E87xxiE3t/H7mwMEurhgiuH4YxwadYQbmU4E+ryhz37rn3G4uN5Wm9hPIJMD
LQ1SghOQFuHVkradQHciK2R4QhPw1DvhzvVtBPpbcfPiO9EJcNprucp4C4Hc
3kYM3xOfANhwXPsA2f+tP0/uzJScAHF6ofr/f9+loGJfGSI1AdmHTGmGy0m9
2hqJO8tMQF/PVlAl58lQiEqAvvwE0DK+nKph0pBpoUT/6nUT8NAkr/8fnYby
u+b155UnYNZrX+sqcl79nRvN/aA+AWZ9sWJGHTTkJt/97+GGCfil/MmG8oSG
Wnc9OJG9aQIeB17/aEPOQ8WzRc/CtkxA2Vo7n7fZNBR1+/oGV/0J+C6becfx
Ng0Nt59PMTKegFd+x7qkz5LzkH6MswZNwJStQnKYHw0VSlk5/zKfgMWbZ13/
+dCQgOnWpk+WE6Aw5tN3BGjI3UtBsdlqAnYtMrI0NqKhtlTR2Lx9E8Cao0GT
ATnfG+fGLzpMgGq6WPwCKdL+189WRw9OwPCMofU6YdK++LO6Ha4TkFl52Psm
ed7AdtoKBbcJOObvxgpmU1HRsdyQv8cnQKZT9uyWHipSWrRTOCpwAnZM/Khv
uEVFMTo6vu7nJ+Bya232nRtUNOos8xrCJuB5SeDF1YeoyDx6gd76SxOAM7Qj
VzlTUUk1I0MwegLqriwUcXGkIqH+gR8jcRMg/adnRnQNFXn+aTv6OIG0X+Ss
3ryaip6q1bQXJ03AXo2gpFopKlKxz1CNTSX9N1LgfCLvA3FhlxNPpJPrx3zW
etTUo7FiH6bF7QmI2d6mvri8Hu185bhfJY/0Z6HqhUGNelTK23FPqHACtvCa
YYESeb9Q1JD9VjIBXUpud9eurUeee1Zc6qiYgBYdL/WivDr0NPD3cFnNBJj+
J/408FYdUs0d33m1fgKebLiHXt+oQ1efvqk8dZesl6X8muKldWic2Si++8EE
6Ihbr3hJ3qcsV5cFqDdNwIdXJ2osflFQOaT0i+AJsFDovPUnioKEfcMMJh9P
wIzIrL6WFwWdunUi73nnBFwzjLtZ6EFBnc22AlUvJqC9vHBJ2BIKUhvX90x8
PQHdusdsKF216Ooypec+vROw8PnLl0IdtWjcQFzbamACgt9sKf5XWIssPfgp
WoMTIFhBUzmvXosqrg9zxIYmIGdVhnSKUi0SvffCmT5C6nfI9Z+9ZC3yHmpo
evltAjxaLdPLo2rQc5ECxdopsv6PdowdjahBGpsTY5OYE2AsLVOy62wN2t8c
7XuIPQETosM7C99Vo/Dd4fvVeBPgt+ZMMe6pRqW9QQac+Qm4/kFKsvZZNeo+
6qfY9nsCbgj8XLOBvI/zJ08IJwtMwu5Spd5mxWq0LvgI85DQJFimXt5sK1uN
9v5z6lcTnYSxnLOzaiFVKOiabRNnySTYhBlMnCDfA3nSlsVtyyZhYsOJnQ9O
VqGOQtPE5JWTcC3f2Rk9q0QzG/QDXFdPgtvoAZUh8r0h82CTs7rcJLinbzoS
QalEZuYaplyFSfBY+snFzrQS+XavU21XmoQYmVxRV34FSneRFb+hNglf0l1C
JlkVqOXrco6r1iQotbmwbvRVIIfMHA9Nr0n4q+VU/CqefP/9qjHrHJ6EX34F
11Q60tFfG2X3kskpkL+yysPybzoeWxnkcJExBbUHFC++P5SBuwbbdh5gTcGM
vhEvzisD1xUt09fhTkG/5/j9bOVMnO7tpikyPwV7Wey3aHMWDttEkRv+NQW3
hofLp0yzsBv/19JH/6Ygbxk73DgqC+9ssRJIWzgNQZ2Ca88JZWPNuOw5X5Fp
cBXae7xgRTaWsJ4cs1gyDcFXV6d92ZaNucv138svm4Ynv+v3sHtz8McPV7p4
K6ZBu1Rw987RHNxa0N/0etU0OC2ZSDn3MweXnlKuq1gzDcm+xq7L8/Jw4sag
wiiFaciNMFt7kZKH/bltaYeUpkFa09J/T1sedmpadkVPbRq+ydzf1emWj6s1
f1e1nyC/T92UZxRVglNZVnk5XtNgHMqWe3y1BJ9/kH3jnN80vDp4t9M+owS7
Rk5G2ZydhtXuIk0e+0sx7NI/p3puGj6JiBwMdSnFquJXT/4NmQZGt5ppk0cp
Fuvrd34fPg1ZB7ov3FMow6xsZStq5DQoGdK29KiV4XfuQSaJMdPwQ82t6qtO
GW5Ub9fxuDoNJUtDXtdMlOHCmWXrja9Nw4bDyi/y2WX4yj23lVI3puG3hiPl
3HwZ9r1IWcS8SeYzLWfH6ppybG/x+3tHxjSo3WGub3tYjreJWU/nZ08DZ6O6
xEBrOV7zNvvzhTvTcNv/iMwvzwoscHvytX3RNND1tNLFL1bgA8LvOP8Nkf5U
xXIdpWqwi2LZuSVfp+FQt07QOvka7GpwnrN9YhpGBhd4hjyswUf27zrnQZ+G
ine5cW64Brv5SnOSZ6dBcr/WjFBXDXaP/Rb0iDMNUp99ZwaO1WKPvHtzY9+n
4aL8+77Gk7XY896VIMnf0/DPHjzhXC0+9frAnLEAHW7YTt8XX0DB3hOqQV5C
dPArHz9uL0LBvgJ8dpooHS6Obz5/WpGCT8t2BraK02Hq3rU65QIK9tfLZE9J
0uHtWt4HkVIKDrA+FSgtTQddDxHDrDEKDvLczgZZOlxenpu9Sr8OB18SDjy9
lg7J2xbVvDSuwyGZA6ys9XSIW/rZ8welDofWlwc8UaWDpUpoyIeuOhz+PIQ1
o0mHH05SKxNf1+GLI5YBa3To8OfSkwvbrepx5M9VrF16dHjwei7DxbkeR62c
OBu4nQ4FCdv+bT5Sj2O0H8zmGdHhU47Uk83v63Hcrvizz03p8GjRTHbcf/X4
qpvzLMecjDfz9I72sXqccEH9rOJuOqwQPrV/tQ4VX0v9PmNlTQdlJ60nKpup
OKnqmX+IHenPkXuXlLZS8Y3HWTNFjnSorjVUdz1DxamfvPy7nekgVZKq++Is
Fadx9WfmD9Ph+tJ2k8vnqDh9qai/ijsd1t4Ij86uouIstQ9MO086pMVF21bV
UHEOqjwT4U2H7s0Db2aoVJznEsosP02HvJOdc+OjVJwfuOdMbwAdYkRrNz0a
o+LCazLMP8F0aKf//Z45Q8XFJZOnNcPo8E15xNNSloZLmx8ynC7RYSzrUAB7
DQ2Xv0s4HRVNB62jB5o9t9Fw5YwLo+YKHXbsvb7uvg0NV4tonn6fSAfZQqkj
VvtouHbdD/qCG3QwORLJunyehusMu/x00ugQ2K/N2HyJhqkO2fRDmXRYqTm5
oyWShgk/H78rOXQQtQ6Jniqn4YY4Qzo1nw6rzBr9G6pp+P6dxX6fi+mg5CAx
s7OWhh/e/zgtUkH6c1De6HUvDTf2VPluqaFDhPeZIf13NNw8GTbtVk+Hc6el
l/43QMOtgla+1+7SwSGH7j3/k4bb1qyZvveADtkuk0fv/6bh55GuUyeek/He
7XrurUzgF1laPimv6JDULLDknBmBX1F/Tja+oUPjXeUvyeYEft31wnu8nw7b
wqRfPNhF4DejOZPLP9IhdfiqE/MYgXt/+Xrv+ELW74qF8Wd3AvdLGU96j5D6
K/hlPXWKwAMbl3inf6MD+qbhbBZB4I+WnybwFB12/xdxRfIigUvbH02/Z5J6
Wm4T+iOBwAEmt5mzbFJP03GXvW4R2PhBCEuET4eA3V8yZNMJLKx3gKP4kw7/
jmvSTpQQ+G3tFr7+Xzq05OV0////w+epr/hht4ABz7YsbxaoIrBXMeuXlzAD
TEM+itEeEFhvbc/fy2IMSH6b9mRHI4H/ZFEEb0swoKokefNjkp+vSBKirmDA
H3r+tqhnBE5P9hV5vooBEKVHYTwn8DHRvWLDa8j1tvB81y4Ca8WqL51XYED8
+MrJO30E5v9ZJCmpzADlLS7WAf0Ebg8dW6GhzoBO6TOSz0hO4jyWhg0MGOFX
VDh8JrCzf5GMyyYGDBSPv+8kWWnqslzAFnK/ZzZ0oS8EnjnhppCgz4DnqUR2
4wiBHw2ZrC80ZsANy3jRWZLjDsmpPEQMCEgQfbN8lMD2/T/U3lgwINRsh8Po
VwLL2X3QnNzNgJMySZKTJI933dcWsGHAujPDAXSSaTszNsnYMyCxY+WhN+T3
F/E5PV0nBmg1ri2mkbzbyGHbHhcG/HdYxTyF5BX3dA3cjzAgdd70QcIQgb9s
WmYc6s4AWWrPjDXJldXMHameDMi6kDjyg/Q/WPUVVHqT+Y+UPy/xnsCosNqi
7TQD2mMqKx4MEFhMLtHyQwADSlsrP6qSPJDhtZcVzAD8o97a8xWBiyQtbUTD
GFDzPv837yWBT19XsVt3ibR3dGufKMn6wgsdDKIZkGn/+U9SK4EXRI842V9h
wBapmFxRkrt/YWfvRAbcqxK5kNRM4Nsh+a5RyQwQf+SQcJ1C4BPsi0dv32TA
gXCDOnYtgXVOH3anZjDg1IVu0fBqAv8cNzzxPJsBGyLqTE5kE7jjuMyp4TsM
WLZZ+8Pd2wRO/cz3ni9iwJjh5u9GpD6POL/zkyxngJKH59vVMQRW773rr1HN
gLdfqvQcogk8Z5MWCHUMaH1g3G4bSuCWZwHBLgQDVs56+FG8CJxgbnch4D4D
Whzf7H5D9o9Ty8bwhEYGbMpO5AweILCigfilwlbS39ipEg0rAk8T05cfPmbA
u4CrS/T2Evj+xq6YN50MSKhwnx3XJXB0ZcWVyRcMsLFYnHRDk8A2ylcTBHoY
4PidfBlqEHh1vud1mT4G7Ekljv0VI/CojMUN3fcMkHpbUDe2iMCUW+tv7vnE
gEuEkSkhROBQCYF09/8YYFkmr636lYYtEocyQ7+S+lKH5Zv/o2EJoZbs1Amy
vttZeoNfaHgwMjevks6Aju0lf549pOGyH2EFbbMMuCJ3dGv4PRqWdNu4Lo1D
6qVw4L/1DTQc/ni48MR3sn6XIp4NJtPwN7X09dt+MaBrJp0jkUjD9td3Fwv/
I/vbfDztYTw5D2d/Kn1YwITsB3nMAm8aVnWqK6kSZkJr7Lf8lkM0nPrwuEqE
GBPMF7FmnV1o+Ke8dJmNBBM0V081BJPz2zP6uarCCiZQ+LzqW+o03PMtonxW
mgmPvi0sXaJGw0ZWm9TbZZmwak3g+pr15HlRN1qRtpYJJ5de8CmZo2KJlZka
nuuZEOaRVDHEouKwC3urtqky4Y7xUd15JhWPffqtKaLJhPP9Dg2Lm6h4H1Cr
P2iTfPeC4OeHVPyw9MSGal0m+DX4UlLuU7Hy4tW1EVuZQNMXifgXRZ6fZ15o
2xowgX802HBZJBXPv71EUTBhwrfTDruWXKRij+2bdViICc51UppKu6i4O2es
rt2CCbVJ/MY4oGKDf1mbbu1mQmnIomsFpuT5d8Ka6mlN2he8nmorRsXiz//q
brdjku8V6gErASq+oE3QRByZ0P6azun5XY9HU0/qfTzIhF3Jo5aUJ/XYhidz
t9qV5EktveHwesy/On6P5cOEM9NiH1vpddidnr398RkmbD71YMR0tA6/tLN9
cCuQCUenEc3bvQ5vbxAwOHmeCff/nKg9fLgOF8o0PNwexoTcxfWdqU51WOyS
l6HoJSbESy+OMXlFwedH1jR+jGKCTdC1fWMdFDy867VRTRwTGnirxRzaKNiq
OrrpYgITNikNth/fSsENEttM9iUxoWnp9dcXNlCw4rnJZsVUJoQHpTheUqPg
a+9zd7BvMeHK4W3St3NrMdfYrvVxFhP6KJ579JNqcX63fLtoBRMcoyOtrnyt
waJ6b8wGq5nwvvdxVWNTDT6XGfu4po4JWzSSFftQDR76ud3iEkHWb1tx+iuj
Grzn2PSTffeZYMKSnlu2oQYTT+7sXNfIhF8Gm/2X36rGazX2d7BbmHCt7X3s
heRqnJAkZPmknQkaL3TdKLHVeI71oDO9gwmcElXsOFqFjxzw232qiwlffgl7
13yqws8eKTzX72bCEu8AU9P+Kqyn0Ltn8VsmyD0WFdysU4XzYq50DfYzYfyL
pk2yahUWnjCwqv3AhLMp+5osFKtwoDXjxaXPTMhMb9LYFFqJP9cXWNsNMyFN
eK2zhV8ltpRyfLVujAlbfxhkxZ+sxN0v4gd3TjKB0eT8xa2lAjtFN096M5jQ
KRxfsqC2An/WZ/OTWEw4Fh+VZ1VWgU/MqC6icZlA3DyVzeWW4+lS15Xv5plw
eXCLlMNkOQ46nLL+x28m+IpdzH8zXI5/LH+6aa3gDDjuoeTNaZXjqOfzO8wW
zYCJdVNKx7py3Hgxv/642gzIyb5uiG0qwTrfptKKvWdgkyGdUfUmH0vfjzqk
wpwBG//lYztfx2GTg9e+CbJn4IXP1PTGkGjswb8V+B93Bsosbsn9kYnGiZl3
/jTPz8ClqrLEO7+iMHV7RWLO7xnQ33Jj1IYTgQcGqNKhArOgdtvyMis2HP8J
aSw6IDQLs0aXaA+swrHK6qcbt4jOwqti1Tc2d0Ow1YPuR5Lis+Dfmzuo2xuE
A5zf75pZRv57w+iorttBOOv78NuXK2dhM96att88ELdmTR+tWj0Lh/vu3Gk1
OYXH9LlTV+VmwY82tlGh8yQW+/DnvKfiLAxIyfY2u3nizaEiC8yVZyHgVs36
Kw7W2EVm+Q1F9Vl4sqz6TKjLXhz5cM2aP1qzcMuPz+5J3YUnGhsG33nPgoVT
pe29ojgkcbj11N3Ts6DiEKxJjb6Ctv56NpcaMAt/uoQJ8fwr6HDu20j/4Fmg
+cj5iIrHoxjjT2I2obPQo8PN3Lc/EVV+GsvUvDgLjGPUn51nElFPxIySSNQs
BMVkOPf/SkR8ufm6sdhZKBl7yFKUT0byzYLGj+Nn4XV79N2bhsnI/MiSZwXX
Z2Gd8PvXaxOTkc9vKcdLKbNwqcs5Li8gFaXmKfznemsWQuSs8g9GpaL7Jhp+
Blmz8L5+nRwjNxV9/rz5u3QuGY9bb3mrXRpaeMk4lpM/CyZXi+t1j6chrbW7
lr0tngW5k/E55SFpyL5lX25d+Szcy85hE1rp6BGePBw/NgvnnmhuXOl6B1W2
C/jtn5wl3yf+YTped9DtJzLhcoxZiPUsvqCScQcldOgmfpudhbj2mly2fAEK
fbbndj1nFjao+41KbChA3l3uFWHfZ0H386DvrEUBcn4Zet/iF1lvyoR/9elC
ZNmd2rH03ywsZnvUzwYXolwvp2k/QRZY3HhwtvFSIUrzHmbbL2QB+7eve41l
Ebrmc/rHtkUsaFp7+WDu/iIU4zsvICfCgoeBJjNNLkUo3C9OVGAxC3bvyQ92
lS1GQaclJb+JsUDHJtjHeUMx8j2Tt/qFOAuCV7wNrNlcjDz8NRTrJVgwQJ9d
GdxTjFzPNqilS5L7iX75OyNYgj5EBheM6bAggqs61yJcgd5cFqjo0mVBvN/1
H4fFK9DzqKS6Oj0WaCxId10VUYHaomXu39rKgm2rf82qP69AD2NKW0K3s2Ch
XXl3XncFosbqdhw1YAFacOGJxWQFqoxrfmVuxIKoAfNNx69UosIre/rVTVhw
assfYYnrlSjrav8ncVMyfufD9sZZlehGvPtXNmJBnobuG1nTKnQ1gTE9YMaC
TWe3b47YWYUiE0PnmixYcLv9iXqQTRUKuSb0s3AXC3Ymp0a2sauQ//VUwau7
WaCpnIYe/KhCp5LkF/vtZYHfXL39539VyC25UtLemgUHbHbMduZXo4M3tsps
s2VBw4VHR29XV6N9KW2Ka+xY8HWEX/++vhpZptqo/7NngfSbnXs1d9Qg05sf
dMYcWGAakSLJO1iDtqV5bu9yYoGWXLTby8M1SPsWa0fdQRbElkq82Xy7Bqmk
X9x1y4UFXmFVQ4V/a5B8hqhtqCsLngbU+59aWIukMtOdjh5hgfUSCbqSVC0S
z1p3xNyNBS2anxacKqpFQrdrT6i7s8CG0bcpqLwW/b5t4CfuwQKjxY/7nOtr
ETf7aRD7BAsKIm4u5ZlSECPHPnzgJAtYszf9n+ykoLHcz9FNXixYZ22RMGtF
QZ/zvBMLfVjwfD60tXaAgvrucFOv+LHgXqf0pa1DFDS42+y/W2dY0NrqI/Xf
VwoaZidvLD5L6qUjQmjOrw6N5w5GUANJnknbUnGuDjF2qb9oPUfmt0EkoSKs
Ds3NnpPpPk/WdyAKXf1Th+az2059usACky1h5zgL69Ffi6X3psJYMJ7rkXFe
rB4JzRxaOB/Bgv8E+W8vJtYjsdvl+4UjWbA0q4QimFKPJM05BVJRpP9P31ju
yaxHqxhoRimGRZ63uZ9YIlS0NjPJZHMcC9xPyScdFaMiFfh4DV1lwfREfFCO
BBVpTat+tE1gweebEq6H9lCRbnqQ+pFrLHjHWvglzoqKtpvi875JLMi4c+b6
YzsqMplc8jT0Bgvatt6041yhIvM0lxXxqWS+6jWNGPFUtMekzD0jjQVTFbJv
FqdQkd04u64knQVVSk/8HrZR0cFU0z+0TBacsZy/kviYio4YXbduu82CbwXP
v3Z0U5HH2Pvs1zks2OMxG180T0XeN1QmP+exIDxTRdbxJxX5GwRup+ezQERr
+Q3XZTQUPNoS96OQBV/4jaoVG2koPEmsT6SEBeVr5J6hTTQUtd15/aoycj9V
vKrLnoauDpecVakg9Tm+/1H7MRpKusZq0atiQYJKzFfL4zSUtnWHuFkNCzxa
NJ9GxNNQ9lCiqx2FrKfL8MDUDRoqTBioPFrPgvM+EXvcU2moXE/5ux+NBfk9
ysPl92mo9vPZXeF3Sf0GNdrJNNEQcbX5VsI9sn9XfDsW10xDD3UXj2Y+YEFi
Nv2T2QgNtQ4e0C17xIIJ6ZJdlmM09DSuOPJuEwsYvn66td9o6IXO7Kv2lv/n
U2qnviiB3nwwlnuDWfBmw7z+GTECDcQk+Ay1k/0k1Xfu7RICfdZ+94DxhKzv
2jC3/g0E+jqwXvhXB6mHIyPi8RsJNB3l77T4OQuc0rNbZnQIxNJqKl79ggUl
O2eWbrchEL9fhK36ipyH65+svmFLoN+RTmjraxYo+bI7/u0j0ALNomTzNyxo
t0is9PIhkGgf85N9LwsO6zxZe8mXQBKXjLSO9ZP9VWkpsuA0gaTV40PPDJB6
txXYfSaWQPJv+zojPpD2NV+72MURSClinfS1QRbMevlu5F8hkIbqmRO3P7PA
0OX28905BNLpeUQrH2KB8m7nMIFcAm0NExa4N0z2R+vIwNc8AhkpO+57MsqC
XYcCs/gUAkF3Qd7bMXL9/FR5Uh2BLC8wpv8bJ+evlMytMSqBbNYbGs5MsoAj
2xgb2kogh5dX4n9Ps8A8LOQyi2SX873vxJgs+HTh4SQ8JtAxRUUV2VkW6MmF
b3/1krRvenCzEJsFPVq+FkqvCCR2NNl0do4FMuOK3xq7CTQc8dR6kMuC9Ki7
SUPvCHQ/55dLB5+cx831x9cNECjpkd4p6jwLbJPlPFpI9vjgcy73Jzm/f3XJ
vPpMIIPvhVFXf7NgrfSDsh8kS6z6kBz4lwXFOie+mXwh0NjWZblHBNjg//Dr
ycxhAjU6WlbuXsCGcp6Adi3JqUGX7ukJscGr8KF4O8knbzY8XivMBunoMhWL
ETJfVHqPqCgbbs6JSuiTLNmj9IWzmA3GRkVlG0keZx6aHlrCBtbJLW5jQwRq
Fr/5vWspG7qDhhxySE7b8Fzo3jKST9XohpHsbfVveeFyNki9f7648yOBTH22
K15fyYbOpZXfBz4QSCrhjHaINBuWvPwuX0jydHmp4fHVbDCM5nx/00egto5P
ljaybDBZniQ120OgzLEVTvpybEj2bA8tItlvodVxpbVsuJZvGltO5heUov2X
KpL7J53WG39CoFVmDyPm17FBdov3wCWSGcdmE74qsaHX5lqLPVm/x5Fqma9V
2HB0obbY4wYC3b5ztOSRGhviTsYPbSfZvzmdWqrBhrfes5933yXQzk8vW1K0
2HDuq+3+pGICrfm54GW4Nhss6+KV///3b5aM0YeTOmzYwvm5aL6QQJ36gd/s
ddkgoN/3yDmZQHkHK+eM9diwcfdeKaskAgWd/++f2lY2KP56VBJ+nUB70lct
XbGdDVaFacb7zxNI4a7tmj/6bEgvcFpYe45A3Ldx6pOGbHiurxY2GESgLlbT
1j5jNvwZcmOuPEyg/GUcs9YdbKh/52rx05lAwTpadlWIDdrStwkFkq1sjx9J
N2ODwevAlWvNCbTu9G2fyxZseGco5WlsSKDQieD8DdakHgpDPM+sItA+4dqa
VbZswHs9K4dWEEhF9etDQTvSfr3J2sY5GvppsaaTYc+GC7lNdXFsGnrjsb/v
vQMbFgQmK2ycJedfdMLwYyc26AnV4RUv//97IMykHGTDJnfVxJwuGnLA/J+3
Xdggf6HjC35GQ+pDG0XjXNmwgfv6WV4hDf3+7Sl99ggbSryEqu/n01CvXJ6S
qxsb7knc1V59h4Yqjfo27XJnw4rnL2zTztFQ5CGxHboepJ4q05JGAmjIKdTM
Ss6TDW4XRJWOnqUhraxQZ+FTbLgcs0a0eCcNCdyv92R7kXotbipUARoa6B8P
/OxD2g+1W1ZhSkONeUMdLD826Ka+XxC/gobyPQdkF/mzQfnks8W7xGkoRvv1
GdkANtCul3AviNGQF7ejfWMQG745iapd/khFNs0t0ubBpP66itZ6viPPz7h7
PgdDyHrWTd3Y30dFUjaUFt9QNlh/Clf/mE9F8yvLll8OZ8O6mKWD1blUtMbx
BG39dTYEfgqga7eR5/+aw4u2J7MhUkL41I2mejQ66nDIKoWsh9Zi+w5KPeqs
tqK43WRDV5paYcb2elQTZC547hYbVGwfTi3Tq0epRkYH4jPYwDjyYeSXVD0K
XqBXlZvFhqgVe1peV9Qhlxeaf+qz2fC9WcB9R0kdMklbv/9pLhua/xksrnOo
Q+tcZcs+3CHrGd/7YnJlHRJSWv6DUcCGpy/XHNRYVocmp0RtBYvZsDpSv2zg
FgW9ogkUSZeyYeHWgw3fwymIGjbP1SxnQ42U4pv/zlNQuhlrj2klG3YsTk7d
QK9FoYsn8xyqyXklbJWx/EstOvr2P9apWjaITZ6PO/O+Fplnv98ZUceGVIdA
x8M7a5Ha8Z7bKVRS/653JPYZ1SIxzWeMEoL8njY527OlFs2wWuFhAxvuNshp
fMqpQb0P76e/uk/Oly/XBjvSatD9qLrJ4YdsaGj9uoxxrQbl7Ck34TWywZSx
wiyNWY0iJfNTF7eQ9XiWEp42Xo0K7Y7o1naT82JDWyL9VSWKW+0U19ZDfr9r
av+Pzkrk/Z/1h/63bMg+7y7hGFuJbCostKf62HD62d/365ZVos1njaP+vGND
tOWZBrnFlWiV/pb+5R/YULxwb5voxQr086+WhtogG5Jq4wadbSvQUKfSRaPP
bPjZX9mwbHcFenxjzZt9Q2xIlOha03unHJUfXKFyYpi0tytGoSa+HF1TEAu9
MMqGh726veNR5ch/XPDV9TGyHrlxFTdelSHHuh+KheOkXqwy3PVby5BBCPtc
wyQbBKdqxyrvlyF506lnz6fZEBS0yerPr1IkIDwi94XBhleZf1+tYZeise4P
Z9kzbHj9oUNo72Qpui3WFDPKYkPA8SSeyIZSZLP7TkbfHBs6tA7rm60nv4+7
XPmUy4b47L4XjbKlqKHteNM9PhtSpsP5Q64lyPuPxevyeXK/P3WLAvaVIHkj
tZGsn2wYj9qaFb67BL0JEeUm/CbrL2vz9VFiMYq9Oy0c/pcNCf7+I96hxWg7
65Wsn8AcfL60pbQrsBhNa9drH1kwB1qnnX8kNhWhfJ+byFZoDryVV250LChC
DuXnHEyF50CwUUDry+0iJPz1wMlNonPwn95Q3K9/hahR0SB0ndgcnDv/4Inz
k0Lkf2TN9eXic/CkI/j8WHMhUsr+fWeBxBwImw1uSfcvRO6e616t3DgHB1fb
TT7szUSff3ppbPebgxpB2UNXPpxBwd5vL649MwciGUdKvtueQUsHjN4KnSXt
731icbjHDZVblKoyAubg0ES6kO7QEWRKWxreFzQHf7Q+0hPoh9GAwoXXjcFz
cKlPrvTDkBw6mzSsVBwyBxLOA8ID/opY9OfeC+STDgwNBYX0etVwodfdlwHh
c9D2Yamoc4sjPtH/178mcQ4eC4wSpj0X8DQl4966yjk4eUBOdunKFBwj92+x
aPUc5BXK5cq6pWC5RG+32Zo5KHunVrrh8E3cwH9LDFDI/RZO/17odxPbeBqL
tNbPgcWd8809MTfx2NvSw2W0OaDca/rdtv0WvoQkqEl352BuKWO6du8tvIpy
QSj43hy8Z2199ejwLVy3ZsTl8IM5uEML0G9fkoEtE6wo5o/m4G/Oz3Wyqhn4
P95dQa0mct1pg5/11gwcemLtweUtc7A+2PW4TF8mlnx7tXq+lfTnp4bMyO9M
HBiv/Tujcw4QNVHpvy+38bz7E/Ml3+bAyCFF+etYIS64wPwiNzEHZ7wN8pWK
i7DljdVh2lNzkDvln5beWIQZpWZSO+hzcHp+5ZVv7UX4VpNfvS1zDnTdD3mM
xRZjo94MK7fZObiZrPDpYHoxHp7E3/zZc+Ci5dcsnleM4/9NRV3mzIGdXXFc
nFsJ1lklJZ/KmwNL9PvGjG8Jfqdt+qDw+xzEPpE6setcCb5o4e1A+zEHkbRI
mtbWUqzsmsZs/zUHtzfaNRialuIXAc0JvX/m4EZk1reE3aVkfOPKX//NgYHl
NkbCojIsky+JOYIcqHTGmaskynBrg5GrkBAHtO+dFafLlOGTLz15UsIcKGpM
0xnsLcPiozdSVUU5ELukcubEYBkm5h9u2C7Ggb1Xr0e2TJThQ8u+dlqKc2BF
63zshrxyLKC21MNZggO0GCkhwZJyXGGi/8dLkgNsFaW8vw3leJ/j8duhKziw
sNW4/PzxCszzub4lUYoDzxMd33Z7VeC8qHuvs1dxYE8ut35RXAW2yPrPp1qG
A062jwIrlCpJ/S1e1LSGA29X39eq0ajEqU+3FL6U58AN2ds0++OVWP/TUePP
ChwQ5cnTqv+rxEPs+AHGOg7YLDzICv9WieNEicA/ShxoXX2ws8e5Cm9Q/Cwu
ocqBWrkz8aduV+HebcKVCuoc2OSZ6LQuvwqH2ehabNLkgOG8zPWETdV43QnX
IbSBA6sK63GbTTXuDIsLs9/IgRzHu3uiHKrxmdQ6qeObOPDP+Vh9Or0aS1V8
qA/czIGd6o4p+b+rcWPLAuuYLRwIE/TfHLOgBh/v1x5P20ba1yjMlc+rwaL0
g9El+hyo8zdf+q2iBtcLRss3GHKgpr9Zc3ldDT4oU/PgqTEHJlCj7MVdtfi3
zjuHdzs4cOyuwuWwfbW4ZNc/5jdE+vdrWYjCgVpsdUQzkW/GAebuHBHeZC1m
BTmqiOwk448eSTZj1eKsxEt4tSUHkil3H5R/r8WmhRWuGns4wBNxseNcpeBv
99/yDKw4IGa98rRyMgUndf9K3WvDgd8DC2xaMyhYb0xV23UfB9zf+VByFOvw
x592z3ztSf+9IjmLVOtw1PJwjwgHDiy3vLH17qY6rKZR+ue6EweuXIrmsYk6
3G36+nbeQQ40rN/W+uZBHQ4+ML+F4sKBZYuahS911mG500o9La4cSA3XJ1Vf
jx/H2Pi+PsKBz9NBpqd31WOf7JBF/7lxAN0+4xJ7tB5LUgsLZ905UFr93vxm
Vz1+0PnCWOAEB1osg9+3d9djty/cAcmTHNih2VSiIkDFQlyFoPVeHPi2BBW5
qVFxjdjepXo+HNiwR+PvUQ0qVso86qXox4EeSlKs2C4qvr0+qF38DAdOnl7S
OOFJxRKUq3I//TmwoC/GmnKKiuMMcs9PBHBAc+Bx3tEAKv75pL6nP4jcf6VV
TGwhFQfaPdV8HMwBDb3ivzuLqXhy8ENsfQgHgmqu6ypWULHbKeaXvFAOnDvH
ZVt9pOJ+tqDBtXAO2Ee3G8l8omLrS6vSLlwk9ZSSVm44RMWPRTcwPCM5IOXf
aqizjIYN0pGlQxQHnPdxI+SW03CdolMhiuFAlKjkJa+VNKxa4/1TO44DuZ+i
l8iY03De9ktOa66S9iVkzXbupOEVj2/WiSSQ+i3bum2VJQ0n2JaL8hI5oByn
1/A1kIb/fWj0GL3OgTNGWh8Tgmk4xLOnuSeZA1uHz4tJhNAwY/brqpYUDkDZ
s279fBr2iJgPqL7JAbsHR82Hi2j4o/DSl1m3OHC36Wa8XgkN26etV72SQfbz
U7+9uIOGO9duvxyURepl1nq5+SsaNqmy+ngsmwNNW1M+BnbT8N2tx7bY5pL6
PuBfs3OUhrXaziUb3eGAZ9+KQ+UcGi60TphQLyD7Y1f7Zsyl4VXv88ykiziQ
Lre49+ovGk72oOUuKCH1p+eRtEiGwEIzHbzZUg4MGDXHS8oSODxs0O5LOQc2
f2xR0ZYnMEtotupFJan/s3Z7XQwJ7JW6UOhhNVl/HduMo0YEHpKTcSurJePd
pxe9w4TAThXaD9PqyPyMpM9kOhP4hZ7ZiigqGd+45sECFwKbtR44fYbgwFnf
+/+mDhH44V7fTtcGDhxO9sp9GERgnXeR6/bc58CXBvOnPecIXOp+K3zbQw5U
C/6dfBpMYDlGRb9SIwf0Fu12ol4jcNqFZh3JZg4k1q++O3WdwKIL3yb8aeGA
pO1IWkUSgSNvfBudxhxQK5Rs8yggME/2p8mHdrJ/b+U3TxYS+HSZRFbHEzJ+
s82ll4sIPKqrzCY6ONB1WlL9HJXALs361oXPOKDTO2LYRRC4Z7dNWXIXB47k
Sd8yv0tgyz73f+EvyXwk3gzQbSZws9v5Q97dHLg6NbEroZ3AetOJdw/0cEC8
Rz1liuSq8/lLLd5ywCQyuTbpKYHXCd710u3jgMWZ2m7lbgJnJj1rX/uOA3+5
uZNnSRaX+Sy35D0HlhqfSPN4TeDYEtb5+Q/kPDQfuZ/zjsA/dRa9+TZI6vOD
2eFekgMaZbX6PnPg+mA3z2SAwOO7dOLahjhQIXHAgDlI4CNvzYcowxxQ/Oj2
QOITgXuPOBvkjnJg6CsKMCR576RfWsIYByIdQoi1Xwj8Wt5sS8E4qZfi7n/K
JDvsX9V/b5KcnzfPF2mS/P4KPfjVNAdS1nV0Kn8m929sk/7KIM/PhX+wGMkj
Mxn3f8xwwKxTQP8duf8pZT9nSTYHOlYVcVnvCUx3hnk1DgcEjfyIVpIDkqSz
d/A40K86Is8h/ee1TRs6fefAmj83Hye+IfXJw4O+P8jzTLucgUj+q5kREf2L
Axe57XbvXpH5cfOVv/2HzLdFgw27g9TDLdRS948D9Iw1sTdITnom5dYhyIVU
AfFvp5oIvPz31N9PC7nwROG9rdZDMv+6uGBuERfUH23bVv2A1NvJdFgsygWF
RcpzQlUELsz2GVEU48Idz/54/QoCq742jdkuzgXzSxsbb5YTuHqBlLKtBBc0
M/p3XEgn8Cb9qScnJLmwWcF5Vu4WgRv8Wj3DV3DBM+aKklkagQ0Kby26KcWF
o3D0lsglArf0e5dXrOKC+6MVzYMRBDZfbLq7VYYLVg2HUinhBO7csXKyfw0X
FnhMzqR6ENg6aDKBLs+FpdR+7wvHCfymvEVzgSIXRgtCQh8cI/CBT2kvZNZz
IY05NyC2i8CDy7z9NilzoTJvQTnPgsDHdu4Qt1TlQmFSZswsEHgsdAXliDoX
LoW5zQWrENiHMmF7TpP096i98SFlAs+MNM8kbuDCdOimj9LkfAhalZZSuJEL
faPd0r0CBP5u5aX7YBMXlhN7X5f9o+GLl03edm/mwqZDb3riJ2lYoGF50NgW
LsR7RNSrDdLwlcnxFb+2cYE10HZ+6AMNi61tvrvcgAsGabl/Ne7TcMr+m04a
RlyI6ZLSDKXSsNTVUzxTEy487m0dFqqn4exG48wDplzYtyN/DMXTsMKspP5p
4JLvs7g7r2JpuER5/H2MOZmfb9GRq2NoWMOlKTR7J2nfNtCk8yAN1yalylIt
uRA6+o+i5UTDm9tPNnbu4YJx8Qu+uAMN3+cZHf5ixYXsk8OrepRp2EhL8jfH
hqzvfZ/j2etpGLt9yxOz40KN8TfhZwo0vPNW4471+7kgQeOwlWaouOtZypC+
IxdWPB5asI5Bxft+e17ed4ALf1RWLxidoOI+XaN1J525AC8Do+/eo2KXk8va
Iw5x4bo1m9dxl4ojFz96puvLhWDxmy9bv9fjSX/p6h2nuZDytCw7iVOP9/cH
Jln5cyGTFaJ9M6oeNxq+9ncO4MJ/NM+NEFiPVQq09nsGcWFx49nSltP1OFko
fktgMBfyogNObGPXYb7PV+nIEC6oLNk2eu5bHXbvQfPXQrlw6MfHiuThOty1
NW8wK5wLN4oMfii71WG9nPnm0otcoJZ/lQl0qsN5/5wKaJFcCHzePLnUrg4v
OkmLbo3iwsHT8pr3OynY/8VSz5cxXDhb7/3JrpWCP2zytfwQx4XIqWd5tg8p
2CyjU+PbVS509H/5StWi4OqfSkvmErjQFm8joqlMwVLul5l/r3FB7EAh31me
giM7PvUsSeYCP4VhL3StFk9oGRAyKVzY5vVs16rYWmyfmp6uepMLvxoLzupG
1OJGHitE7xYXaGksz4axGqx82PYQyuDC2rsbFuoN1eCktipjmywu7DZ/ufll
fw3mqworHMrmgujz+r09RjX42HUPgVO5XMgRsDyZtbUGV9/ftbK7hgtf4uNF
wpWqsJR8Me8jhQvHj8u8yJGvwpei/74fr+fC/qWPR6R+VeLxcddGDo0LBb/a
Y9W9KrG9zYM8gQYubHCIFrIg7+uPaCsvL73PhVvgGJaoXImVVgccX/OQ7N8y
pZW4ogInXXxlod5I9n+nX1FHEfleGNFQ29pM2l9ipheuV4Hddl8RNWvlgv1U
ht2xsXL8vHZk2raNC+GVsV0wVI43rzDtdn1M6llQNV9/TznOuZBT7/WUC8IK
Yb3qa8ux0Bf+zeBOLiSE7GnoXVWOz5g7Bkc/54KvE/XjnjNleKCi/uCNF1x4
l8eTMnQow7BU3DD3FRdqDY54ZFuX4eogb7nK11x4qrfxhkZWKV754emfhjdc
iN251qUhthRf3LF+uL2XnB/hO/WIi6V4vPjS49f9XLhQV2st1F6C7UUHSz8N
cIF4++9mE60EPzqzPX7yAxeYG+cNDKtLsFJfmg9vkAsnn3+ma08V4ySDWesF
X8j+CH13NPBzMebfsdZZ9h8XmpIP6uzpL8bHFlZKyo9wQVVDhVi0rBg/9xbi
aHwl56/bJHN+YTHWe+3+bts3LnQtjkvh/izCuVtaHphPcKFUQ9PQRa8IC2XL
5thNcWH8R8Hf8xpF2P/v+YtH6GQ8SVObbBSK8PsTvW4+TC5s9/7ySNaxEEua
ygo4znJhRCuhJ8yqEFvJuBeZsLmw8ofM03tmhTh2rtxcjUPuf6TOt46ej5tf
Mb8u45Hz0id0g9G7fMwr33rlB5/sx/2v4vQ787FOdITa13kuXNzy2sdR7w72
Ovz42aufXPB6qDHmK3kHF25b7HP/NxcsaCBCW3AHf1xmL1b4l4yvFsLTk3Lx
iunMmkQBHlj2/Igat8zF1k+/2JxbwINDVqcrqgxzcVy+yswRIR58/8b1+3gq
B3uLwLmF4jy4ty3S4kJFFp6vpsTf0eLB8vlfb/puJOE1cwnUt148eHFYduVL
sWDkcT719pgPD5h271/sOh+Mquazor778aB8p1H6dGQEYkUUeIv580A6vHZT
17MIZPCv3H5tAA8GDedFWI4X0eWYOgPdIB6c2lH/qiU/GnUuur/OIpgHJwSe
Oqq2RSOJxBbRgyE8iK0KOT6kGYMOiHewvEN5UGIWaPMz7ApKVRPcLJDIg1T5
jWmr1qcikcNhNJ1qHsj0GwQpP8tG+4aiss1qyf36bzzSHs9GmccTop3qeGA+
e2Lb6oRc9GUsxceLyoMUacq1+axcpOKdtT+c4MF/CjsEJp/motP0fMPkBh6U
bWuSOXHgDrrrX76+8D4PCi9TPm7zvIN+simL7z4k4+c7vGu9dweZn7/H7mgk
83fBM/Pw2gJ0bb7544dmHgT7ee7J3FCA3kY8bae38sCpWc1gAbcAyfx7WfW3
jcyvtLXj1NlC5B7Td3P5Ex6YHLy1kBFSiCoXfQpT6eAB0jJ71KhYhGYTRo/r
P+OBmoiByZ59RWi7+PReqy5yvUhV59iBIhSZwt589CXpzzBRiFYUo84VP2QD
unnQbX1EoFazGC3NFFgQ28MDxdsifmKbi5GTrOh0xlseZET1yz+YK0Z5ect6
K/t4sPXJ32auYAn6qri6sekdD8x0fB4NLi5BWiUKxa/f82DRxWs/i1+WoCA1
tWsjH3lQ3f1uVvB9CXpUtTGI+4kHv8qcv774rwQJbNzmKjLEg+xH6MzlglK0
h2pivmaYB3IXZ1lEZSlK2bJTa+MoD1jar405RCkauG+9AsZ4kHlCWV/sbBlS
MHL86TDOgw0pfnsnQsrQyRbX0ZOTZL0k0sruxZahWvB4ETrNg1q/SfPLRuWI
+8SHuM7gwZMc4kekWTla0nz4UMQMD/bR3RfP7ytHSg22An4scr/12cZhAhXI
sBZVuM7xYPincdIGkQpkX7p5nxWXBwFzi9TWLq9AXnnKPEM+qWf9wxcy2ytQ
ZLp0nuY8D1bHhjku7KpAGUkiFrI/eeB71lPl95sKVBv3Y0r0Nw9K3TMWoshK
9OQiPXX+Dw/2nIsjRq9WosHgL/qT/0j9cbihpcmViH26Z+i9IB96Fpw6NLat
ComebL/ybCEfCtuThCugCikevav9YBEfHE7OrymwrELbD5T1lYvwwb9HsRpN
VKF9tlnhmYv54Ii3++rwq9DJXYnrry7hg7uk5oriX1Xo4o6I5+eX8mF+ZqG6
7I1qlL7tzNmTy/jw7ef6C84V1ahm47FVB5bzQabi7PELtdXoser+lp0r+SC0
pU9MWqYGfVxr4blVmg9iRxN5Ak41iCW9bYnKaj68LBLQ57jUIBEJdWKlLB+2
6x9yPBxXgxSEZQ8tlOMDfQ1xfPHvGrTtr5gAR54PjD+KqbMCtciG/7t8VIEP
i3sjDU9K1aITMzO2vev4sO4/Y5l9BbUofHyY267Eh9+9OqusSmvRzaHeXJoK
n7z/1N6WptaiyoGn5kVqfPJ+mPG0agcF4df3p1I1+NBlOv1r1JyCBjorU6O0
+LBziCq425qCmK05+gHafIh4uFSOPUBBQg+Sho7p8KGo8YdL3mcKkquPvGKn
y4dLeEu32lcK0qsI0EZ6fMiJFDOm+9ahvQUefTpb+WDibdh5KLAOuWc5hSts
58Pp4VGHJyF1KDTFcr2EAZl/yTCLHT/qUEq8wfM/hnwYnHCTFxCsR+WXtc4y
jcn1HOVtlEX1qPWC/KovO/jwyFx9Rj26Hr07K9HyCvHhT3mexfnr9YjhJeDZ
bMYHP6nvO0tS6tFC9zmxWgs+RF0f6d0uQEVrXMZoubv4MKkXImQvSkWb7Qdc
ru/mg0GOnYKJGBXt2fP8X/hePqw6sODDo+1UdAway32t+aAtbft9yx4qCjGo
tXW15cPJwUN+QlZUlKybz91rxwe8WUGKe5SKSjVScw3384G9wve86xUqaloX
Y67pyIfDvosfy8VTUa9M8JTMAT5cMBE7tDWFiqYkT6WKOvPhwJerkQ8wFQks
dtGfd+HDgK2Zzvl2KlotaDU04cqHp7Q9EYs6qUjnh/GV90fIegofu2f6nYp2
sTdqP3Pjw3ScjfCiH1R0ZEqx7747H5Lmwnzkf1PRuZHl4eUefFjtdDZ7dAMN
Xfu4cH2mJx9+hH3Pb9tIQ8Vvec+unOLDrfVwc7kuDT3qmvA/782HupBFz9KO
0lDDnLvzYV8+WNk1p2UdoyGq3CAyO82H7OKfXx2P01DtTkcNdX8+lMrwOU+v
01DlmVeSSwP48PC7lFTEDRoqzdz1Yy6QDwUhVx1GU2ioALeOfDjHhyWrPvBv
36OhnEn9F63n+bDnRf8z/0YaylxOI0ov8CHXJHN5RRMNpRlp5V4L40PTw367
R700lHyiJDYgguwf1PfE+ysNJSTJnz54iQ+HEsQNE8doKO5ehpPJZT5I2iZ+
WTJNQ1FDEjuUovnAWVr/2G0xgS6KJKiKxvLh/dV6tzAxAoXqCkrMxPEh3LP0
86g4gc4dCuf3XeVDn4Rn/E5tAvnHcIYeJfChQX7H2dMbCeRbc/pZwTU+WHz3
/TWhQ6BT/d/qrySR/eb3XlPEhkAef9xu+93gQ9UqkQeHbAlkX2RhtDCT1MeP
3TwJPwLZvGhWmsriQ+zEp1ufogi0m7NtSU82H/YHJWwWiSOQuXw9pyGXD6r3
zt14SLLpLo3POXf4oEPZ5lWUQiAj/6KnUQV8UCyzZzblEGh71hrKqSJS36XW
As65BNJru5VhU8KHM+mhv0fvEGjjlHikXhnpz6fXIY51BNJYcfWUTAVZv3+B
0iMkqxj/2/e3kg/nGp4a/a4n0DrPUP2xavL7sZ+2Xa0Ekk9mK76o5cOYlmO5
PSaQzH1fUWodH/69rUdzJK/87ysrg8qHNe949jKvCCQhevRjBEHO38Z3J4v+
/3uTzQPtxxvIepntKxDpJpCwq1317vt8sFuppqw/QCDB2OdpGx+S81LrxYk3
JP+uMYtY2ciHBe+0j6x4T6D5/sYTP5r48LhCpP3fZwJx/2yx+a+FDy2Ud2Of
vhCIpUbZ2oHJed1wOX7hEIEYdmpra9r5kHk5fWfffwSaCC1YdPMJuR91efiT
EQKNFsnMhPyvomuPpzLdwqhcClHMpFKDEEklpdnRWnZUKEKRXHMptyj35MhU
VJTBJI6iok3Ytr13Rrn8fDIlR6gkak8u0dlKCdF+v5A53/nz+eNd7/M+61nP
+vN9LMHoTYMBXQzua83s9njCzHNDe7LSoBBEkwsp9n+Y8xH3Yy4yuHvl+ZK1
T5n6matqfmNwp/WP35XbmbyJqNGMZHB7WEzcVIcE940pOm0YEEJLzpiP6LkE
1WKnti1k8KPGQJvGTgluSvPQ7Wf4NH58t6m4S4KBQZN2j0RCqFvivvxytwSX
lsfKhjG4enuXTMRrCVbEyOD//7sQ+u/75CqSYMl1PcGJTiHclje5MvZOgvJG
vIsdj4VQJgqpnxti8lmqbegIg6u4nE9KYmbfPfBLvFMjhIbE/uWaH5j8pP8+
xqtm+O3XsDUaYfaZwkM3XQZ3ajuf2v6Z8UNtnFRqsRDeTl2+a/uF0bcjrivg
jhDEzc09buPM/Ii3W9cXMXrnSskFfWXmIeWeSl2GEKaDWVvjpiRYH6QvQ6cL
Yb5FVMAFiQTDRTMCfQYrL+ZdvUZL0LX5/Bs6lvHPu+G/ONPM+4onswNjhKB9
T2uyapbh2xahHhgtBKNkd+1Hc8x5reuNGzwYf7tmO76UImiUtuJu3WEhoMGz
pEEZghBffzLBTQi2M/L8ifkE17dvLD1sIYQD7ex+KTmCrn7Sj75tF4LXzQRl
FQWCpyaXJfuwhBB4stpi9SKCCVeOr4pfIYSIneOhxkoEW+C0eMVyJh/UDW9Y
LCa447x9pvwyIaQM+z3dq0rQQxzinikRQEZN/rT7UoKnRyPjN39j8iutxyBE
nWDVh2x9l69M3nmqusX/TLBBbrMup0MAvA12Fy9pMPfLZDuz2wXwQDr5fu4K
gn/L/D4x1SKAppcN4hJNgpGacrZ1RQJo49Dq91cTbLazKbYvFEB3rIl1sxbB
xu8HZ7ryBDBgExr1Sofg7kQ5P1G0AEZWFBe91yVY9nb1rFeUAKZG+zsn9Qly
yq26nP0FMEdpyMwzJKgxKnNPwVoA8lnOm5YYEazfZacdv1MAS/yv+GgZE/w4
7ZhqrCOAlVuf/L5xI8H9j62WOqoKQE9emgITRv/DZxeXLBbARhHri70pwU6p
3Slr3vOBxY3S9NpK8FFH8PADER+sEnl7j28jGNWbWfv5NR/s9384ncAiqC19
Vf5oCR8OaWuXp5kTTK3qU7O9zQffKXdR3g7mfSMN3Y43+RDanK1QhgQvp1+d
5AQx+zb32bYaNsF1KjCrFMCHpGCFwBYrggKzTJ+3vnxINd+Z07OLoGxdP7/L
gA9Xlf/VLN5D0P4ZJ1JZjw8FA9XfvtkSlLO/8DRDhw93heNrFuwjOHrFMt78
WSUIzxseUHMgGPZ239nylkqod/E/p+NIsC1P8GqgqRKa1xYITZwJZn7fzeuw
roTn0z3vLA8SfLJX37AXKkHUpqrq6Epw0HJY9/O2SnhfYIc+bgS9zX1fOd3n
wZcTyeHh7ox+cz9kWwQ8oNlUQaInQSfWiyMrS3kgo/69/Yo3QU23D6XtOjxQ
HDb5ceMIQXPW/O9nV/Hgp5pQI64fQbOs/crzlvLgl7Ri97oAgu5/OXftTauA
6RetNiXHCJ49GukTnVIBL5eNmf0RxPTPyTBInFABXO+lemdCmHp90UMlY1xI
KTZTCzlO8AHcnFg8wgWfUXcZ13CCtUPWIa2DXGCZJo2zTxJ066bFPAcuqJ2+
02ccSXBB2nBQ1x4ujD5saVseTVCte6Kqms2FZvnRWtlYgjcWXT85n1sOtxxU
S7/GEbT1v60yWFgO8de25PTFE1xT5nTSN78cDvS6JbcmEMzrN3t6WLYcjNck
RlYnMnq2tVa60WUgF1J4pDCJ4DPWxCe9yTIYEDQ7pJ9l9PNSevUmoAxq6RGL
+PMEez9POXnZlMHBoxt++bWIYKui9SWLfxeDcYWzsi6H4JbNBXl7s4pBfip2
VqWE4OxD25lf+zgwyLoxMnuXIJu0v8t+wYH63xpffygjuCi5t4v9lAPXWt43
d3EJBrjv7vNfwYHwxQp/NvII9hctbDogy4E9LuuLuHymX5bL2HZSHNDOd8zM
FRK0mMuQdg25A+MvI2XohwQdT+foKKcWQqrlg/fVAwQNct/ByKEbUD0+T+Ht
IMHCPySZ8gN5MHjTYb30fwnemZwwc8nJA2WH6456w8w8pM+8kb6QB6w5cbTd
R4L3HPbY6A7kwtEKk7wTnxg/P/1VMacpF7I8EhuyRxl/bFk3Z8LLhYZFrYO1
YwR/25y/oPDHNRipVZcbmGD42hoV1n+8BramkQYK82iUGbl0P8s1ExbqG4e5
69LoVu9w9bZKHGztPpWVpE9jpfLx9JfxseCb/LiaY0Cjkm+rEq6LhXRT1b9b
19EYkWKYM6VyAmqHPP4ZW09j/pbpqtKQcBBn3dVR30jjpaHxlIYLYbCEPbWb
ZULjUt0Jk2/BPrBjAkK9TWns4LTe5d33huBbaRnnt9Iotb3TaO8bd7jm0FNV
uo1Gl8euolcaGtA0p/2mg0Xj7Naic4dKpeFLRdiPSXMaY5zWaInZztRyz1ot
DaBxxLv+8cabntQuRdldOyxpfOY7nh9X6kVF1DkG++2k0Wp5WYL2kuNUQXB+
+kVrGntCo4+KfcKoVo2PwordNJoFFjksmQmjJC2mPZ02NCqomDx5nR1Daccl
zRA7GjUdzpQWfIuh7PXbVmva01izn6f42TuWiu/+2Yq9n0Y15RmreWGJVHGy
X+AxJxpfxFzkzFYnUp2mlZcvH2DqGSRdXXvpDDU3NM0XuNC4PSaAKtU4Rxn+
setV9yFG/3UZLB3WOcqFnfV95jCN09Uvwn+xTqbOTvRqannS2NQ3vGqfJIXi
3TJg7/Jm9Py+z7z3pwuUyCH6aMgRhr/nWJT/iVRK9p/G1Aw/GvWynvs1tadS
JjzFyj8DaAy9rRNz42sq5eV56KXoGI3Ox3KjPMLSqVTFO+SfIBoH51k+0LqV
Tv0Pd4vOrg==
        "]]},
      Annotation[#, "Charting`Private`Tag$155048#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
dwS4J5DnKUb9GQyk4j35pl/PJbFhI9enxCiIip9vP7ftcDIb6OC9OSGLijXq
btzXe8oGRS7zPb2YitMOhY2tf8aGZU4t7pqlVCzXnWIgm84GY2Huv9e1VHz/
AjVZMJMNu3/ZrxDooWKhqXfc6SzST8Jm7ZpfqdjHu/fI9xw2nL93S/3uDypm
Ck3nf8hjw80GWyeZf1R8OXqhUEUBG7YV3HfWEyDwD0V52+wiNkzq31H+J0jg
E7mbK2JK2DDv7bB07ToCf9AxkA6ksOHhPl70AVUCG9SevHKVYMNZpRei0uoE
rjjo3GBTxoZ3USyNVfsIrPnFX/lAORtUTy9tPWpM4Cy7xz7/VZDrQ7ufJpsQ
WJGe26lSSfonK8J79jyBY25Va0pWs0Ep8XPOEXsCiyxsD5uvYYPViN2Vww4E
9n8wMjiJ2RDS+5//Uz8CcxXm9vS8Jv2+yNF1jz+Br2RLJLx7Q/pVrX6FSACB
B7XXsYh3bMh4Xrer4TGBrap1D6U1ssGvYZP+8ngCt+43y77/ng2no2rOVpFs
0mH3z+cjG/ZWR5ttzSFwte1Na8dPbDh6atFwawGBdSbDn59sJf21vE3/bCGB
82+mihu1s2F09NCFc1QCKy94flm7gw3s0oBp12oCx0c1vl79hQ0z5sYDoySL
yX9TXNpNztMNHindtQS+m8m8OdvDBsPCqXLGBwLPaS5qG+llg21k/anjHwns
Vqmg0fGNDUOfNAr0mgk8aqwZXPeDnLdX5YJNuwh8pt3wR3E/G2SW9cynkvz5
jOXO5EE25DafjVHsJvDBcZeYsGE2FPxYyAv+QeCWVQbbno2ywT5dRugjyceO
ynW+GGeDXItph8ZPAneH0DyaJ9nguch0HzFEPr+yTnaITur7TsP8M8kDU3Hl
v6bYUPJ5KkF+mMCX1rlYSrJI/yaobc0ZITDNEmbV2Ww4HNxemEeyW5Rskj6X
DTjz49n/M7ductcJPhuKHwt2O5D7fbi41/kXG46XOpodJvnvxjjfO7/ZMHDa
6jJlkNTH1nlV4jwbthdovGSS8Yk8RjUl/8j7Y+jsdUxyVKOM7bsFHNg7NNI1
9ZXAUn8m/vYt5MDFg1Oth3pI/bXxs5lFHOjUG9nwl9RD8WIsLBHhAE+Max7f
QuC0JKcBJVEONO/7IeX1icBqLXuDdohxIElYuXIxyQWCMusOS3Ag+sOt9Y51
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
+EAHVXNhLniGv2x4PUo=
        "]]},
      Annotation[#, "Charting`Private`Tag$1676#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.861749447099881*^9, 3.8617501766650467`*^9, {3.861750223370763*^9, 
   3.861750244204874*^9}, {3.861750323187965*^9, 3.8617503401426077`*^9}, 
   3.861750408378697*^9, 3.861750462591717*^9, 3.861750585014387*^9, 
   3.8617506247072887`*^9, 3.861750660870882*^9, 3.86175129077925*^9, {
   3.861751458291781*^9, 3.861751495643647*^9}, 3.861751537624015*^9, {
   3.861751632579475*^9, 3.8617516598208227`*^9}, 3.8617530657195253`*^9, {
   3.861753114732526*^9, 3.8617531294484053`*^9}, 3.861753224951848*^9, 
   3.861753265691888*^9, 3.861753333506036*^9, 3.861753441120867*^9, {
   3.861753483186969*^9, 3.861753546615752*^9}, {3.861753720622814*^9, 
   3.861753748159259*^9}, 3.861753870164297*^9, 3.8617539454934397`*^9, 
   3.8617603757486277`*^9, {3.861844439702588*^9, 3.8618445313979807`*^9}, 
   3.8618446447513447`*^9, 3.861844766927823*^9, 3.86184496718447*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"4905e50b-53b6-4c77-912b-05a529ce0d0f"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.861844541756177*^9, 3.8618445868620863`*^9}, {
  3.861844625636042*^9, 3.861844631570863*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"890894e0-a219-4c8c-9797-247757fdb355"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Quit", "[", "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.861498418258443*^9, 3.8615033610086412`*^9, 3.8615070701351624`*^9, {
   3.86167998827601*^9, 3.8616800580305023`*^9}, {3.861680130881605*^9, 
   3.8616802157624083`*^9}, {3.86168033651266*^9, 3.861680424951936*^9}, {
   3.861680627914113*^9, 3.8616806921166277`*^9}, {3.861680873003611*^9, 
   3.861680882125839*^9}, {3.8617495167540483`*^9, 3.861749545169695*^9}, {
   3.861749581828719*^9, 3.861749613591425*^9}, {3.861753179380156*^9, 
   3.861753183700836*^9}, 3.861753496316852*^9, 3.861753843668561*^9, 
   3.86184446701763*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"34f2dee4-8147-407e-b929-8f081ab02e84"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.861576035735178*^9, 3.861576037953273*^9}, {
  3.861680797914468*^9, 3.8616808008005323`*^9}, {3.861750364251659*^9, 
  3.861750382322798*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"fb62bd56-021a-4d81-a0f2-75a0426aee4d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8616732641307087`*^9, 3.861673412403957*^9}, {
  3.861673456812845*^9, 3.86167359253759*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"cad2d3ad-2185-4eb0-af05-9293044739ee"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.861673417837101*^9, 3.8616734203102283`*^9}, {
  3.8616734841996593`*^9, 3.861673505481653*^9}, {3.861680083709804*^9, 
  3.861680103178504*^9}, {3.861741339874304*^9, 3.861741375572804*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"6211003d-3e5a-456b-91be-2b434a774acc"]
}, Open  ]]
},
WindowSize->{1920, 1027},
WindowMargins->{{1728, Automatic}, {Automatic, -13}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"21467c99-2b65-4a6b-a1a8-32689b407aa1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 163, 3, 123, "Title",ExpressionUUID->"c28aa2a7-d21e-426d-960c-e1f494daa54f"],
Cell[746, 27, 431, 8, 37, "Input",ExpressionUUID->"b4bce99e-c48b-4c62-b18f-f1b511f509a4"],
Cell[1180, 37, 9041, 198, 785, "Input",ExpressionUUID->"cec9ec4b-9ab9-499f-a003-9b8815933399"],
Cell[10224, 237, 5613, 135, 636, "Input",ExpressionUUID->"e5d261c3-dec1-4280-af62-24891e4eb90a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15874, 377, 320, 5, 123, "Title",ExpressionUUID->"93e68de5-0837-4f20-899e-f3a3d61b9519"],
Cell[16197, 384, 3997, 85, 325, "Input",ExpressionUUID->"46ca37b3-b282-4e19-bd6f-d7095dd05190"],
Cell[20197, 471, 4951, 142, 632, "Input",ExpressionUUID->"b679f6b1-cc78-4998-b53c-e65093b74335"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25185, 618, 256, 4, 123, "Title",ExpressionUUID->"235c7a58-0182-47a7-9361-cdc6f24d11dd"],
Cell[25444, 624, 3383, 80, 119, "Input",ExpressionUUID->"7b21dda6-0b67-4411-bf34-de2d9fb94bbe"],
Cell[28830, 706, 2369, 54, 194, "Input",ExpressionUUID->"46216a88-e346-4f16-ba31-ce4764f2b520"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31236, 765, 393, 12, 124, "Title",ExpressionUUID->"7755eab6-9597-4055-b1fd-35fda311e642"],
Cell[31632, 779, 3971, 107, 367, "Input",ExpressionUUID->"1ca705eb-b49e-4392-9c52-bb5dd4b2c6b6"],
Cell[35606, 888, 3708, 76, 194, "Input",ExpressionUUID->"d3823868-0507-44e2-8d43-00b0f4197af2"],
Cell[39317, 966, 4254, 75, 168, "Input",ExpressionUUID->"ec48aafb-95d3-4d76-b9be-9daab44bffc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43608, 1046, 209, 4, 123, "Title",ExpressionUUID->"86473ad7-0ae0-48f6-89ed-6d3302af9776"],
Cell[43820, 1052, 4385, 113, 302, "Input",ExpressionUUID->"6fb91cf1-9dd8-4516-bdb9-a3f21d548fd5"],
Cell[48208, 1167, 5635, 135, 330, "Input",ExpressionUUID->"9471877c-6c41-4542-951d-d342a150ffd8"],
Cell[53846, 1304, 2503, 44, 116, "Input",ExpressionUUID->"bd4799a1-2cba-4e36-a3c5-904b80f5858f"],
Cell[56352, 1350, 560, 10, 37, "Input",ExpressionUUID->"c1e0d1d8-7add-4971-8770-e5a0580905ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56949, 1365, 308, 5, 123, "Title",ExpressionUUID->"a85e9fdd-e3cb-4bc7-96b5-5042be5778a7"],
Cell[57260, 1372, 10400, 280, 875, "Input",ExpressionUUID->"95fab333-158f-4a26-8378-c3f5ce013768"],
Cell[CellGroupData[{
Cell[67685, 1656, 50036, 844, 516, "Input",ExpressionUUID->"136bbf8a-f698-46b3-b8be-4d0096814682"],
Cell[117724, 2502, 94143, 1564, 449, "Output",ExpressionUUID->"4905e50b-53b6-4c77-912b-05a529ce0d0f"]
}, Open  ]],
Cell[211882, 4069, 241, 3, 64, "Input",ExpressionUUID->"890894e0-a219-4c8c-9797-247757fdb355"],
Cell[212126, 4074, 735, 13, 37, "Input",ExpressionUUID->"34f2dee4-8147-407e-b929-8f081ab02e84"],
Cell[212864, 4089, 271, 4, 37, "Input",ExpressionUUID->"fb62bd56-021a-4d81-a0f2-75a0426aee4d"],
Cell[213138, 4095, 221, 3, 37, "Input",ExpressionUUID->"cad2d3ad-2185-4eb0-af05-9293044739ee"],
Cell[213362, 4100, 319, 4, 37, "Input",ExpressionUUID->"6211003d-3e5a-456b-91be-2b434a774acc"]
}, Open  ]]
}
]
*)

