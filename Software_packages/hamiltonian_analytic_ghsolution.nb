(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    215552,       4143]
NotebookOptionsPosition[    212298,       4085]
NotebookOutlinePosition[    212847,       4105]
CellTagsIndexPosition[    212804,       4102]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initial conditions", "Title",
 CellChangeTimes->{{3.8604604993059244`*^9, 
  3.860460503471142*^9}},ExpressionUUID->"c28aa2a7-d21e-426d-960c-\
e1f494daa54f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "we", " ", "keep", " ", "the", " ", "same", " ", "values", " ", "for", " ", 
   "unrescaled", " ", "quantities", " ", "as", " ", "the", " ", "numerical", 
   " ", "solution", " ", "notebook", " ", "for", " ", "matching"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8608001569208097`*^9, 3.86080017822126*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b4bce99e-c48b-4c62-b18f-f1b511f509a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Keep", " ", "m1"}], " ", ">", " ", 
      RowBox[{
       RowBox[{"m2", ".", " ", "Set"}], " ", "Rinit", " ", "and", " ", 
       "Pinit", " ", "so", " ", "that", " ", "you", " ", "start", " ", "at", 
       " ", "the", " ", "point", " ", "of", " ", "closest", " ", 
       RowBox[{"distance", ".", " ", "Keep"}], " ", "PN", " ", "parameter", 
       " ", 
       RowBox[{"small", ":", " ", "\[Epsilon]"}]}]}], " ", "->", "0"}], ",", 
    " ", 
    RowBox[{"P", " ", "->", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"1", "/", "R"}], " ", "->", " ", "0"}], ",", "  ", 
    RowBox[{
     FractionBox["spins", 
      RowBox[{"orb", ".", " ", "ang", ".", " ", "momentum"}]], " ", "->", " ",
      "0"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"m1", "=", 
     RowBox[{"5", "/", "2"}]}], ";", 
    RowBox[{"m2", "=", "1"}], ";", 
    RowBox[{"G", "=", "1"}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", "=", " ", 
     FractionBox["5", "1000"]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tfin", " ", "=", " ", 
     RowBox[{"500", "/", "\[Epsilon]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"precisionGoal", "=", "Automatic"}], " ", 
    RowBox[{"(*", "50", "*)"}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spinSuppressFac", " ", "=", " ", 
     SuperscriptBox["\[Epsilon]", 
      RowBox[{"1", "/", "2"}]]}], ";", "    ", 
    RowBox[{"c", " ", "=", " ", 
     FractionBox["1", "spinSuppressFac"]}], "   ", ";", "    ", 
    RowBox[{"kGoldstein", " ", "=", " ", 
     RowBox[{"G", " ", "M", " ", "\[Mu]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rinit", "=", 
     RowBox[{"1", 
      RowBox[{"{", " ", 
       RowBox[{"3", ",", "0", ",", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pinit", "=", 
     RowBox[{"1", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S1init", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}], "kGoldstein"], " ", 
      "spinSuppressFac"}]}], ";"}], "         ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2init", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"-", "3"}], "/", "10"}], ",", "0"}], "}"}], "kGoldstein"], 
      "spinSuppressFac"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"These", " ", "spin", " ", "numbers", " ", 
     RowBox[{"(", 
      RowBox[{"times", " ", "spinSuppressFac"}], ")"}], " ", "entered", " ", 
     "by", " ", "user", " ", "are", " ", "unscaled", " ", 
     RowBox[{"quantities", ".", " ", "But"}], " ", "S1init", " ", "and", " ", 
     "S2init", " ", "are", " ", "scaled", " ", 
     RowBox[{"(", "reduced", ")"}], " ", "spins"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S1ninit", " ", "=", " ", 
     RowBox[{"Norm", "[", "S1init", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2ninit", " ", "=", " ", 
     RowBox[{"Norm", "[", "S2init", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rinit", "=", 
     FractionBox["Rinit", 
      RowBox[{"G", " ", "M"}]]}], "     ", ";", "     ", 
    RowBox[{"pinit", "=", 
     FractionBox["Pinit", "\[Mu]"]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Linit", "=", 
     RowBox[{"Cross", "[", 
      RowBox[{"rinit", ",", "pinit"}], "]"}]}], " ", ";", "     ", 
    RowBox[{"Lninit", " ", "=", " ", 
     RowBox[{"Norm", "[", "Linit", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", " ", "=", " ", 
     RowBox[{"m1", "+", "m2"}]}], " ", ";", "  ", 
    RowBox[{"\[Mu]", " ", "=", " ", 
     RowBox[{"m1", " ", 
      RowBox[{"m2", "/", "M"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]1", "=", 
     RowBox[{"2", " ", "m1", " ", 
      FractionBox["m2", 
       SuperscriptBox["M", "2"]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         FractionBox["3", "4"], " ", 
         FractionBox["m2", "m1"]}]}], ")"}]}]}], "  ", ";", 
    RowBox[{"\[Delta]2", "=", 
     RowBox[{"2", " ", "m2", " ", 
      FractionBox["m1", 
       SuperscriptBox["M", "2"]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         FractionBox["3", "4"], " ", 
         FractionBox["m1", "m2"]}]}], ")"}]}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Prepare", "  ", "a", " ", "sign", " ", "function", " ", "for", " ", 
     "later", " ", "use", " ", "in", " ", "solution"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", " ", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Delta]2", 
         RowBox[{
          SuperscriptBox["c", "2"], 
          SuperscriptBox[
           RowBox[{"Norm", "[", "rinit", "]"}], "3"], " ", "S1ninit", " ", 
          "Lninit"}]], 
        RowBox[{"Linit", ".", 
         RowBox[{"Cross", "[", 
          RowBox[{"S1init", ",", " ", "S2init"}], "]"}]}]}], "   ", ">", " ", 
       "0"}], ",", " ", 
      RowBox[{"sign", " ", "=", "1"}], ",", " ", 
      RowBox[{"sign", " ", "=", 
       RowBox[{"-", "1"}]}]}], " ", "]"}], " ", ";"}]}]}]], "Input",
 CellChangeTimes->{{3.861505203176077*^9, 3.861505211313445*^9}, {
   3.8615052492012873`*^9, 3.861505257612753*^9}, {3.861505316131177*^9, 
   3.861505347800949*^9}, {3.861505887379456*^9, 3.861505888135997*^9}, 
   3.861506084804438*^9, {3.861506402084787*^9, 3.861506462161069*^9}, {
   3.8615071091971207`*^9, 3.861507115267798*^9}, {3.861507150484117*^9, 
   3.861507150738566*^9}, {3.8615072195072317`*^9, 3.8615072228363657`*^9}, {
   3.861507292116331*^9, 3.8615072944090652`*^9}, {3.861507368708111*^9, 
   3.86150737111124*^9}, {3.861550460975625*^9, 3.8615504622856216`*^9}, {
   3.861550690529727*^9, 3.861550696168511*^9}, {3.861550762352476*^9, 
   3.861550771982109*^9}, {3.861550834810636*^9, 3.8615508400091*^9}, {
   3.861550891444612*^9, 3.861550897890771*^9}, {3.861550939900196*^9, 
   3.8615509447598133`*^9}, {3.8615510308031797`*^9, 3.861551033384852*^9}, {
   3.861551096261897*^9, 3.8615511241167393`*^9}, {3.861551178576521*^9, 
   3.861551202709674*^9}, {3.8615512843437243`*^9, 3.861551333638756*^9}, {
   3.8615514981235313`*^9, 3.861551543251113*^9}, {3.8615515882728453`*^9, 
   3.861551588508163*^9}, {3.8615516241825666`*^9, 3.861551666471239*^9}, 
   3.8615516998809*^9, {3.861551783670269*^9, 3.861551793033908*^9}, {
   3.861551827159412*^9, 3.861551832680564*^9}, {3.861551955873992*^9, 
   3.861551956016224*^9}, {3.861552090538467*^9, 3.861552123321302*^9}, 
   3.8615525184408484`*^9, {3.8616708204614353`*^9, 3.861670821890383*^9}, {
   3.86167111232908*^9, 3.8616711126454887`*^9}, {3.8616713233027887`*^9, 
   3.861671323447782*^9}, {3.861671358877248*^9, 3.8616713599509172`*^9}, {
   3.861672016244692*^9, 3.861672085204442*^9}, {3.861678985554181*^9, 
   3.861678985790229*^9}, {3.8616790488200293`*^9, 3.861679049017941*^9}, {
   3.861680987536757*^9, 3.861680987832634*^9}, {3.8617402729435596`*^9, 
   3.8617402735718927`*^9}, {3.861740608276115*^9, 3.8617406085874453`*^9}, {
   3.861740871296981*^9, 3.8617408715453157`*^9}, 3.861740923117964*^9, {
   3.861741171254281*^9, 3.861741186243741*^9}, {3.861741262380727*^9, 
   3.861741262981257*^9}, {3.861741295824161*^9, 3.861741306644526*^9}, {
   3.861741384491438*^9, 3.861741389523692*^9}, {3.861741534060012*^9, 
   3.861741622002494*^9}, {3.861741931263895*^9, 3.861741932715352*^9}, {
   3.861741991540522*^9, 3.86174199299544*^9}, {3.861742292314049*^9, 
   3.861742293849925*^9}, {3.8617424380104237`*^9, 3.8617424546304617`*^9}, {
   3.861742543787023*^9, 3.861742544436039*^9}, {3.8617426591116867`*^9, 
   3.861742670925596*^9}, {3.8617427717328253`*^9, 3.8617427959315863`*^9}, 
   3.8617428802792807`*^9, {3.8617430073893147`*^9, 3.861743020279496*^9}, {
   3.861743108508348*^9, 3.8617431088536*^9}, {3.86174320760745*^9, 
   3.861743225750619*^9}, {3.8617433334800177`*^9, 3.8617433336440153`*^9}, {
   3.861748998779592*^9, 3.8617490381422577`*^9}, {3.861750198970017*^9, 
   3.8617502066536827`*^9}, {3.861750440058003*^9, 3.861750446057592*^9}, {
   3.861751571352803*^9, 3.8617515812157803`*^9}, {3.8617531689526157`*^9, 
   3.861753170220834*^9}, {3.861753815493597*^9, 3.861753816792544*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"cec9ec4b-9ab9-499f-a003-9b8815933399"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Jvec", "=", " ", 
     RowBox[{"Linit", " ", "+", " ", "S1init", " ", "+", " ", "S2init"}]}], 
    "  ", ";", "  ", 
    RowBox[{"J", " ", "=", " ", 
     RowBox[{"Norm", "[", "Jvec", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sphericalAngles", "[", "V_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Jx", ",", "Jy", ",", "Jz"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"polarAngJ", " ", "=", " ", 
         RowBox[{
          RowBox[{"ToSphericalCoordinates", "[", "V", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"azimuthAngJ", " ", "=", "  ", 
         RowBox[{
          RowBox[{"ToSphericalCoordinates", "[", "V", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"polarAngJ", ",", "azimuthAngJ"}], "}"}], "]"}], " ", 
        ";"}]}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vectorComponents", "[", 
      RowBox[{"{", 
       RowBox[{"V_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "}"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Vx", ",", "Vy", ",", "Vz"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Vz", " ", "=", " ", 
         RowBox[{"V", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Vx", "=", 
         RowBox[{"V", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ";", "  ", 
        "\[IndentingNewLine]", 
        RowBox[{"Vy", "=", 
         RowBox[{"V", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"Vx", ",", " ", "Vy", ",", " ", "Vz"}], "}"}], "]"}], " ", 
        ";"}]}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Xi]2", ",", " ", "\[Xi]1"}], "}"}], "=", 
     RowBox[{
      RowBox[{"sphericalAngles", "[", "Jvec", "]"}], "+", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EulMat", " ", "=", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Xi]1", "]"}], ",", " ", 
         RowBox[{"Sin", "[", "\[Xi]1", "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Xi]1", "]"}]}], 
          RowBox[{"Cos", "[", "\[Xi]2", "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Xi]1", "]"}], 
          RowBox[{"Cos", "[", "\[Xi]2", "]"}]}], ",", " ", 
         RowBox[{"Sin", "[", "\[Xi]2", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "\[Xi]1", "]"}], 
          RowBox[{"Sin", "[", "\[Xi]2", "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "\[Xi]1", "]"}]}], 
          RowBox[{"Sin", "[", "\[Xi]2", "]"}]}], ",", " ", 
         RowBox[{"Cos", "[", "\[Xi]2", "]"}]}], "}"}]}], "}"}]}], "      ", 
    ";"}], "\[IndentingNewLine]", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Frame", " ", "A"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "one", " ", "in", " ", "which", " ", "the", " ", "above", 
       " ", "components", " ", "are", " ", 
       RowBox[{
       "given", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "Euler"}], 
       " ", "matrix", " ", "which", " ", "when", " ", "multiplies", " ", 
       "with", " ", "a", " ", "column", " ", "containing", " ", "components", 
       " ", "in", " ", "Frame", " ", "A", " ", "yields", " ", "components", 
       " ", "in", " ", "the", " ", "inertial", " ", "frame", " ", "whose", 
       " ", "z"}], "-", 
      RowBox[{"axis", " ", "is", " ", "along", " ", "J", " ", "vector", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"total", " ", "angular", " ", "momentum"}], ")"}], ".", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "Gives"}], " ", 
       RowBox[{"components", ":", " ", 
        RowBox[{
         RowBox[{"Basic", " ", 
          RowBox[{"frame", " ", "--"}]}], ">", " ", 
         RowBox[{"J", "-", 
          RowBox[{"vector", " ", "centered", " ", "frame"}]}]}]}]}]}]}], 
    "\[IndentingNewLine]", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.861672089191999*^9, 3.861672138542931*^9}, {
   3.861672219359784*^9, 3.8616724355948153`*^9}, {3.8616724667930727`*^9, 
   3.8616725609341497`*^9}, {3.8616726078538313`*^9, 3.8616730902778177`*^9}, 
   3.861673141311883*^9, {3.861673604517894*^9, 3.861673630979302*^9}, {
   3.861673664446309*^9, 3.861673762601123*^9}, {3.8616738041715307`*^9, 
   3.861673883935069*^9}, {3.861674223347932*^9, 3.861674251683526*^9}, {
   3.86167834717461*^9, 3.861678476165113*^9}, {3.8616805170702057`*^9, 
   3.861680575726276*^9}, {3.8617400239293118`*^9, 3.861740057402918*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"e5d261c3-dec1-4280-af62-24891e4eb90a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Un-rescaled/rescaled quantities", "Title",
 CellChangeTimes->{{3.860798770096822*^9, 3.860798775584608*^9}, 
   3.8608029634041452`*^9, {3.86149212511432*^9, 3.861492125494061*^9}, 
   3.861492213169786*^9, {3.861505504526184*^9, 
   3.861505517941978*^9}},ExpressionUUID->"93e68de5-0837-4f20-899e-\
f3a3d61b9519"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Rx", ",", " ", "Ry", ",", "Rz"}], "}"}]}], " ", ";", " ", 
  RowBox[{"P", " ", "=", 
   RowBox[{"{", 
    RowBox[{"Px", ",", "Py", ",", "Pz"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", " ", 
   RowBox[{"{", 
    RowBox[{"S1x", ",", " ", "S1y", ",", "S1z"}], "}"}]}], " ", ";", "    ", 
  RowBox[{"S2", "=", " ", 
   RowBox[{"{", 
    RowBox[{"S2x", ",", " ", "S2y", ",", "S2z"}], "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1n", " ", "=", " ", 
    RowBox[{"Norm", "[", "S1", "]"}]}], " ", ";", "     ", 
   RowBox[{"S2n", " ", "=", " ", 
    RowBox[{"Norm", "[", "S2", "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Seff", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Delta]1", " ", "S1"}], "+", " ", 
     RowBox[{"\[Delta]2", " ", "S2"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r", "=", 
   FractionBox["R", 
    RowBox[{"G", " ", "M"}]]}], ";", "       ", 
  RowBox[{"p", "=", 
   FractionBox["P", "\[Mu]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{"r", ",", "p"}], "]"}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Conserved", " ", "quantities", " ", "defined", " ", "in", " ", "terms", 
    " ", "of", " ", "scaled", " ", "variables"}], "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ln", "=", 
   RowBox[{"Norm", "[", "L", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jn", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"L", "+", "S1", "+", "S2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeffL", "=", " ", 
   RowBox[{"Seff", ".", "L"}]}], " ", ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8604605495801725`*^9, 3.860460726428547*^9}, {
   3.860467799555441*^9, 3.8604678211564703`*^9}, {3.860467987665392*^9, 
   3.860467996942706*^9}, {3.8604682265398026`*^9, 3.8604682334552746`*^9}, 
   3.860468322972333*^9, {3.8604683674289546`*^9, 3.860468372689849*^9}, {
   3.8607975052376165`*^9, 3.8607975401549788`*^9}, {3.8607976178733873`*^9, 
   3.860797654782824*^9}, {3.8607978998783436`*^9, 3.860797901432599*^9}, {
   3.86079818777748*^9, 3.8607981999666576`*^9}, {3.8607985810546837`*^9, 
   3.8607985814809246`*^9}, {3.8607986212369843`*^9, 3.860798750618828*^9}, {
   3.8607987820510435`*^9, 3.860798791699768*^9}, {3.860798835914669*^9, 
   3.8607988482851133`*^9}, {3.860798885798452*^9, 3.86079897354749*^9}, 
   3.8607998413832517`*^9, 3.8607998971896453`*^9, {3.860799972669767*^9, 
   3.860800008290717*^9}, {3.860800198037237*^9, 3.860800198421895*^9}, {
   3.860800535574095*^9, 3.86080055044881*^9}, {3.860801186909719*^9, 
   3.8608013985523853`*^9}, {3.86080143384153*^9, 3.860801529065855*^9}, {
   3.860801560894085*^9, 3.860801569284627*^9}, {3.8608016956566973`*^9, 
   3.860801717073454*^9}, {3.8608205347398825`*^9, 3.8608205389458003`*^9}, {
   3.860894060254075*^9, 3.8608941018195305`*^9}, {3.860894203777671*^9, 
   3.8608942293971453`*^9}, {3.8608942644441123`*^9, 3.860894294497435*^9}, {
   3.860894375934427*^9, 3.860894484105527*^9}, {3.8608946201108265`*^9, 
   3.860894621853591*^9}, {3.860894729099269*^9, 3.860894730938306*^9}, 
   3.860895935044954*^9, {3.8611393420127583`*^9, 3.86113934450283*^9}, {
   3.861139734478798*^9, 3.8611398291082582`*^9}, {3.861139882338176*^9, 
   3.861139895412895*^9}, {3.861141935111014*^9, 3.8611420346669073`*^9}, {
   3.8614950963787107`*^9, 3.861495099880206*^9}, 3.86150347583921*^9, {
   3.861503535465166*^9, 3.861503536452588*^9}, {3.86150363097497*^9, 
   3.861503641615816*^9}, {3.8615055705174303`*^9, 3.861505635557371*^9}, {
   3.8615056851047993`*^9, 3.8615057002595177`*^9}, 3.861505882562746*^9, {
   3.861506127411954*^9, 3.861506161440105*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"46ca37b3-b282-4e19-bd6f-d7095dd05190"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Evaluating", " ", "\[Sigma]1", " ", "and", " ", "\[Sigma]2"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}], " ", "=", " ", "Rinit"}], 
    "  ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Px", ",", "Py", ",", "Pz"}], "}"}], "=", "Pinit"}], "  ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}], " ", "=", " ", 
     "S1init"}], " ", ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S2x", ",", "S2y", ",", "S2z"}], "}"}], " ", "=", " ", 
     "S2init"}], "  ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]1", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"S1", ".", "S2"}], 
       RowBox[{"S1n", " ", "S2n"}]], " ", "-", 
      RowBox[{
       FractionBox["Ln", "S2n"], 
       FractionBox[
        RowBox[{"\[Delta]1", "-", "\[Delta]2"}], "\[Delta]2"], 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"S1", ".", "L"}]}], 
        RowBox[{"Ln", " ", "S1n"}]]}]}]}], " ", ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{"\[Sigma]1", "=", 
     RowBox[{
      RowBox[{"Cos", " ", "\[Gamma]"}], " ", "-", 
      RowBox[{
       FractionBox["L", "S2"], 
       FractionBox[
        RowBox[{"Q1", "-", "Q2"}], "Q2"], "Cos", " ", "\[Kappa]1"}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]2", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        RowBox[{"S2", ".", "L"}]}], 
       RowBox[{"Ln", " ", "S2n"}]], " ", "+", " ", 
      RowBox[{
       FractionBox[
        RowBox[{"\[Delta]1", " ", "S1n"}], 
        RowBox[{"\[Delta]2", " ", "S2n"}]], 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"S1", ".", "L"}]}], 
        RowBox[{"Ln", " ", "S1n"}]]}]}]}], " ", ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"\[Sigma]2", "=", " ", 
     RowBox[{
      RowBox[{"Cos", " ", "\[Kappa]2"}], " ", "+", 
      RowBox[{
       FractionBox[
        RowBox[{"Q1", " ", "S1"}], 
        RowBox[{"Q2", " ", "S2"}]], " ", "Cos", " ", "\[Kappa]1"}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Enwt", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"P", ".", "P"}], 
       RowBox[{"2", " ", "\[Mu]"}]], " ", "-", 
      FractionBox[
       RowBox[{"G", " ", "\[Mu]", " ", "M"}], 
       RowBox[{"Norm", "[", "R", "]"}]]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Newtonian", " ", "expression", " ", "for", " ", "energy"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Lun", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"Cross", "[", 
       RowBox[{"R", ",", "P"}], "]"}], "]"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"norm", " ", "of", " ", "unscaled", " ", "ang", " ", "momentum"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e", " ", "=", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", " ", "+", " ", 
        RowBox[{"2", " ", "Enwt", "  ", 
         FractionBox[
          RowBox[{
           SuperscriptBox["Lun", "2"], " "}], 
          RowBox[{"\[Mu]", " ", 
           SuperscriptBox["kGoldstein", "2"]}]]}]}], ")"}], 
      RowBox[{"1", "/", "2"}]]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Newtonian", " ", "eccentricity", " ", "in", " ", "unrescaled", " ", 
     "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aUnrescaled", "=", " ", 
     FractionBox[
      RowBox[{"-", "kGoldstein"}], 
      RowBox[{"2", " ", "Enwt"}]]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", " ", "=", " ", 
     FractionBox["aUnrescaled", 
      RowBox[{"G", " ", "M"}]]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["Ln", 
         RowBox[{"a", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["e", "2"]}], ")"}], 
           RowBox[{"1", "/", "2"}]]}]], ")"}], "3"], 
      RowBox[{"G", " ", "M"}]]}], " ", ";"}], "   ", 
   RowBox[{"(*", "unrescaled", "*)"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxUsow3EAB/D/cFi52PrLa2aWR5jHwUEbshJRtGYHkcdIoSERq12WOMxx
y9rRysVrQlmWQhs5CDMrc5jDNiZ/mtpm8pjf93/49CkcmlKOpFAUJSBwDkde
EHAy8qPEhxhfdJpKsaN3rBJPfk3IsER33IItozvj7CLhIqYKem6w8WjYjROp
7owg+cGgy2SPxaZx+MA4g+N2hR7nlmvZ40tzvBBZYAnyMfd1NAsLT2kRvix+
LMFrTb2l+Ml7XY3PDdk1mPbNm7BUU2PGC1F6FW/J3JtY7I9URsi1NlUVjqbt
/+G6e04SXxW9cz/ILkk0Czsa2wT4SWplV/Q17vJdjHxlwMluVndf4705Nbv0
0OZfJvPWA+z+3V+P7IyRb7joO5zu0TA4L1/Pvt3xHMftL+FPfDt78oO16tYk
7rd3lNWTY8bmCvwX+r7HXivXh98iyq4GMj1oVuF/2d4HQw==
  "],
 CellLabel->"In[32]:=",ExpressionUUID->"b679f6b1-cc78-4998-b53c-e65093b74335"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cubic equation", "Title",
 CellChangeTimes->{{3.860822576605688*^9, 3.8608225770805225`*^9}, {
  3.860822620754016*^9, 3.860822640936638*^9}, {3.861492131017334*^9, 
  3.8614921316091623`*^9}},ExpressionUUID->"235c7a58-0182-47a7-9361-\
cdc6f24d11dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"2", " ", "Ln", " ", "S1n", " ", "\[Delta]1", " ", 
     RowBox[{"(", 
      RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}]}]}], ";", 
   RowBox[{"cubiceq", "=", 
    RowBox[{
     RowBox[{"A", " ", 
      SuperscriptBox["x", "3"]}], " ", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Ln", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}], "2"]}], "+", 
        RowBox[{
        "2", " ", "\[Delta]2", " ", "Ln", " ", "\[Sigma]2", " ", "S2n", "  ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["S1n", "2"], " ", 
         SuperscriptBox["\[Delta]1", "2"]}], "+", 
        RowBox[{
        "2", " ", "\[Delta]1", " ", "\[Delta]2", " ", "\[Sigma]1", " ", "S1n",
          " ", "S2n"}], " ", "+", 
        RowBox[{
         SuperscriptBox["\[Delta]2", "2"], "  ", 
         SuperscriptBox["S2n", "2"]}]}], "  ", ")"}], 
      SuperscriptBox["x", "2"]}], "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "  ", "\[Delta]2", " ", "S2n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ln", " ", "\[Sigma]1", 
           RowBox[{"(", 
            RowBox[{"\[Delta]2", "-", "\[Delta]1"}], ")"}]}], " ", "+", 
          RowBox[{"\[Sigma]2", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"\[Delta]1", " ", "S1n"}], "+", " ", 
             RowBox[{"\[Delta]2", " ", "\[Sigma]1", " ", "S2n"}]}], ")"}]}]}],
          " ", ")"}]}], ")"}], " ", "x"}], "+", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["S2n", "2"]}], " ", 
      SuperscriptBox["\[Delta]2", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Sigma]1", "2"], "+", 
        SuperscriptBox["\[Sigma]2", "2"], "-", "1"}], ")"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"=", 
    RowBox[{"A", 
     RowBox[{"(", 
      RowBox[{"x", " ", "-", "x1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", " ", "-", "x2"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", " ", "-", "x3"}], ")"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{" "}]}], "Input",
 CellChangeTimes->{{3.8608224381989107`*^9, 3.860822556686841*^9}, {
   3.8608226896080875`*^9, 3.860822697182497*^9}, {3.860822980359644*^9, 
   3.860822985117237*^9}, {3.860823015710429*^9, 3.860823052111555*^9}, {
   3.860823090890751*^9, 3.8608231109576855`*^9}, {3.8608231484855275`*^9, 
   3.860823250389859*^9}, {3.8608237798541985`*^9, 3.8608238257903833`*^9}, {
   3.8608238841627035`*^9, 3.860823928174265*^9}, {3.8608239975646667`*^9, 
   3.8608240241591816`*^9}, 3.860824088450692*^9, {3.8608241241637793`*^9, 
   3.8608241504654446`*^9}, {3.8608242093333807`*^9, 
   3.8608242836229057`*^9}, {3.860824482444661*^9, 3.8608244849300203`*^9}, 
   3.8608245778214364`*^9, 3.8608246223199368`*^9, {3.8608247926936655`*^9, 
   3.86082491999257*^9}, {3.8608249689229407`*^9, 3.8608249724232845`*^9}, 
   3.8608250329543257`*^9, {3.8608265808846436`*^9, 3.860826616414554*^9}, {
   3.8608266716482472`*^9, 3.86082672642173*^9}, {3.861141247806658*^9, 
   3.86114125046666*^9}, {3.861502338066778*^9, 3.861502356987935*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"7b21dda6-0b67-4411-bf34-de2d9fb94bbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "evaluate", " ", "the", " ", "cubic", " ", "and", " ", "find", " ", "the", 
    " ", "roots"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rtsol", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"cubiceq", "\[Equal]", "0"}], ",", "x"}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x2", "=", 
     RowBox[{"x", "/.", 
      RowBox[{"rtsol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x3", "=", 
     RowBox[{"x", "/.", 
      RowBox[{"rtsol", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x1", "=", 
     RowBox[{"x", "/.", 
      RowBox[{"rtsol", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", " ", "x3", ",", " ", "x1"}], "}"}], " ", "=", " ", 
     RowBox[{"Sort", "[", 
      RowBox[{"{", 
       RowBox[{"x2", ",", " ", "x3", ",", " ", "x1"}], "}"}], "]"}]}], " ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "Rx", ",", " ", "Ry", ",", " ", "Rz", ",", " ", "Px", ",", " ", "Py", ",",
      " ", "Pz", ",", " ", "S1x", ",", " ", "S1y", ",", " ", "S1z", ",", " ", 
     "S2x", ",", " ", "S2y", ",", " ", "S2z", ",", " ", "m1", ",", " ", 
     "m2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.860824656915515*^9, 3.860824657477194*^9}, {
   3.8608250948957586`*^9, 3.860825106725681*^9}, {3.860826039092862*^9, 
   3.860826040689515*^9}, {3.8608263976132016`*^9, 3.8608264689015837`*^9}, {
   3.8608949651335955`*^9, 3.8608949730901937`*^9}, {3.860895203508599*^9, 
   3.860895239420532*^9}, {3.860895452936109*^9, 3.8608954977682376`*^9}, {
   3.860895556564497*^9, 3.860895574204098*^9}, {3.860895701807377*^9, 
   3.8608957697905397`*^9}, 3.861138797592785*^9, {3.861138884816885*^9, 
   3.86113892023549*^9}, 3.8611399891511087`*^9, {3.861141258850905*^9, 
   3.861141289138701*^9}, {3.8615038395863934`*^9, 3.861503850716688*^9}, {
   3.861506870814052*^9, 3.861506884018413*^9}, {3.861670858473631*^9, 
   3.861670881372212*^9}, {3.861670914295412*^9, 3.8616709263360243`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"46216a88-e346-4f16-ba31-ce4764f2b520"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Cos", "[", 
    SubscriptBox["\[Kappa]", "1"]}], TraditionalForm]],ExpressionUUID->
  "92ca396e-f413-4177-a1b1-1f6a486d39ad"],
 "]"
}], "Title",
 CellChangeTimes->{{3.8608923925495014`*^9, 3.8608923994813333`*^9}, {
  3.86149213404443*^9, 
  3.861492144947094*^9}},ExpressionUUID->"7755eab6-9597-4055-b1fd-\
35fda311e642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]e", " ", "=", " ", 
   FractionBox["e", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["e", "2"]}], ")"}], 
      RowBox[{"1", "/", "2"}]]}]]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Nu]", " ", "=", " ", 
    RowBox[{"u", " ", "+", " ", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", " ", 
       FractionBox[
        RowBox[{"\[Beta]e", " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], 
        RowBox[{"1", "-", 
         RowBox[{"\[Beta]e", " ", 
          RowBox[{"Cos", "[", "u", "]"}]}]}]], "]"}]}]}]}], "      ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"same", " ", "as", " ", "\[Nu]"}], "=", " ", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"1", "+", "e"}], 
         RowBox[{"1", "-", "e"}]]], " ", 
       RowBox[{"Tan", "[", 
        RowBox[{"u", "/", "2"}], "]"}]}], "]"}], " ", "but", " ", "without", 
     " ", "the", " ", "ArcTan", " ", "issues"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", " ", "=", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"x3", "-", "x2"}], 
      RowBox[{"x1", "-", "x2"}]], ")"}], 
    RowBox[{"1", "/", "2"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", " ", "=", "  ", 
   RowBox[{"sign", 
    FractionBox["2", 
     SqrtBox[
      RowBox[{"A", 
       RowBox[{"(", 
        RowBox[{"x1", "-", "x2"}], ")"}]}]]], 
    RowBox[{"EllipticF", "[", 
     RowBox[{
      RowBox[{"ArcSin", "[", 
       SqrtBox[
        FractionBox[
         RowBox[{
          FractionBox[
           RowBox[{" ", 
            RowBox[{"S1init", ".", "Linit"}]}], 
           RowBox[{"Lninit", " ", "S1ninit"}]], "-", "x2"}], 
         RowBox[{"x3", "-", "x2"}]]], "]"}], ",", 
      SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], "   ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalUpsilon]", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    SqrtBox[
     RowBox[{"A", 
      RowBox[{"(", 
       RowBox[{"x1", "-", "x2"}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{"\[Alpha]", "+", 
      FractionBox[
       RowBox[{"\[Nu]", " ", "+", " ", 
        RowBox[{"e", " ", 
         RowBox[{"Sin", "[", "\[Nu]", "]"}]}]}], 
       RowBox[{
        SuperscriptBox["c", "2"], 
        SuperscriptBox["Ln", "3"]}]]}], ")"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cos\[Kappa]1", "=", 
   RowBox[{"x2", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x3", "-", "x2"}], ")"}], 
     SuperscriptBox[
      RowBox[{"JacobiSN", "[", 
       RowBox[{"\[CapitalUpsilon]", ",", 
        SuperscriptBox["\[Beta]", "2"]}], "]"}], "2"]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8608924083066835`*^9, 3.8608924329801188`*^9}, {
   3.860892479432002*^9, 3.8608925073104424`*^9}, {3.8608925440633063`*^9, 
   3.860892548078041*^9}, {3.8608925780976286`*^9, 3.8608925882775187`*^9}, {
   3.8608926360393977`*^9, 3.8608926513055563`*^9}, {3.8608927355763035`*^9, 
   3.8608927699145665`*^9}, {3.860892935805621*^9, 3.8608929723350945`*^9}, {
   3.8608930308124714`*^9, 3.8608930344628*^9}, {3.8608938045301757`*^9, 
   3.8608939154981885`*^9}, {3.8608943127288895`*^9, 
   3.8608943274020576`*^9}, {3.8608945150210276`*^9, 3.8608945164989967`*^9}, 
   3.8608946129793034`*^9, {3.8608946868346677`*^9, 3.860894702062374*^9}, {
   3.860896163957806*^9, 3.860896193570142*^9}, 3.8608962439180317`*^9, {
   3.861139993338573*^9, 3.8611400100807323`*^9}, {3.861140449437024*^9, 
   3.861140486481666*^9}, {3.861140530640531*^9, 3.861140692132641*^9}, 
   3.861485722336391*^9, 3.861485762999198*^9, {3.861488774399995*^9, 
   3.8614888363285027`*^9}, {3.861677144540987*^9, 3.861677145830858*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"1ca705eb-b49e-4392-9c52-bb5dd4b2c6b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Evaluate", " ", "coskp1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}], " ", "=", " ", "Rinit"}], 
    "  ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Px", ",", "Py", ",", "Pz"}], "}"}], "=", "Pinit"}], "  ", 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}], " ", "=", " ", 
     "S1init"}], " ", ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S2x", ",", "S2y", ",", "S2z"}], "}"}], " ", "=", " ", 
     "S2init"}], "  ", ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findu", "[", 
      RowBox[{"t_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"FindRoot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"n", " ", "t"}], " ", "==", " ", 
        RowBox[{"u", " ", "-", " ", 
         RowBox[{"e", " ", 
          RowBox[{"Sin", "[", "u", "]"}]}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", 
         RowBox[{"n", " ", "t"}], ",", " ", 
         RowBox[{
          RowBox[{"n", " ", "t"}], " ", "-", " ", 
          RowBox[{"2", " ", "\[Pi]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"n", " ", "t"}], " ", "+", " ", 
          RowBox[{"2", " ", "\[Pi]"}]}]}], "}"}], ",", " ", 
       RowBox[{"PrecisionGoal", "->", "precisionGoal"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.860895794171365*^9, 3.860895806670927*^9}, {
   3.8608958416856146`*^9, 3.860895945448574*^9}, {3.8608959967702603`*^9, 
   3.8608960703268433`*^9}, {3.8608961091008654`*^9, 3.860896111247663*^9}, {
   3.860896144365302*^9, 3.8608961466158648`*^9}, {3.8608962933091507`*^9, 
   3.8608963084938354`*^9}, {3.8611393353582582`*^9, 3.861139336965755*^9}, {
   3.861141357018989*^9, 3.861141372380659*^9}, {3.861141905294222*^9, 
   3.861141922812286*^9}, {3.861142317284169*^9, 3.86114234135645*^9}, {
   3.8611423854080887`*^9, 3.8611424067468643`*^9}, {3.8611424415968437`*^9, 
   3.8611425069451714`*^9}, 3.861318718262719*^9, {3.8613203043838625`*^9, 
   3.8613203070368676`*^9}, {3.861320365591267*^9, 3.861320433513455*^9}, {
   3.86132059145255*^9, 3.861320612604617*^9}, {3.861320668808439*^9, 
   3.861320672101037*^9}, {3.8613207397888575`*^9, 3.8613207646379952`*^9}, {
   3.8613209142911444`*^9, 3.861320955378435*^9}, {3.8613210362410283`*^9, 
   3.861321172322667*^9}, {3.861321269161363*^9, 3.8613213114104977`*^9}, {
   3.8613213720180693`*^9, 3.8613213753184633`*^9}, {3.8613216707893925`*^9, 
   3.861321679326131*^9}, {3.8613218158417068`*^9, 3.8613218361734457`*^9}, {
   3.86137501507241*^9, 3.861375154208465*^9}, {3.8614846205183434`*^9, 
   3.8614846313115287`*^9}, {3.861485212084961*^9, 3.861485232021091*^9}, 
   3.861485429456444*^9, 3.861485483861403*^9, 3.8614855464952497`*^9, {
   3.8615012042126102`*^9, 3.8615012304247427`*^9}, 3.861503526525119*^9, {
   3.861506378777898*^9, 3.861506381580179*^9}, {3.861506889014786*^9, 
   3.861506889360828*^9}, {3.861551921719078*^9, 3.8615519235977716`*^9}, {
   3.861576010574408*^9, 3.861576029119623*^9}, {3.86167093364399*^9, 
   3.861670942063346*^9}, 3.861671059233396*^9, {3.8616711708413877`*^9, 
   3.8616711731032553`*^9}, {3.861671379067487*^9, 3.861671391129171*^9}, {
   3.861676209504067*^9, 3.861676262233425*^9}, {3.8616763151115*^9, 
   3.8616763151143913`*^9}, {3.861677094255752*^9, 3.86167709626715*^9}, 
   3.861740443866497*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"d3823868-0507-44e2-8d43-00b0f4197af2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fcos\[Kappa]1", "[", 
     RowBox[{"t_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{"cos\[Kappa]1", "/.", 
     RowBox[{"findu", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"p1", " ", "="}], "          ", ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"fcos\[Kappa]1", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tfin"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"p2", ",", "p1", ",", " ", 
      RowBox[{"PlotRange", "->", "All"}], ",", " ", 
      RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "Rx", ",", " ", "Ry", ",", " ", "Rz", ",", " ", "Px", ",", " ", "Py", ",",
      " ", "Pz", ",", " ", "S1x", ",", " ", "S1y", ",", " ", "S1z", ",", " ", 
     "S2x", ",", " ", "S2y", ",", " ", "S2z", ",", " ", "m1", ",", " ", 
     "m2"}], "]"}], "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.861141541405088*^9, 3.8611415968034897`*^9}, {
   3.861141630391317*^9, 3.86114163576544*^9}, {3.861141792624633*^9, 
   3.861141796959711*^9}, {3.861141845821257*^9, 3.861141899123603*^9}, {
   3.861485689857028*^9, 3.8614856953753023`*^9}, 3.861485958217534*^9, {
   3.861486319130961*^9, 3.861486321461913*^9}, {3.861486380931882*^9, 
   3.861486386902505*^9}, {3.861486425145323*^9, 3.8614864262416153`*^9}, {
   3.8614889018735657`*^9, 3.861488933940536*^9}, {3.861488979798455*^9, 
   3.861489002824922*^9}, {3.8614892775314217`*^9, 3.861489281618862*^9}, {
   3.861489339976098*^9, 3.861489341119084*^9}, 3.861490736991049*^9, {
   3.861490777297224*^9, 3.8614907872196903`*^9}, {3.8614908284003*^9, 
   3.861490833257256*^9}, {3.86149111903441*^9, 3.861491129825794*^9}, {
   3.861491987033512*^9, 3.86149199516778*^9}, {3.861492662412612*^9, 
   3.86149267215355*^9}, 3.8614961471338577`*^9, {3.861499534072062*^9, 
   3.8614995491693087`*^9}, {3.861500743578952*^9, 3.861500745675408*^9}, {
   3.861500880006077*^9, 3.8615008811082993`*^9}, {3.861500913791602*^9, 
   3.861500951623122*^9}, {3.861501055358498*^9, 3.861501056491125*^9}, {
   3.8615012360834103`*^9, 3.861501236707847*^9}, {3.861501425837859*^9, 
   3.8615014270287037`*^9}, {3.86150154175079*^9, 3.861501548131529*^9}, {
   3.8615070412309237`*^9, 3.861507053970299*^9}, {3.861507173746513*^9, 
   3.861507184499421*^9}, {3.861507240618802*^9, 3.861507241823957*^9}, {
   3.8615073201705217`*^9, 3.861507321078842*^9}, {3.861507393325427*^9, 
   3.861507395595614*^9}, {3.861550492234902*^9, 3.8615504947319307`*^9}, {
   3.86155072861495*^9, 3.861550733920734*^9}, {3.861550788429731*^9, 
   3.8615507909818153`*^9}, {3.861550855974536*^9, 3.861550857674506*^9}, {
   3.8615509146136847`*^9, 3.8615509158514147`*^9}, {3.861551048000702*^9, 
   3.861551048976865*^9}, {3.86155108584779*^9, 3.8615510869697*^9}, 
   3.861551138278891*^9, {3.8615511723577557`*^9, 3.861551174068651*^9}, {
   3.861551208697749*^9, 3.8615512098333683`*^9}, {3.8615515554617643`*^9, 
   3.8615515808729343`*^9}, {3.861551643313925*^9, 3.86155164399054*^9}, {
   3.861551684058477*^9, 3.861551685311839*^9}, {3.86155175103855*^9, 
   3.86155175218686*^9}, {3.861551873269351*^9, 3.8615518742782717`*^9}, {
   3.861551940190291*^9, 3.861551949517818*^9}, {3.8615525336759167`*^9, 
   3.861552534758073*^9}, {3.861670969386732*^9, 3.8616710347476053`*^9}, {
   3.861671068483786*^9, 3.861671069814846*^9}, {3.86167112324113*^9, 
   3.861671124437298*^9}, {3.861671164259687*^9, 3.861671165381612*^9}, {
   3.861671239334763*^9, 3.861671309991837*^9}, {3.86167140909339*^9, 
   3.861671410603374*^9}, {3.861676218474866*^9, 3.861676220787147*^9}, {
   3.861676315115324*^9, 3.861676342954267*^9}, {3.8616771116479387`*^9, 
   3.861677111650004*^9}, {3.861679169222435*^9, 3.861679170200224*^9}, {
   3.861679609627448*^9, 3.861679637328267*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"ec48aafb-95d3-4d76-b9be-9daab44bffc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["L vector solution", "Title",
 CellChangeTimes->{{3.8616761066664*^9, 3.861676125784917*^9}, {
  3.861681631939687*^9, 
  3.8616816542979727`*^9}},ExpressionUUID->"86473ad7-0ae0-48f6-89ed-\
6d3302af9776"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LinitJframe", " ", "=", " ", 
   RowBox[{"EulMat", ".", "Linit"}]}], "      ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L\[Xi]10", " ", "=", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{"sphericalAngles", "[", "LinitJframe", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "+", " ", 
     RowBox[{"\[Pi]", "/", "2"}]}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]1", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "\[Delta]2"}], " ", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"J", " ", "+", " ", "Lninit", " ", "+", " ", 
       RowBox[{"S2ninit", " ", "\[Sigma]2"}]}], " ", ")"}], 
     RowBox[{"S1ninit", 
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}]]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]2", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "\[Delta]2"}], " ", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "J"}], " ", "+", " ", "Lninit", " ", "+", " ", 
       RowBox[{"S2ninit", " ", "\[Sigma]2"}]}], " ", ")"}], 
     RowBox[{"S1ninit", 
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}]]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]1", " ", "=", " ", 
   RowBox[{"\[Delta]2", " ", 
    FractionBox["1", 
     RowBox[{"2", " ", "S1ninit", " ", 
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Lninit", "2"], "\[Delta]1"}], "+", " ", 
        RowBox[{
         SuperscriptBox["J", "2"], "\[Delta]2"}], "+", " ", 
        RowBox[{"S1ninit", 
         RowBox[{"(", 
          RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"S1ninit", "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], "+", " ", 
        RowBox[{
        "Lninit", " ", "S2ninit", " ", "\[Delta]1", " ", "\[Sigma]2"}], " ", 
        "+", " ", 
        RowBox[{"J", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Lninit", 
            RowBox[{"(", 
             RowBox[{"\[Delta]1", "+", "\[Delta]2"}], ")"}]}], "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]2", " ", "\[Delta]2"}]}], 
          ")"}]}]}], ")"}]}], ")"}]}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]2", " ", "=", " ", 
   RowBox[{"\[Delta]2", " ", 
    FractionBox["1", 
     RowBox[{"2", " ", "S1ninit", " ", 
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Lninit", "2"], "\[Delta]1"}], "+", " ", 
        RowBox[{
         SuperscriptBox["J", "2"], "\[Delta]2"}], "+", " ", 
        RowBox[{"S1ninit", 
         RowBox[{"(", 
          RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"S1ninit", "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], "+", " ", 
        RowBox[{
        "Lninit", " ", "S2ninit", " ", "\[Delta]1", " ", "\[Sigma]2"}], " ", 
        "-", " ", 
        RowBox[{"J", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Lninit", 
            RowBox[{"(", 
             RowBox[{"\[Delta]1", "+", "\[Delta]2"}], ")"}]}], "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]2", " ", "\[Delta]2"}]}], 
          ")"}]}]}], ")"}]}], ")"}]}]}], "  ", ";"}]}], "Input",
 CellChangeTimes->{{3.861550911625313*^9, 3.861550911630085*^9}, {
  3.861673945788025*^9, 3.86167401381187*^9}, {3.861674067695208*^9, 
  3.861674124252503*^9}, {3.861674169225237*^9, 3.861674191519525*^9}, {
  3.861674261140751*^9, 3.861674551132612*^9}, {3.8616745905433207`*^9, 
  3.8616745909175673`*^9}, {3.8616764772096767`*^9, 3.8616764773834953`*^9}, {
  3.8616765146075907`*^9, 3.861676531052696*^9}, {3.861676732682493*^9, 
  3.861676735311871*^9}, {3.861676778032404*^9, 3.861676779860076*^9}, {
  3.861677527043379*^9, 3.861677541029666*^9}, {3.861679774971198*^9, 
  3.861679779823834*^9}, {3.8616814375835543`*^9, 3.861681437984193*^9}, {
  3.861740512069642*^9, 3.861740512617588*^9}, {3.861749111636099*^9, 
  3.861749118764543*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"6fb91cf1-9dd8-4516-bdb9-a3f21d548fd5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"solPiece1", " ", "=", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", 
          RowBox[{"(", 
           RowBox[{"x1", "-", "x2"}], ")"}]}], ")"}], 
        RowBox[{"1", "/", "2"}]]], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]1", "  ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]1", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]1", "+", "x2"}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]2", " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]2", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]2", "+", "x2"}]]}], ")"}]}]}], "  ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solPiece2", " ", "=", 
   RowBox[{"L\[Xi]10", " ", "-", 
    RowBox[{"(", 
     RowBox[{"solPiece1", "/.", 
      RowBox[{"u", "->", "0"}]}], " ", ")"}]}]}], "    ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L\[Xi]1sol", "=", 
   RowBox[{"solPiece1", " ", "+", " ", "solPiece2"}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cos\[Kappa]2", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"\[Sigma]2", " ", "-", "  ", 
    RowBox[{"\[Delta]1", " ", 
     RowBox[{"S1ninit", "/", 
      RowBox[{"(", 
       RowBox[{"\[Delta]2", " ", "S2ninit"}], ")"}]}], " ", 
     RowBox[{"fcos\[Kappa]1", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LvecAzimuthAngle", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}], "+", "L\[Xi]1sol"}], "/.", 
    RowBox[{"findu", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LvecPolarAngle", "[", "t_", "]"}], ":=", " ", 
    RowBox[{"ArcCos", "[", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["Lninit", "2"], "+", " ", 
        RowBox[{"Lninit", " ", "S1ninit", "  ", 
         RowBox[{"fcos\[Kappa]1", "[", "t", "]"}]}], " ", "+", " ", 
        RowBox[{"Lninit", " ", "S2ninit", "  ", 
         RowBox[{"cos\[Kappa]2", "[", "t", "]"}]}]}], "  ", ")"}], 
      RowBox[{"Lninit", " ", "J"}]], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Lsol", "[", "t_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Lx", ",", "Ly", ",", "Lz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Lx", ",", "Ly", ",", "Lz"}], "}"}], " ", "=", " ", 
       RowBox[{"vectorComponents", "[", 
        RowBox[{"{", 
         RowBox[{"Lninit", ",", " ", 
          RowBox[{"LvecPolarAngle", "[", "t", "]"}], ",", 
          RowBox[{"LvecAzimuthAngle", "[", "t", "]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", " ", 
       RowBox[{"kGoldstein", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Inverse", "[", "EulMat", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"Lx", ",", "Ly", ",", "Lz"}], "}"}]}], ")"}]}], " ", "]"}],
       ";"}]}], " ", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.861675732971167*^9, 3.861675733854781*^9}, {
   3.861675767479105*^9, 3.861675898011263*^9}, {3.8616761374650373`*^9, 
   3.861676158569659*^9}, {3.86167645498209*^9, 3.8616764643412313`*^9}, {
   3.861676803553501*^9, 3.861676823145732*^9}, {3.861676872303378*^9, 
   3.861676901285598*^9}, {3.8616769500070267`*^9, 3.861677035451839*^9}, {
   3.861677160808025*^9, 3.8616771694242287`*^9}, {3.8616772039910917`*^9, 
   3.861677224535245*^9}, {3.861677284492354*^9, 3.8616773353654747`*^9}, {
   3.861677385658186*^9, 3.861677386978154*^9}, {3.861677626205275*^9, 
   3.86167765229154*^9}, {3.8616777266161547`*^9, 3.86167781599647*^9}, {
   3.8616779220706987`*^9, 3.86167813616227*^9}, {3.861678181379902*^9, 
   3.861678247748885*^9}, {3.861678290011442*^9, 3.861678306497006*^9}, {
   3.861678503744849*^9, 3.861678507588372*^9}, {3.8616786013208723`*^9, 
   3.8616786370965843`*^9}, {3.861678669601473*^9, 3.861678721186112*^9}, {
   3.861678754950734*^9, 3.8616788004018803`*^9}, {3.86167888110504*^9, 
   3.861678883493969*^9}, {3.861678949068596*^9, 3.861678958363497*^9}, {
   3.8616793048816013`*^9, 3.861679305784234*^9}, 3.861679831303697*^9, {
   3.86167987781398*^9, 3.861679905466139*^9}, {3.8616813754600897`*^9, 
   3.8616813766368723`*^9}, {3.8617395699959497`*^9, 3.861739581094137*^9}, {
   3.861739627793556*^9, 3.861739649278062*^9}, {3.861739790184771*^9, 
   3.861739853935358*^9}, {3.861739888556332*^9, 3.861739896191661*^9}, {
   3.8617405349984617`*^9, 3.8617405387123137`*^9}, 3.861746342304082*^9, 
   3.8617534260681543`*^9, {3.861753517346718*^9, 3.8617535182891693`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"9471877c-6c41-4542-951d-d342a150ffd8"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"p1", " ", "="}], "          ", ";", "\[IndentingNewLine]", 
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Lsol", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       TagBox[
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tfin"}], "}"}],
        NumberForm[#, 16]& ], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"p1", ",", " ", "p2"}], "]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.861677348973111*^9, 3.8616773778054123`*^9}, {
   3.861678902725378*^9, 3.8616789285870047`*^9}, 3.861678967704039*^9, {
   3.861679009473688*^9, 3.86167901048353*^9}, {3.861679079088915*^9, 
   3.8616790946034403`*^9}, 3.8616797563613367`*^9, {3.8616811262936707`*^9, 
   3.8616811515101223`*^9}, {3.861681184802569*^9, 3.861681187367405*^9}, {
   3.861681229723638*^9, 3.861681266494997*^9}, {3.8616813163168287`*^9, 
   3.8616813172494173`*^9}, {3.8616814023502274`*^9, 3.861681420945977*^9}, {
   3.861739898555241*^9, 3.861739899744711*^9}, {3.861740083019771*^9, 
   3.86174008331153*^9}, {3.861740121277367*^9, 3.861740121492072*^9}, {
   3.861740173698998*^9, 3.8617402611210127`*^9}, {3.8617403254916477`*^9, 
   3.861740327268095*^9}, {3.8617405762581377`*^9, 3.86174057726926*^9}, {
   3.861740628358548*^9, 3.8617406513457623`*^9}, {3.861740711782179*^9, 
   3.86174071796049*^9}, {3.861740749466907*^9, 3.861740759352388*^9}, {
   3.8617407989638367`*^9, 3.861740801386026*^9}, {3.861740896643711*^9, 
   3.861740897879238*^9}, {3.8617410393594*^9, 3.861741045951029*^9}, {
   3.861741128584271*^9, 3.861741129352559*^9}, {3.861741229311673*^9, 
   3.861741229732712*^9}, {3.8617416370495033`*^9, 3.8617416494698*^9}, {
   3.861741684374339*^9, 3.861741685227109*^9}, 3.8617425809130707`*^9, {
   3.8617426884285192`*^9, 3.8617426898969183`*^9}, {3.86174282185417*^9, 
   3.8617428227510433`*^9}, {3.861742996087688*^9, 3.861742996285734*^9}, {
   3.8617430437783737`*^9, 3.861743045110508*^9}, {3.8617431343906*^9, 
   3.861743135573193*^9}, {3.86174325029403*^9, 3.861743251348262*^9}, {
   3.8617433263882437`*^9, 3.8617433273931227`*^9}, {3.861746323729793*^9, 
   3.861746337555313*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"bd4799a1-2cba-4e36-a3c5-904b80f5858f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Quit", "[", "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.86149222265851*^9, 3.861492224389229*^9}, {
   3.861681286142968*^9, 3.8616812970688562`*^9}, {3.861681353136263*^9, 
   3.86168138384538*^9}, {3.861740295553425*^9, 3.861740296886793*^9}, {
   3.861740357105122*^9, 3.861740363109826*^9}, 3.86174121060351*^9, 
   3.8617412690056343`*^9, 3.8617418576215878`*^9, 3.8617423405883408`*^9, 
   3.861748915905817*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"c1e0d1d8-7add-4971-8770-e5a0580905ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["S1 vector solution", "Title",
 CellChangeTimes->{{3.86167657790646*^9, 3.861676723504183*^9}, {
  3.861676827908721*^9, 3.861676828222795*^9}, {3.8617422157885103`*^9, 
  3.8617422214806547`*^9}, {3.861748940226906*^9, 
  3.861748946715764*^9}},ExpressionUUID->"a85e9fdd-e3cb-4bc7-96b5-\
5042be5778a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"S1initJframe", " ", "=", " ", 
   RowBox[{"EulMat", ".", "S1init"}]}], "      ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1\[Xi]10", " ", "=", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{"sphericalAngles", "[", "S1initJframe", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "+", " ", 
     RowBox[{"\[Pi]", "/", "2"}]}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]1S1", " ", "=", "  ", 
   FractionBox[
    RowBox[{"\[Delta]2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "J"}], "+", "S1ninit", "+", 
       RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], 
    RowBox[{"Lninit", " ", "\[Delta]1"}]]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]2S1", " ", "=", 
   FractionBox[
    RowBox[{"\[Delta]2", " ", 
     RowBox[{"(", 
      RowBox[{"J", "+", "S1ninit", "+", 
       RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], 
    RowBox[{"Lninit", " ", "\[Delta]1"}]]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]1S1", " ", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Delta]2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Lninit", "2"], " ", "\[Delta]1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"S1ninit", " ", 
            RowBox[{"(", 
             RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}]}], "+", 
           RowBox[{"J", " ", "\[Delta]2"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "J"}], "+", "S1ninit", "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], "+", 
        RowBox[{
        "Lninit", " ", "S2ninit", " ", "\[Delta]1", " ", "\[Sigma]2"}]}], 
       ")"}]}], 
     RowBox[{"2", " ", "Lninit", " ", "\[Delta]1"}]]}]}], "  ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]2S1", " ", "=", 
    FractionBox[
     RowBox[{"\[Delta]2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["Lninit", "2"]}], " ", "\[Delta]1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "S1ninit"}], " ", "\[Delta]1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"J", "+", "S1ninit"}], ")"}], " ", "\[Delta]2"}]}], 
          ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"J", "+", "S1ninit", "+", 
           RowBox[{"S2ninit", " ", "\[Sigma]1"}]}], ")"}]}], "-", 
        RowBox[{
        "Lninit", " ", "S2ninit", " ", "\[Delta]1", " ", "\[Sigma]2"}]}], 
       ")"}]}], 
     RowBox[{"2", " ", "Lninit", " ", "\[Delta]1"}]]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solPiece1S1", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      FractionBox["2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", 
          RowBox[{"(", 
           RowBox[{"x1", "-", "x2"}], ")"}]}], ")"}], 
        RowBox[{"1", "/", "2"}]]], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]1S1", "  ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]1S1", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]1S1", "+", "x2"}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]2S1", " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]2S1", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]2S1", "+", "x2"}]]}], ")"}]}], "   ", "+", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Nu]", " ", "+", " ", 
       RowBox[{"e", " ", 
        RowBox[{"Sin", "[", "\[Nu]", "]"}]}]}], 
      SuperscriptBox["Ln", "3"]], "  ", 
     FractionBox[
      RowBox[{"J", " ", "\[Delta]2"}], 
      SuperscriptBox["c", "2"]]}]}]}], "  ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solPiece1", " ", "=", "         ", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", 
          RowBox[{"(", 
           RowBox[{"x1", "-", "x2"}], ")"}]}], ")"}], 
        RowBox[{"1", "/", "2"}]]], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]1", "  ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]1", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]1", "+", "x2"}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"\[Beta]2", " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"(", 
              RowBox[{"x2", "-", "x3"}], ")"}], 
             RowBox[{"\[Alpha]2", "+", "x2"}]], ",", 
            RowBox[{"JacobiAmplitude", "[", 
             RowBox[{"\[CapitalUpsilon]", ",", 
              SuperscriptBox["\[Beta]", "2"]}], "]"}], ",", 
            SuperscriptBox["\[Beta]", "2"]}], "]"}]}]}], 
        RowBox[{"\[Alpha]2", "+", "x2"}]]}], ")"}]}]}], "  ", ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solPiece2S1", " ", "=", 
   RowBox[{"S1\[Xi]10", " ", "-", 
    RowBox[{"(", 
     RowBox[{"solPiece1S1", "/.", 
      RowBox[{"u", "->", "0"}]}], " ", ")"}]}]}], "    ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1\[Xi]1sol", "=", 
    RowBox[{"solPiece1S1", " ", "+", " ", "solPiece2S1"}]}], "  ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cos\[Gamma]", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"\[Sigma]1", " ", "+", "   ", 
    RowBox[{"Lninit", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"\[Delta]1", "-", "\[Delta]2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"\[Delta]2", " ", "S2ninit"}], ")"}]], " ", 
     RowBox[{"fcos\[Kappa]1", "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1vecAzimuthAngle", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}], "+", "S1\[Xi]1sol"}], "/.", 
    RowBox[{"findu", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S1vecPolarAngle", "[", "t_", "]"}], ":=", " ", 
    RowBox[{"ArcCos", "[", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["S1ninit", "2"], "+", " ", 
        RowBox[{"Lninit", " ", "S1ninit", "  ", 
         RowBox[{"fcos\[Kappa]1", "[", "t", "]"}]}], " ", "+", " ", 
        RowBox[{"S1ninit", " ", "S2ninit", "  ", 
         RowBox[{"cos\[Gamma]", "[", "t", "]"}]}]}], "  ", ")"}], 
      RowBox[{"S1ninit", " ", "J"}]], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S1sol", "[", "t_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}], " ", "=", " ", 
       RowBox[{"vectorComponents", "[", 
        RowBox[{"{", 
         RowBox[{"S1ninit", ",", " ", 
          RowBox[{"S1vecPolarAngle", "[", "t", "]"}], ",", 
          RowBox[{"S1vecAzimuthAngle", "[", "t", "]"}]}], "}"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", " ", 
       RowBox[{"kGoldstein", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Inverse", "[", "EulMat", "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"S1x", ",", "S1y", ",", "S1z"}], "}"}]}], ")"}]}], " ", 
       "]"}], ";"}]}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S2sol", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"kGoldstein", " ", "Jvec"}], " ", "-", " ", 
    RowBox[{"Lsol", "[", "t", "]"}], "-", 
    RowBox[{"S1sol", "[", "t", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.861506654095058*^9, 3.861506655895651*^9}, {
   3.861676377079265*^9, 3.861676389675899*^9}, {3.861748956831627*^9, 
   3.861748977171672*^9}, {3.861749055632312*^9, 3.8617490795490923`*^9}, {
   3.861749181307805*^9, 3.861749212183567*^9}, {3.86174933307372*^9, 
   3.861749436216477*^9}, {3.861749617762714*^9, 3.861749747846842*^9}, {
   3.8617498043582478`*^9, 3.8617498052446957`*^9}, {3.861749884387109*^9, 
   3.861749961765901*^9}, {3.8617500097665052`*^9, 3.861750028915041*^9}, {
   3.8617500740020313`*^9, 3.8617500879115334`*^9}, {3.861750789290161*^9, 
   3.861750822626951*^9}, {3.861750857210607*^9, 3.861750880104459*^9}, {
   3.8617510072373657`*^9, 3.8617510154044447`*^9}, {3.861751214109706*^9, 
   3.861751280547378*^9}, {3.8617529608393784`*^9, 3.8617529878360786`*^9}, {
   3.8617530245588627`*^9, 3.8617530250716333`*^9}, 3.861753431510006*^9, {
   3.8617535125932217`*^9, 3.8617535135178747`*^9}, {3.861753623684174*^9, 
   3.861753681910748*^9}, {3.861753914492053*^9, 3.861753918131893*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"95fab333-158f-4a26-8378-c3f5ce013768"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", "   ", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
oayzdu5JQy5+nS/yUmp8ElT97gq9uJaHdVmO8BrPToL6nW8eEcZ5ePyqdGTg
4iTwbKNOnbubh28XKAhWfJuESf/TXF2/8/ACy7lY+uoktP+ZMuZjzsd21zR2
86yfghMf3J3tOfLx7wLdRMVNU8CemrP/T0Q+dme9ue8e7xTwpOfW58flY3YD
s9TI3VNwX0O+cDU9H78ovH+g6cAUhB/evrJRvADzrX+c+eUoY77rRIGSVAFO
MHD9b/eJKeD+O9H+8XQBPkDxzVVVnIJINtsPC7gA560POfro/BTY/73KUt1U
gKUNowpTNKdg198su0e9BbiKknTsjd4UbMtpVfdVL8RKG7KL/tycAt/9/TbM
lwtxuyEhI2o+BaVHjs3ymhRiLaKi7MqDKWjVyNzQ0V+IRzY0yLs/noLH4v+8
/gwXYqPrHVX5rozxpgN+mz4V4jmi7/SY7xSEsEYx9Rym4Ptsb/GGkClY04Hh
9iMU/P36zBmpKAZr7/qccZqCncmFRqOkKSgRwaW/71IwC/u3c4FZU5BOjAmN
WVJwwI3V1nLKFAysT/r115uCuYtYL9LLp+Dlcw1HwzQKjmLf1MVdPwVhm9MV
92dQ8N6bvJqK7VOQEiEn6dNJwRlFu3sse6fgsvCLxflxChbnOKgdOToFXIke
KgmTFFxyU3ygkTYFVZuvfUhgJ7CjL/Wy6fspcF3K/e7EQ2CghL1Zt8QYf84o
4Oc2Am8YVdZIWZkC7YXHDWL7CTzn5kQXYqKC8sRDg0/KBFZ9dSXtCwsV3u5K
PG54nsB52UdN69iocBz2fjVXI/CW2g3CIRupYHOalLZxILBd3xTVaAsVBPaw
XZp+SODBufJEiW1U2Hi75dKrJwSW+xN68x8fY/zR50xLSQSO3XJv95sdVJhR
fsHqnkLgNRHl8YQ9VPhDXYvWTiOwidzu2PvCVCif+vdZt4PATeo/rikepMJ3
QfLC0S4CHzR5I7D5MBVavkR3B3cT2P9h1vDEUSqcbAnNu/mFwIv+7hH5x6iQ
cf3uucllAmsmGOg+k2HMf1r6599XAhOk1HYNeSpslXz7bpWbxNtbufp3nabC
wPHR1ed8JE4SsH1tqE6FLeIbqrfJkZjl6MUgMS0qZPJJOV5WILHZGRH1PzpU
8P1qzV93hcTtuqucnfqM+h22OBijS+IjloPtMYZUkD1Lz3TXJ/ELlwI/SyMq
PPeVC5N9QOLlMF+Vk6ZUiNvZepXHhsS6mcYbOM2pIF4tWy5nS+LyKvnmUUsq
4Bl+r+c+JN7Zw+OVfZ8KcoNa3x/6kthldkHpqR3D3z3LrWf8SExbaWJWfUSF
ze8veGTHkFh5U0KdgCOjfu4J73EsiTP3PXadf0aFM1aRD/TiSMx5Qkux3J0K
i7EV1/VySWx18b+/vt5UEIn2lFzMI/Gbm+uq9f2pEJt946xxPomP2791PBRE
BWv5Z68Ey0gc7lss/zOECt3jQdU/K0n8MzZopSWcChfLDldrV5HYgGJWFhFF
hbsXbI6U1ZC4pgk9MoujwtObOt7UZhILjQrInEiiwsIddOBQC4k9Py59XZ9G
BbWvn9rmGDzH3EkOZlJBUc26M72bxKp8abbpuVRg/6t3Z5TBeYefST4spILE
nzbu/16TeAvS+6xcRAVyWubdhT4S2+lIFGwvo8LYnhvs5gweNGe3nq2kAs0x
aI8Xg+WcaWLFtVRwTwpZ19NP4tiQyg+eDVR4TAyMvWbwWtrLbJ0WKtwY2riu
m8EmFVZ3RTqo0O+1PlqbMb+p+9yhr91U0D4z1L6VwYem98w19FJhbsVA8Wcv
iQN+/EwLG6TCI+alAUOGv4+cvaa3Rhn97ZT8epThX2tvjvDxCSrEODKbrHWR
mJTypDHTqEAYEE/fdJCY98L1pN5ZKrQF1CyJMuoVXlC6+HWeCqqfdlPGmhj7
lZdbnu8jFXI/vAvSqGfoTve85ZaooJ6lKkSvYOjTzb0G36nw1zH9PxcGh18Q
2vPsFxVyMvmXNlNIvK3Q0TLxLxXeJ62Lc2D0P4x3sLSemQZwX5VYziExj7ME
y+x6GiQP0cCfsV/Cpv0vbeCkgZmF2bGxaIauOhsrupkG3TtNT8kzOKxQcf4i
Dw0GF4jjmxj7k5svWtqajwaRRy9zCnqTOMT5q9uLHTSQtJu00/Yi8dYZjW5i
Dw22CNh3D9xn6KpZggPCNKBoiJVJWzN0yjqzHwdpcJY5eo+iFUPnu0EKiNFA
xo/lXIYOo9/PytZOStBAceb78WPaJA6e4Va7IUUDKXW+6V9aJN580SrSVZYG
iR9CLW1lGDqlZSb5FA3eVZbP8EgzdP59kk2IBnPu8bddjjP0Z07Oc2dpcEzA
o+f4dhJvmh1sY79AgwImeuQkD4kDL0ryiqnTgB625V3ZVhJzEQEmGlo00Of4
/HvhM4ED+en5D67QgHddgFv0JwJzuaDfoVdpkAN/zz5YYOiz0eeLr9PA6ndW
T1IbgTeqfQsbMqbBysOAQ6qtBA4gNKdWbtNA5b4r/5d6AnMKZIvttKCB++ex
eL0Ehu7C8uS0NQ2O/BA3/hpHYA76jSYjWxpM6+85ZBpKYD+18q0eD2mQbyKe
ts2WwOwkz420pzQYs/0onvCAoQtYZ7c8o8FIcunahisM3bX1+7w7DTaVR89M
AkOn71Pa6EODiMbrKZcQgdnUnYOPBjD6k2x+voePwD7k0NilYBpc331yFW9i
3B+Cxw7ZhdHA18g0bBMXQ3d9bh8eQYPCghEv1QkK3jBHx6UxjHw9v+3EwxTs
ow5cowk00DOhiE8MUvD6opirf1JocKb336aVFAr2EvyetjuTBti5e2k2gYJZ
3S4toVwacCiuiTXEMfS57NO3Cmnwy25iR7AZ437VYA3wKqKBecF46klTCvYo
ujmUUUaDyncNu2uMKXjdjgrh9ioapHoL3Co8xNDdtj1YwDQYTdnc0r6fob+z
rtrURANVx9tDrfsYukYbm2QbDT44sXq5dhVi5mLhK9pdNNjsWpQk11qI3XY8
S3LoYdRnY0tvFC7ETO7DixEDDD8l0xa2ygz93TH5ihHGfqzWOvgUMXTNQO+3
4zTYwOaxlU+GoRfP9f6l0qCICDotX1aA/+04s0eIToNatZ9almQBdnGPtVR6
TwMLBemIJykFeO3d99LbH2ngVDR5b3Z/Ad4td8Adlmignfyu1E6oACv4XVHb
9Z0GznsLSxy3FWDDEU/elRUa0Cye0L4E52NH0aKp/lUaSEdYc7IG5OPoJ9PZ
hUzTcEgiUpDFPR+Xt3E7PGedBudgJ/2L3/LwsMAZRXP2abhiaDsa9ykP/7hr
w36WaxoiU7eQT9/lYd6KxL49W6fh/r+Y9lO6eVia403c723TwC5uggw087DO
tTWzIf5pcPzE6Sx/IQ/bZR89Ru6chuJhlkU1MheH/rr+J2jvNFjWXtUxyM7F
FNXAZguRaVh8U8HSmZqL30RXvTh3aBoEz949VsGViz+9/3Btn9g0CP+dc6n+
l4MnFqZWJ+5OQ3jYO5Omu5l49dSW1gqradBgMYtBRpl4R6Bi6CubaRD9tST7
ID8Dy49bG9o6TINJX8qm1PQMfPVI/AGNJ9PwoP15aH18Bn7s3PVZ1Hka3ouH
bnGYT8cRXX8qWN2m4XeXTkDJZDou2SXmRfWcBr+KhZ6G4XQ8YGWgWe07Daio
wMt5Xzr+Wu0vEPV8Gj6d22+2b3s65tlUMW3/Yho820zkSjel42M35vMuvWSs
L7vne7BhGtbK538sFjkN7vtYIjedZ3yf/T1/hi12GiKUlvEsSsPBGo82ziRM
A1Ssn7mblorz49MHa1OmIe7MOuFUh1Tc9XEgMSZjGr6ellTwuZ+Kqz+3K+nP
TsPqLpX0fkjAK6GOMd7z08DsO3KNlhiHpaXFlosWpyFFdB3e4h+HbYbeqk5/
mQaV7PvNAg5xOPdJYPLW79PgfU/Lcqg7Bs/tOP1L8dc00DcWGm6sisHCNR+1
rP9Ow49G/UnTxBh80yghK5Z5BtbHFaxt/BWFY5gvMXWsnwEWh3PEg/ko/Hjb
QI3CoRnYnnfwS5fZS3xcdlJO2HIG5BdN6WefeuL7o8EhWvdnwPjZIbN/m9xw
jhOad7GbgeBhsxXlMVc8t/sLyn80A3pc6RSXQhe8ry4p8q3jDBSGOsi/uvEE
X791+TOH6wx4hfrrx+x5gqNY16nIec7Azuqohf3JDnggg0ww852B6rhjK9lx
NnirqumP8OczILxp7wS+YYM/GswXseXPwFBv29inYgOU5bIs/vHzDOz17+Yx
8/dH+R4EB/u3GZhhfen9wCQAkT42s8IrMxByLlfjtFsAKg2QwKdXZ6CIPLHi
VRiEqoI/RV9lmgXD4jenfSWDUV1YvoM96ywUGO/O2KwVjJoirC4Fs8+Cy7jQ
cHBPCGqPETuczTULJyytRk79DUGvEz6wNm2dBa9DW5+EbwpF/SnZU5PbZ+FQ
jogU1IShkYy7lb8EZuFk0MPKy1NhaCLn0Kvtu2dBel53zeNLGJoumHsgsW8W
Zr/KjQWnhKN3ZPrFiwdmgdtMN/5EbThaLL194M5/s/DojdWGyJ5w9KVShMnt
6CzYa+ufFvOIQN9rp8dijs3Cqz0SvHHREUjpX5/PBftZeOzw9YPNSCJSYQkz
MX08C/uSfXJxThJSZ7us4OI0C3s8LS16iSSktXErf7TrLPRMcwpKv01Culve
LBV5zsJro0UFBb9kZLAtuOu17yz88P7Zvv1FMrrJr5H5/jmjHt5Xx8TeJiPT
nVwerCGzsEZbkyy9lYLu7u28vjd8Fj58ddW4Z5GCrEUCZE9GMfxtsJMKWkxB
dodUeXTjZiH19BcprpOp6LEY+8cHSbOwwPKMlYRU5CzR2hqQxsifNF3nT09F
7lI+KelZs3CflcjatTkN+ciee1aXNwvzTe/XtW5PQwGnWK++pTD83ulTHWtO
Qy9Q4/EfxbPQyb220DyZhsLPemzirpiFrNr/kv3paShK5cy8WM0sDP4Q3GwS
k47i1Zgaz9fPQq6tuedcbjpKuYTjTZpnIYgpiTZGpqNMHZcnzu2zwDOx2eyz
eQbK0z+tE9k9C9Z7fNCNhxmIMFw9SvbOghJRw5PgnIFKjarYuwcZ/b1uOrRf
MhNVmTrOvBtl7C+3JV2OU5mozly+dt3kLPD1a85UKGWipnsrUbunGayVJhX9
NRO1Pyizl5ubheempQ87VjPRa/tHmjofZkGBNefKjvVZqO+xzH/3P80C+/k9
8Z5kFhp2+sbivzwLZ9ZLjrhVZqFx16LJ1B+z8HD/Xq/ixizkZq0i++T3LHQp
zKjM3ctG+w3fvlBfmwXl0FF1A/ts1HbhwbzQOjrsMWaVP+mYjaxOsJz5vp4O
C3NPNDn35KCt+yOj2znooK6yMzH6UA4q5hZbjt9Eh/gtRbduH81BV//VXrTj
pkNLw78hjvYc9HdRO/U8Lx1kH7SqPRrOQSljc392CNJhXTIRmjqeg863OV75
vIsOwWO9dmumuehDyeb8RiE6jHfu2tvlkYuCU1PWR+2nA1ukMleWby46Hnri
ppUoHa5Wp9751pKLhlw6SuEIw692U87D//KQo9XNLbySdGDSmOA/JZ6H9hgs
m7+XokMAV4rWI6U81KDiU1cjSwepqplp1c48ZCazQzDsFB26Gl+kH+vJQ5wi
BbZmiA79KfdeLY3loYKtSh0nz9LhtNT4J767+Uh7bVB4iwodWrP1x82s89GP
BQunmYt0aGvi21jikI9iRv/2l2nSoXrzQkv4v3yEWkOPBGrTwejUQ/+K9QVo
tviAt7EeHeJemysabixAfikVE9IGjHjt0HAytAAdCdE4wXGTDq7mlFrO6ALU
84wWPGFCh49vEplq4wuQw72H74g7dPg22qkZsLMQCVzjAB8LOvQyly4qHCpE
1efjowys6XCyMubGHbFCZCx9bEnclg5k7JadlyILEatwsyrLQzqEUAV3SFEK
UdaWaynDT+jwcn/w4S3FhUj97+LvXGc6DM8z912kF6IvH9x03Nzo4KOXtvxO
kILCR7bnXfGiw4QXl2rrTgqSa8li/c+PDi7KwdfjRShovEjhxt/ndLjg5zr3
6yoFuSf3lPS+oEOSyJIN1YCCDr64vTnjJR3WNFgGmI0oqMN5xcwxkg5VR2yx
wisKum8ZiDVj6XDFV8lROZKCeK4KCYgk0sH+t5wdZwwFlZ4rtvmZQofVdcOi
Ea8pyEDqQntnBh0abov4zvVQ0JrQ+L6kHDpcqsjiWtdPQSmbbRwdCuiAYoSY
/v9/2PlVlv4LJB0Mk4QmK9kI9OF9pNjuUjos8fd+fshBoOBhMa+lCka9Ov9Z
2MgSSKoZjzfX0OGTSF1o6SkCjZA6MjH1dBA2pAbIniaQc9K7oPvNdCiDBvs+
UwIJBTvNKbXT4defDafeWBGoyWkL4u+mg1CUs9/R+wS6a5EaudBDh9dSGXyn
XQnEpS/7BQ/Q4alEZO7vGAJRlDsvhI/QYV9twx6VOAJdOW6UfHecDpfLIqxT
kwm0svfrLwUqHVJsw23EWwgUt8lXm3uWsd/4ffIetxII/uzIpb+jw1DTyFuF
DgLR5wtYKhcYfpaFum9+IlCGaNN76mdG/87Evez8TCCzu6Nv2L7RwdFAYS1v
mUCHsj6ViK8w9Peq6tu3k2j+HUuc7iqjP+faOC7ykmhx7qr0Etcc7N5lxNaN
SJR/8P4OAe456FQX0ziiR6L7Zp5MiHcO5u7zfd2pTyLxjKi5O4JzkFZuPxZ3
l0Sf6fldgbvnYMT2t1ygHYkoBxrJon1zsLXYo/22PYls7oxEjR2YA0EuM52T
fiQ6lv7RhfnwHDTa6Ot0PifR8uy6O6Lic8D6LGUuNJBERfsF1C4dZ8RnZWbd
m0Qih9tHjz06MQfzcwfIuWQSyaQp8cefnIOz/uP7E1NI9GNG/2+j4hwsLlae
6Sz6H8VmHg7l18ZxSkiSiiKi7CRJizXnRqksEYpUkpSthCRLyVYoIlmyZN8Z
Zp602Q4VpZJCKpUfkm1mmDFL2t/n/fNznZ5zb9/7PudcJgI9UD7zddp8HM4q
H4r81ECg0BMxXct3j0MQc9n7hHsEMijJqjewHgfvNvD5/oRAP0ZrM47ZjYNH
qq5MxVMCNSo9jrjqOA6Hz1o9se4gULjH++MU53EwkV9b3feGQMbFjN39h8fh
5qfgDbvfEuj3iKDOr2Pj8PXV/sXfSG5Zv1pKyXMcXDc9jw8YJFDkce2fe7zH
Yci2+tEjklGR2fDZ0+PQq2CTv/8TgQRGDnZmBoxDpWdee/8wgdrXna5tCR6H
Es+n8n9IjnGPThsLHYdh4ZrEayMEsijMDF1yaRx89iy/vnCMQELDNW560eMw
tZe6QJLkDsX2nYeujEOUTF6lC8lXjw1oRSWOg/nSfy1/vxLIsoAuWZFM1qPy
yzE2ySL/CXzvvjkObZqGOzePEui5wqov3AwynlzXx89I+wluG57I5YxD3Y8q
x0KS9+ZDlXn+OFTpVs6cJ/0XGzqQ4lM8Du9yBuePkfG9XOt3PrV8HOLYizhy
JCcdjTr8oHocuj6tZxFkfmzvZJgN1Y3DOqWO2edkPiXIC9Oiu+OwuurykAfJ
PfJtS7UfjMP69DXdn8l6pB55x3FoGofvj95dEiJ5f970xzA8DulnfNyDyPqt
+PwPFz4ZBwUTp/0TZL375KTLnz0bB90L63ukSE4/rJU085K0l/Lr4E5SH065
KEj6zThsT4/500PqSfqTk4tJ/zio+yv7/Cb1NrDG1/TEh3FYOJIT1VVAoEzX
yyrXPo+DZ9mm4SxSr8456WK04XFwGH6r3nqNQDKDVaz3Y+T63tjjA6S+P8ri
gb+T4xBoIlZhRvZDzqH+ZlUm2Q+ZYVuOBhLocPZUsQ17HA4GTUm9PkMg+Y9/
E87xxiE3t/H7mwMEurhgiuH4YxwadYQbmU4E+ryhz37rn3G4uN5Wm9hPIJMD
LQ1SghOQFuHVkradQHciK2R4QhPw1DvhzvVtBPpbcfPiO9EJcNprucp4C4Hc
3kYM3xOfANhwXPsA2f+tP0/uzJScAHF6ofr/f9+loGJfGSI1AdmHTGmGy0m9
2hqJO8tMQF/PVlAl58lQiEqAvvwE0DK+nKph0pBpoUT/6nUT8NAkr/8fnYby
u+b155UnYNZrX+sqcl79nRvN/aA+AWZ9sWJGHTTkJt/97+GGCfil/MmG8oSG
Wnc9OJG9aQIeB17/aEPOQ8WzRc/CtkxA2Vo7n7fZNBR1+/oGV/0J+C6becfx
Ng0Nt59PMTKegFd+x7qkz5LzkH6MswZNwJStQnKYHw0VSlk5/zKfgMWbZ13/
+dCQgOnWpk+WE6Aw5tN3BGjI3UtBsdlqAnYtMrI0NqKhtlTR2Lx9E8Cao0GT
ATnfG+fGLzpMgGq6WPwCKdL+189WRw9OwPCMofU6YdK++LO6Ha4TkFl52Psm
ed7AdtoKBbcJOObvxgpmU1HRsdyQv8cnQKZT9uyWHipSWrRTOCpwAnZM/Khv
uEVFMTo6vu7nJ+Bya232nRtUNOos8xrCJuB5SeDF1YeoyDx6gd76SxOAM7Qj
VzlTUUk1I0MwegLqriwUcXGkIqH+gR8jcRMg/adnRnQNFXn+aTv6OIG0X+Ss
3ryaip6q1bQXJ03AXo2gpFopKlKxz1CNTSX9N1LgfCLvA3FhlxNPpJPrx3zW
etTUo7FiH6bF7QmI2d6mvri8Hu185bhfJY/0Z6HqhUGNelTK23FPqHACtvCa
YYESeb9Q1JD9VjIBXUpud9eurUeee1Zc6qiYgBYdL/WivDr0NPD3cFnNBJj+
J/408FYdUs0d33m1fgKebLiHXt+oQ1efvqk8dZesl6X8muKldWic2Si++8EE
6Ihbr3hJ3qcsV5cFqDdNwIdXJ2osflFQOaT0i+AJsFDovPUnioKEfcMMJh9P
wIzIrL6WFwWdunUi73nnBFwzjLtZ6EFBnc22AlUvJqC9vHBJ2BIKUhvX90x8
PQHdusdsKF216Ooypec+vROw8PnLl0IdtWjcQFzbamACgt9sKf5XWIssPfgp
WoMTIFhBUzmvXosqrg9zxIYmIGdVhnSKUi0SvffCmT5C6nfI9Z+9ZC3yHmpo
evltAjxaLdPLo2rQc5ECxdopsv6PdowdjahBGpsTY5OYE2AsLVOy62wN2t8c
7XuIPQETosM7C99Vo/Dd4fvVeBPgt+ZMMe6pRqW9QQac+Qm4/kFKsvZZNeo+
6qfY9nsCbgj8XLOBvI/zJ08IJwtMwu5Spd5mxWq0LvgI85DQJFimXt5sK1uN
9v5z6lcTnYSxnLOzaiFVKOiabRNnySTYhBlMnCDfA3nSlsVtyyZhYsOJnQ9O
VqGOQtPE5JWTcC3f2Rk9q0QzG/QDXFdPgtvoAZUh8r0h82CTs7rcJLinbzoS
QalEZuYaplyFSfBY+snFzrQS+XavU21XmoQYmVxRV34FSneRFb+hNglf0l1C
JlkVqOXrco6r1iQotbmwbvRVIIfMHA9Nr0n4q+VU/CqefP/9qjHrHJ6EX34F
11Q60tFfG2X3kskpkL+yysPybzoeWxnkcJExBbUHFC++P5SBuwbbdh5gTcGM
vhEvzisD1xUt09fhTkG/5/j9bOVMnO7tpikyPwV7Wey3aHMWDttEkRv+NQW3
hofLp0yzsBv/19JH/6Ygbxk73DgqC+9ssRJIWzgNQZ2Ca88JZWPNuOw5X5Fp
cBXae7xgRTaWsJ4cs1gyDcFXV6d92ZaNucv138svm4Ynv+v3sHtz8McPV7p4
K6ZBu1Rw987RHNxa0N/0etU0OC2ZSDn3MweXnlKuq1gzDcm+xq7L8/Jw4sag
wiiFaciNMFt7kZKH/bltaYeUpkFa09J/T1sedmpadkVPbRq+ydzf1emWj6s1
f1e1nyC/T92UZxRVglNZVnk5XtNgHMqWe3y1BJ9/kH3jnN80vDp4t9M+owS7
Rk5G2ZydhtXuIk0e+0sx7NI/p3puGj6JiBwMdSnFquJXT/4NmQZGt5ppk0cp
Fuvrd34fPg1ZB7ov3FMow6xsZStq5DQoGdK29KiV4XfuQSaJMdPwQ82t6qtO
GW5Ub9fxuDoNJUtDXtdMlOHCmWXrja9Nw4bDyi/y2WX4yj23lVI3puG3hiPl
3HwZ9r1IWcS8SeYzLWfH6ppybG/x+3tHxjSo3WGub3tYjreJWU/nZ08DZ6O6
xEBrOV7zNvvzhTvTcNv/iMwvzwoscHvytX3RNND1tNLFL1bgA8LvOP8Nkf5U
xXIdpWqwi2LZuSVfp+FQt07QOvka7GpwnrN9YhpGBhd4hjyswUf27zrnQZ+G
ine5cW64Brv5SnOSZ6dBcr/WjFBXDXaP/Rb0iDMNUp99ZwaO1WKPvHtzY9+n
4aL8+77Gk7XY896VIMnf0/DPHjzhXC0+9frAnLEAHW7YTt8XX0DB3hOqQV5C
dPArHz9uL0LBvgJ8dpooHS6Obz5/WpGCT8t2BraK02Hq3rU65QIK9tfLZE9J
0uHtWt4HkVIKDrA+FSgtTQddDxHDrDEKDvLczgZZOlxenpu9Sr8OB18SDjy9
lg7J2xbVvDSuwyGZA6ys9XSIW/rZ8welDofWlwc8UaWDpUpoyIeuOhz+PIQ1
o0mHH05SKxNf1+GLI5YBa3To8OfSkwvbrepx5M9VrF16dHjwei7DxbkeR62c
OBu4nQ4FCdv+bT5Sj2O0H8zmGdHhU47Uk83v63Hcrvizz03p8GjRTHbcf/X4
qpvzLMecjDfz9I72sXqccEH9rOJuOqwQPrV/tQ4VX0v9PmNlTQdlJ60nKpup
OKnqmX+IHenPkXuXlLZS8Y3HWTNFjnSorjVUdz1DxamfvPy7nekgVZKq++Is
Fadx9WfmD9Ph+tJ2k8vnqDh9qai/ijsd1t4Ij86uouIstQ9MO086pMVF21bV
UHEOqjwT4U2H7s0Db2aoVJznEsosP02HvJOdc+OjVJwfuOdMbwAdYkRrNz0a
o+LCazLMP8F0aKf//Z45Q8XFJZOnNcPo8E15xNNSloZLmx8ynC7RYSzrUAB7
DQ2Xv0s4HRVNB62jB5o9t9Fw5YwLo+YKHXbsvb7uvg0NV4tonn6fSAfZQqkj
VvtouHbdD/qCG3QwORLJunyehusMu/x00ugQ2K/N2HyJhqkO2fRDmXRYqTm5
oyWShgk/H78rOXQQtQ6Jniqn4YY4Qzo1nw6rzBr9G6pp+P6dxX6fi+mg5CAx
s7OWhh/e/zgtUkH6c1De6HUvDTf2VPluqaFDhPeZIf13NNw8GTbtVk+Hc6el
l/43QMOtgla+1+7SwSGH7j3/k4bb1qyZvveADtkuk0fv/6bh55GuUyeek/He
7XrurUzgF1laPimv6JDULLDknBmBX1F/Tja+oUPjXeUvyeYEft31wnu8nw7b
wqRfPNhF4DejOZPLP9IhdfiqE/MYgXt/+Xrv+ELW74qF8Wd3AvdLGU96j5D6
K/hlPXWKwAMbl3inf6MD+qbhbBZB4I+WnybwFB12/xdxRfIigUvbH02/Z5J6
Wm4T+iOBwAEmt5mzbFJP03GXvW4R2PhBCEuET4eA3V8yZNMJLKx3gKP4kw7/
jmvSTpQQ+G3tFr7+Xzq05OV0////w+epr/hht4ABz7YsbxaoIrBXMeuXlzAD
TEM+itEeEFhvbc/fy2IMSH6b9mRHI4H/ZFEEb0swoKokefNjkp+vSBKirmDA
H3r+tqhnBE5P9hV5vooBEKVHYTwn8DHRvWLDa8j1tvB81y4Ca8WqL51XYED8
+MrJO30E5v9ZJCmpzADlLS7WAf0Ebg8dW6GhzoBO6TOSz0hO4jyWhg0MGOFX
VDh8JrCzf5GMyyYGDBSPv+8kWWnqslzAFnK/ZzZ0oS8EnjnhppCgz4DnqUR2
4wiBHw2ZrC80ZsANy3jRWZLjDsmpPEQMCEgQfbN8lMD2/T/U3lgwINRsh8Po
VwLL2X3QnNzNgJMySZKTJI933dcWsGHAujPDAXSSaTszNsnYMyCxY+WhN+T3
F/E5PV0nBmg1ri2mkbzbyGHbHhcG/HdYxTyF5BX3dA3cjzAgdd70QcIQgb9s
WmYc6s4AWWrPjDXJldXMHameDMi6kDjyg/Q/WPUVVHqT+Y+UPy/xnsCosNqi
7TQD2mMqKx4MEFhMLtHyQwADSlsrP6qSPJDhtZcVzAD8o97a8xWBiyQtbUTD
GFDzPv837yWBT19XsVt3ibR3dGufKMn6wgsdDKIZkGn/+U9SK4EXRI842V9h
wBapmFxRkrt/YWfvRAbcqxK5kNRM4Nsh+a5RyQwQf+SQcJ1C4BPsi0dv32TA
gXCDOnYtgXVOH3anZjDg1IVu0fBqAv8cNzzxPJsBGyLqTE5kE7jjuMyp4TsM
WLZZ+8Pd2wRO/cz3ni9iwJjh5u9GpD6POL/zkyxngJKH59vVMQRW773rr1HN
gLdfqvQcogk8Z5MWCHUMaH1g3G4bSuCWZwHBLgQDVs56+FG8CJxgbnch4D4D
Whzf7H5D9o9Ty8bwhEYGbMpO5AweILCigfilwlbS39ipEg0rAk8T05cfPmbA
u4CrS/T2Evj+xq6YN50MSKhwnx3XJXB0ZcWVyRcMsLFYnHRDk8A2ylcTBHoY
4PidfBlqEHh1vud1mT4G7Ekljv0VI/CojMUN3fcMkHpbUDe2iMCUW+tv7vnE
gEuEkSkhROBQCYF09/8YYFkmr636lYYtEocyQ7+S+lKH5Zv/o2EJoZbs1Amy
vttZeoNfaHgwMjevks6Aju0lf549pOGyH2EFbbMMuCJ3dGv4PRqWdNu4Lo1D
6qVw4L/1DTQc/ni48MR3sn6XIp4NJtPwN7X09dt+MaBrJp0jkUjD9td3Fwv/
I/vbfDztYTw5D2d/Kn1YwITsB3nMAm8aVnWqK6kSZkJr7Lf8lkM0nPrwuEqE
GBPMF7FmnV1o+Ke8dJmNBBM0V081BJPz2zP6uarCCiZQ+LzqW+o03PMtonxW
mgmPvi0sXaJGw0ZWm9TbZZmwak3g+pr15HlRN1qRtpYJJ5de8CmZo2KJlZka
nuuZEOaRVDHEouKwC3urtqky4Y7xUd15JhWPffqtKaLJhPP9Dg2Lm6h4H1Cr
P2iTfPeC4OeHVPyw9MSGal0m+DX4UlLuU7Hy4tW1EVuZQNMXifgXRZ6fZ15o
2xowgX802HBZJBXPv71EUTBhwrfTDruWXKRij+2bdViICc51UppKu6i4O2es
rt2CCbVJ/MY4oGKDf1mbbu1mQmnIomsFpuT5d8Ka6mlN2he8nmorRsXiz//q
brdjku8V6gErASq+oE3QRByZ0P6azun5XY9HU0/qfTzIhF3Jo5aUJ/XYhidz
t9qV5EktveHwesy/On6P5cOEM9NiH1vpddidnr398RkmbD71YMR0tA6/tLN9
cCuQCUenEc3bvQ5vbxAwOHmeCff/nKg9fLgOF8o0PNwexoTcxfWdqU51WOyS
l6HoJSbESy+OMXlFwedH1jR+jGKCTdC1fWMdFDy867VRTRwTGnirxRzaKNiq
OrrpYgITNikNth/fSsENEttM9iUxoWnp9dcXNlCw4rnJZsVUJoQHpTheUqPg
a+9zd7BvMeHK4W3St3NrMdfYrvVxFhP6KJ579JNqcX63fLtoBRMcoyOtrnyt
waJ6b8wGq5nwvvdxVWNTDT6XGfu4po4JWzSSFftQDR76ud3iEkHWb1tx+iuj
Grzn2PSTffeZYMKSnlu2oQYTT+7sXNfIhF8Gm/2X36rGazX2d7BbmHCt7X3s
heRqnJAkZPmknQkaL3TdKLHVeI71oDO9gwmcElXsOFqFjxzw232qiwlffgl7
13yqws8eKTzX72bCEu8AU9P+Kqyn0Ltn8VsmyD0WFdysU4XzYq50DfYzYfyL
pk2yahUWnjCwqv3AhLMp+5osFKtwoDXjxaXPTMhMb9LYFFqJP9cXWNsNMyFN
eK2zhV8ltpRyfLVujAlbfxhkxZ+sxN0v4gd3TjKB0eT8xa2lAjtFN096M5jQ
KRxfsqC2An/WZ/OTWEw4Fh+VZ1VWgU/MqC6icZlA3DyVzeWW4+lS15Xv5plw
eXCLlMNkOQ46nLL+x28m+IpdzH8zXI5/LH+6aa3gDDjuoeTNaZXjqOfzO8wW
zYCJdVNKx7py3Hgxv/642gzIyb5uiG0qwTrfptKKvWdgkyGdUfUmH0vfjzqk
wpwBG//lYztfx2GTg9e+CbJn4IXP1PTGkGjswb8V+B93Bsosbsn9kYnGiZl3
/jTPz8ClqrLEO7+iMHV7RWLO7xnQ33Jj1IYTgQcGqNKhArOgdtvyMis2HP8J
aSw6IDQLs0aXaA+swrHK6qcbt4jOwqti1Tc2d0Ow1YPuR5Lis+Dfmzuo2xuE
A5zf75pZRv57w+iorttBOOv78NuXK2dhM96att88ELdmTR+tWj0Lh/vu3Gk1
OYXH9LlTV+VmwY82tlGh8yQW+/DnvKfiLAxIyfY2u3nizaEiC8yVZyHgVs36
Kw7W2EVm+Q1F9Vl4sqz6TKjLXhz5cM2aP1qzcMuPz+5J3YUnGhsG33nPgoVT
pe29ojgkcbj11N3Ts6DiEKxJjb6Ctv56NpcaMAt/uoQJ8fwr6HDu20j/4Fmg
+cj5iIrHoxjjT2I2obPQo8PN3Lc/EVV+GsvUvDgLjGPUn51nElFPxIySSNQs
BMVkOPf/SkR8ufm6sdhZKBl7yFKUT0byzYLGj+Nn4XV79N2bhsnI/MiSZwXX
Z2Gd8PvXaxOTkc9vKcdLKbNwqcs5Li8gFaXmKfznemsWQuSs8g9GpaL7Jhp+
Blmz8L5+nRwjNxV9/rz5u3QuGY9bb3mrXRpaeMk4lpM/CyZXi+t1j6chrbW7
lr0tngW5k/E55SFpyL5lX25d+Szcy85hE1rp6BGePBw/NgvnnmhuXOl6B1W2
C/jtn5wl3yf+YTped9DtJzLhcoxZiPUsvqCScQcldOgmfpudhbj2mly2fAEK
fbbndj1nFjao+41KbChA3l3uFWHfZ0H386DvrEUBcn4Zet/iF1lvyoR/9elC
ZNmd2rH03ywsZnvUzwYXolwvp2k/QRZY3HhwtvFSIUrzHmbbL2QB+7eve41l
Ebrmc/rHtkUsaFp7+WDu/iIU4zsvICfCgoeBJjNNLkUo3C9OVGAxC3bvyQ92
lS1GQaclJb+JsUDHJtjHeUMx8j2Tt/qFOAuCV7wNrNlcjDz8NRTrJVgwQJ9d
GdxTjFzPNqilS5L7iX75OyNYgj5EBheM6bAggqs61yJcgd5cFqjo0mVBvN/1
H4fFK9DzqKS6Oj0WaCxId10VUYHaomXu39rKgm2rf82qP69AD2NKW0K3s2Ch
XXl3XncFosbqdhw1YAFacOGJxWQFqoxrfmVuxIKoAfNNx69UosIre/rVTVhw
assfYYnrlSjrav8ncVMyfufD9sZZlehGvPtXNmJBnobuG1nTKnQ1gTE9YMaC
TWe3b47YWYUiE0PnmixYcLv9iXqQTRUKuSb0s3AXC3Ymp0a2sauQ//VUwau7
WaCpnIYe/KhCp5LkF/vtZYHfXL39539VyC25UtLemgUHbHbMduZXo4M3tsps
s2VBw4VHR29XV6N9KW2Ka+xY8HWEX/++vhpZptqo/7NngfSbnXs1d9Qg05sf
dMYcWGAakSLJO1iDtqV5bu9yYoGWXLTby8M1SPsWa0fdQRbElkq82Xy7Bqmk
X9x1y4UFXmFVQ4V/a5B8hqhtqCsLngbU+59aWIukMtOdjh5hgfUSCbqSVC0S
z1p3xNyNBS2anxacKqpFQrdrT6i7s8CG0bcpqLwW/b5t4CfuwQKjxY/7nOtr
ETf7aRD7BAsKIm4u5ZlSECPHPnzgJAtYszf9n+ykoLHcz9FNXixYZ22RMGtF
QZ/zvBMLfVjwfD60tXaAgvrucFOv+LHgXqf0pa1DFDS42+y/W2dY0NrqI/Xf
VwoaZidvLD5L6qUjQmjOrw6N5w5GUANJnknbUnGuDjF2qb9oPUfmt0EkoSKs
Ds3NnpPpPk/WdyAKXf1Th+az2059usACky1h5zgL69Ffi6X3psJYMJ7rkXFe
rB4JzRxaOB/Bgv8E+W8vJtYjsdvl+4UjWbA0q4QimFKPJM05BVJRpP9P31ju
yaxHqxhoRimGRZ63uZ9YIlS0NjPJZHMcC9xPyScdFaMiFfh4DV1lwfREfFCO
BBVpTat+tE1gweebEq6H9lCRbnqQ+pFrLHjHWvglzoqKtpvi875JLMi4c+b6
YzsqMplc8jT0Bgvatt6041yhIvM0lxXxqWS+6jWNGPFUtMekzD0jjQVTFbJv
FqdQkd04u64knQVVSk/8HrZR0cFU0z+0TBacsZy/kviYio4YXbduu82CbwXP
v3Z0U5HH2Pvs1zks2OMxG180T0XeN1QmP+exIDxTRdbxJxX5GwRup+ezQERr
+Q3XZTQUPNoS96OQBV/4jaoVG2koPEmsT6SEBeVr5J6hTTQUtd15/aoycj9V
vKrLnoauDpecVakg9Tm+/1H7MRpKusZq0atiQYJKzFfL4zSUtnWHuFkNCzxa
NJ9GxNNQ9lCiqx2FrKfL8MDUDRoqTBioPFrPgvM+EXvcU2moXE/5ux+NBfk9
ysPl92mo9vPZXeF3Sf0GNdrJNNEQcbX5VsI9sn9XfDsW10xDD3UXj2Y+YEFi
Nv2T2QgNtQ4e0C17xIIJ6ZJdlmM09DSuOPJuEwsYvn66td9o6IXO7Kv2lv/n
U2qnviiB3nwwlnuDWfBmw7z+GTECDcQk+Ay1k/0k1Xfu7RICfdZ+94DxhKzv
2jC3/g0E+jqwXvhXB6mHIyPi8RsJNB3l77T4OQuc0rNbZnQIxNJqKl79ggUl
O2eWbrchEL9fhK36ipyH65+svmFLoN+RTmjraxYo+bI7/u0j0ALNomTzNyxo
t0is9PIhkGgf85N9LwsO6zxZe8mXQBKXjLSO9ZP9VWkpsuA0gaTV40PPDJB6
txXYfSaWQPJv+zojPpD2NV+72MURSClinfS1QRbMevlu5F8hkIbqmRO3P7PA
0OX28905BNLpeUQrH2KB8m7nMIFcAm0NExa4N0z2R+vIwNc8AhkpO+57MsqC
XYcCs/gUAkF3Qd7bMXL9/FR5Uh2BLC8wpv8bJ+evlMytMSqBbNYbGs5MsoAj
2xgb2kogh5dX4n9Ps8A8LOQyi2SX873vxJgs+HTh4SQ8JtAxRUUV2VkW6MmF
b3/1krRvenCzEJsFPVq+FkqvCCR2NNl0do4FMuOK3xq7CTQc8dR6kMuC9Ki7
SUPvCHQ/55dLB5+cx831x9cNECjpkd4p6jwLbJPlPFpI9vjgcy73Jzm/f3XJ
vPpMIIPvhVFXf7NgrfSDsh8kS6z6kBz4lwXFOie+mXwh0NjWZblHBNjg//Dr
ycxhAjU6WlbuXsCGcp6Adi3JqUGX7ukJscGr8KF4O8knbzY8XivMBunoMhWL
ETJfVHqPqCgbbs6JSuiTLNmj9IWzmA3GRkVlG0keZx6aHlrCBtbJLW5jQwRq
Fr/5vWspG7qDhhxySE7b8Fzo3jKST9XohpHsbfVveeFyNki9f7648yOBTH22
K15fyYbOpZXfBz4QSCrhjHaINBuWvPwuX0jydHmp4fHVbDCM5nx/00egto5P
ljaybDBZniQ120OgzLEVTvpybEj2bA8tItlvodVxpbVsuJZvGltO5heUov2X
KpL7J53WG39CoFVmDyPm17FBdov3wCWSGcdmE74qsaHX5lqLPVm/x5Fqma9V
2HB0obbY4wYC3b5ztOSRGhviTsYPbSfZvzmdWqrBhrfes5933yXQzk8vW1K0
2HDuq+3+pGICrfm54GW4Nhss6+KV///3b5aM0YeTOmzYwvm5aL6QQJ36gd/s
ddkgoN/3yDmZQHkHK+eM9diwcfdeKaskAgWd/++f2lY2KP56VBJ+nUB70lct
XbGdDVaFacb7zxNI4a7tmj/6bEgvcFpYe45A3Ldx6pOGbHiurxY2GESgLlbT
1j5jNvwZcmOuPEyg/GUcs9YdbKh/52rx05lAwTpadlWIDdrStwkFkq1sjx9J
N2ODwevAlWvNCbTu9G2fyxZseGco5WlsSKDQieD8DdakHgpDPM+sItA+4dqa
VbZswHs9K4dWEEhF9etDQTvSfr3J2sY5GvppsaaTYc+GC7lNdXFsGnrjsb/v
vQMbFgQmK2ycJedfdMLwYyc26AnV4RUv//97IMykHGTDJnfVxJwuGnLA/J+3
Xdggf6HjC35GQ+pDG0XjXNmwgfv6WV4hDf3+7Sl99ggbSryEqu/n01CvXJ6S
qxsb7knc1V59h4Yqjfo27XJnw4rnL2zTztFQ5CGxHboepJ4q05JGAmjIKdTM
Ss6TDW4XRJWOnqUhraxQZ+FTbLgcs0a0eCcNCdyv92R7kXotbipUARoa6B8P
/OxD2g+1W1ZhSkONeUMdLD826Ka+XxC/gobyPQdkF/mzQfnks8W7xGkoRvv1
GdkANtCul3AviNGQF7ejfWMQG745iapd/khFNs0t0ubBpP66itZ6viPPz7h7
PgdDyHrWTd3Y30dFUjaUFt9QNlh/Clf/mE9F8yvLll8OZ8O6mKWD1blUtMbx
BG39dTYEfgqga7eR5/+aw4u2J7MhUkL41I2mejQ66nDIKoWsh9Zi+w5KPeqs
tqK43WRDV5paYcb2elQTZC547hYbVGwfTi3Tq0epRkYH4jPYwDjyYeSXVD0K
XqBXlZvFhqgVe1peV9Qhlxeaf+qz2fC9WcB9R0kdMklbv/9pLhua/xksrnOo
Q+tcZcs+3CHrGd/7YnJlHRJSWv6DUcCGpy/XHNRYVocmp0RtBYvZsDpSv2zg
FgW9ogkUSZeyYeHWgw3fwymIGjbP1SxnQ42U4pv/zlNQuhlrj2klG3YsTk7d
QK9FoYsn8xyqyXklbJWx/EstOvr2P9apWjaITZ6PO/O+Fplnv98ZUceGVIdA
x8M7a5Ha8Z7bKVRS/653JPYZ1SIxzWeMEoL8njY527OlFs2wWuFhAxvuNshp
fMqpQb0P76e/uk/Oly/XBjvSatD9qLrJ4YdsaGj9uoxxrQbl7Ck34TWywZSx
wiyNWY0iJfNTF7eQ9XiWEp42Xo0K7Y7o1naT82JDWyL9VSWKW+0U19ZDfr9r
av+Pzkrk/Z/1h/63bMg+7y7hGFuJbCostKf62HD62d/365ZVos1njaP+vGND
tOWZBrnFlWiV/pb+5R/YULxwb5voxQr086+WhtogG5Jq4wadbSvQUKfSRaPP
bPjZX9mwbHcFenxjzZt9Q2xIlOha03unHJUfXKFyYpi0tytGoSa+HF1TEAu9
MMqGh726veNR5ch/XPDV9TGyHrlxFTdelSHHuh+KheOkXqwy3PVby5BBCPtc
wyQbBKdqxyrvlyF506lnz6fZEBS0yerPr1IkIDwi94XBhleZf1+tYZeise4P
Z9kzbHj9oUNo72Qpui3WFDPKYkPA8SSeyIZSZLP7TkbfHBs6tA7rm60nv4+7
XPmUy4b47L4XjbKlqKHteNM9PhtSpsP5Q64lyPuPxevyeXK/P3WLAvaVIHkj
tZGsn2wYj9qaFb67BL0JEeUm/CbrL2vz9VFiMYq9Oy0c/pcNCf7+I96hxWg7
65Wsn8AcfL60pbQrsBhNa9drH1kwB1qnnX8kNhWhfJ+byFZoDryVV250LChC
DuXnHEyF50CwUUDry+0iJPz1wMlNonPwn95Q3K9/hahR0SB0ndgcnDv/4Inz
k0Lkf2TN9eXic/CkI/j8WHMhUsr+fWeBxBwImw1uSfcvRO6e616t3DgHB1fb
TT7szUSff3ppbPebgxpB2UNXPpxBwd5vL649MwciGUdKvtueQUsHjN4KnSXt
731icbjHDZVblKoyAubg0ES6kO7QEWRKWxreFzQHf7Q+0hPoh9GAwoXXjcFz
cKlPrvTDkBw6mzSsVBwyBxLOA8ID/opY9OfeC+STDgwNBYX0etVwodfdlwHh
c9D2Yamoc4sjPtH/178mcQ4eC4wSpj0X8DQl4966yjk4eUBOdunKFBwj92+x
aPUc5BXK5cq6pWC5RG+32Zo5KHunVrrh8E3cwH9LDFDI/RZO/17odxPbeBqL
tNbPgcWd8809MTfx2NvSw2W0OaDca/rdtv0WvoQkqEl352BuKWO6du8tvIpy
QSj43hy8Z2199ejwLVy3ZsTl8IM5uEML0G9fkoEtE6wo5o/m4G/Oz3Wyqhn4
P95dQa0mct1pg5/11gwcemLtweUtc7A+2PW4TF8mlnx7tXq+lfTnp4bMyO9M
HBiv/Tujcw4QNVHpvy+38bz7E/Ml3+bAyCFF+etYIS64wPwiNzEHZ7wN8pWK
i7DljdVh2lNzkDvln5beWIQZpWZSO+hzcHp+5ZVv7UX4VpNfvS1zDnTdD3mM
xRZjo94MK7fZObiZrPDpYHoxHp7E3/zZc+Ci5dcsnleM4/9NRV3mzIGdXXFc
nFsJ1lklJZ/KmwNL9PvGjG8Jfqdt+qDw+xzEPpE6setcCb5o4e1A+zEHkbRI
mtbWUqzsmsZs/zUHtzfaNRialuIXAc0JvX/m4EZk1reE3aVkfOPKX//NgYHl
NkbCojIsky+JOYIcqHTGmaskynBrg5GrkBAHtO+dFafLlOGTLz15UsIcKGpM
0xnsLcPiozdSVUU5ELukcubEYBkm5h9u2C7Ggb1Xr0e2TJThQ8u+dlqKc2BF
63zshrxyLKC21MNZggO0GCkhwZJyXGGi/8dLkgNsFaW8vw3leJ/j8duhKziw
sNW4/PzxCszzub4lUYoDzxMd33Z7VeC8qHuvs1dxYE8ut35RXAW2yPrPp1qG
A062jwIrlCpJ/S1e1LSGA29X39eq0ajEqU+3FL6U58AN2ds0++OVWP/TUePP
ChwQ5cnTqv+rxEPs+AHGOg7YLDzICv9WieNEicA/ShxoXX2ws8e5Cm9Q/Cwu
ocqBWrkz8aduV+HebcKVCuoc2OSZ6LQuvwqH2ehabNLkgOG8zPWETdV43QnX
IbSBA6sK63GbTTXuDIsLs9/IgRzHu3uiHKrxmdQ6qeObOPDP+Vh9Or0aS1V8
qA/czIGd6o4p+b+rcWPLAuuYLRwIE/TfHLOgBh/v1x5P20ba1yjMlc+rwaL0
g9El+hyo8zdf+q2iBtcLRss3GHKgpr9Zc3ldDT4oU/PgqTEHJlCj7MVdtfi3
zjuHdzs4cOyuwuWwfbW4ZNc/5jdE+vdrWYjCgVpsdUQzkW/GAebuHBHeZC1m
BTmqiOwk448eSTZj1eKsxEt4tSUHkil3H5R/r8WmhRWuGns4wBNxseNcpeBv
99/yDKw4IGa98rRyMgUndf9K3WvDgd8DC2xaMyhYb0xV23UfB9zf+VByFOvw
x592z3ztSf+9IjmLVOtw1PJwjwgHDiy3vLH17qY6rKZR+ue6EweuXIrmsYk6
3G36+nbeQQ40rN/W+uZBHQ4+ML+F4sKBZYuahS911mG500o9La4cSA3XJ1Vf
jx/H2Pi+PsKBz9NBpqd31WOf7JBF/7lxAN0+4xJ7tB5LUgsLZ905UFr93vxm
Vz1+0PnCWOAEB1osg9+3d9djty/cAcmTHNih2VSiIkDFQlyFoPVeHPi2BBW5
qVFxjdjepXo+HNiwR+PvUQ0qVso86qXox4EeSlKs2C4qvr0+qF38DAdOnl7S
OOFJxRKUq3I//TmwoC/GmnKKiuMMcs9PBHBAc+Bx3tEAKv75pL6nP4jcf6VV
TGwhFQfaPdV8HMwBDb3ivzuLqXhy8ENsfQgHgmqu6ypWULHbKeaXvFAOnDvH
ZVt9pOJ+tqDBtXAO2Ee3G8l8omLrS6vSLlwk9ZSSVm44RMWPRTcwPCM5IOXf
aqizjIYN0pGlQxQHnPdxI+SW03CdolMhiuFAlKjkJa+VNKxa4/1TO44DuZ+i
l8iY03De9ktOa66S9iVkzXbupOEVj2/WiSSQ+i3bum2VJQ0n2JaL8hI5oByn
1/A1kIb/fWj0GL3OgTNGWh8Tgmk4xLOnuSeZA1uHz4tJhNAwY/brqpYUDkDZ
s279fBr2iJgPqL7JAbsHR82Hi2j4o/DSl1m3OHC36Wa8XgkN26etV72SQfbz
U7+9uIOGO9duvxyURepl1nq5+SsaNqmy+ngsmwNNW1M+BnbT8N2tx7bY5pL6
PuBfs3OUhrXaziUb3eGAZ9+KQ+UcGi60TphQLyD7Y1f7Zsyl4VXv88ykiziQ
Lre49+ovGk72oOUuKCH1p+eRtEiGwEIzHbzZUg4MGDXHS8oSODxs0O5LOQc2
f2xR0ZYnMEtotupFJan/s3Z7XQwJ7JW6UOhhNVl/HduMo0YEHpKTcSurJePd
pxe9w4TAThXaD9PqyPyMpM9kOhP4hZ7ZiigqGd+45sECFwKbtR44fYbgwFnf
+/+mDhH44V7fTtcGDhxO9sp9GERgnXeR6/bc58CXBvOnPecIXOp+K3zbQw5U
C/6dfBpMYDlGRb9SIwf0Fu12ol4jcNqFZh3JZg4k1q++O3WdwKIL3yb8aeGA
pO1IWkUSgSNvfBudxhxQK5Rs8yggME/2p8mHdrJ/b+U3TxYS+HSZRFbHEzJ+
s82ll4sIPKqrzCY6ONB1WlL9HJXALs361oXPOKDTO2LYRRC4Z7dNWXIXB47k
Sd8yv0tgyz73f+EvyXwk3gzQbSZws9v5Q97dHLg6NbEroZ3AetOJdw/0cEC8
Rz1liuSq8/lLLd5ywCQyuTbpKYHXCd710u3jgMWZ2m7lbgJnJj1rX/uOA3+5
uZNnSRaX+Sy35D0HlhqfSPN4TeDYEtb5+Q/kPDQfuZ/zjsA/dRa9+TZI6vOD
2eFekgMaZbX6PnPg+mA3z2SAwOO7dOLahjhQIXHAgDlI4CNvzYcowxxQ/Oj2
QOITgXuPOBvkjnJg6CsKMCR576RfWsIYByIdQoi1Xwj8Wt5sS8E4qZfi7n/K
JDvsX9V/b5KcnzfPF2mS/P4KPfjVNAdS1nV0Kn8m929sk/7KIM/PhX+wGMkj
Mxn3f8xwwKxTQP8duf8pZT9nSTYHOlYVcVnvCUx3hnk1DgcEjfyIVpIDkqSz
d/A40K86Is8h/ee1TRs6fefAmj83Hye+IfXJw4O+P8jzTLucgUj+q5kREf2L
Axe57XbvXpH5cfOVv/2HzLdFgw27g9TDLdRS948D9Iw1sTdITnom5dYhyIVU
AfFvp5oIvPz31N9PC7nwROG9rdZDMv+6uGBuERfUH23bVv2A1NvJdFgsygWF
RcpzQlUELsz2GVEU48Idz/54/QoCq742jdkuzgXzSxsbb5YTuHqBlLKtBBc0
M/p3XEgn8Cb9qScnJLmwWcF5Vu4WgRv8Wj3DV3DBM+aKklkagQ0Kby26KcWF
o3D0lsglArf0e5dXrOKC+6MVzYMRBDZfbLq7VYYLVg2HUinhBO7csXKyfw0X
FnhMzqR6ENg6aDKBLs+FpdR+7wvHCfymvEVzgSIXRgtCQh8cI/CBT2kvZNZz
IY05NyC2i8CDy7z9NilzoTJvQTnPgsDHdu4Qt1TlQmFSZswsEHgsdAXliDoX
LoW5zQWrENiHMmF7TpP096i98SFlAs+MNM8kbuDCdOimj9LkfAhalZZSuJEL
faPd0r0CBP5u5aX7YBMXlhN7X5f9o+GLl03edm/mwqZDb3riJ2lYoGF50NgW
LsR7RNSrDdLwlcnxFb+2cYE10HZ+6AMNi61tvrvcgAsGabl/Ne7TcMr+m04a
RlyI6ZLSDKXSsNTVUzxTEy487m0dFqqn4exG48wDplzYtyN/DMXTsMKspP5p
4JLvs7g7r2JpuER5/H2MOZmfb9GRq2NoWMOlKTR7J2nfNtCk8yAN1yalylIt
uRA6+o+i5UTDm9tPNnbu4YJx8Qu+uAMN3+cZHf5ixYXsk8OrepRp2EhL8jfH
hqzvfZ/j2etpGLt9yxOz40KN8TfhZwo0vPNW4471+7kgQeOwlWaouOtZypC+
IxdWPB5asI5Bxft+e17ed4ALf1RWLxidoOI+XaN1J525AC8Do+/eo2KXk8va
Iw5x4bo1m9dxl4ojFz96puvLhWDxmy9bv9fjSX/p6h2nuZDytCw7iVOP9/cH
Jln5cyGTFaJ9M6oeNxq+9ncO4MJ/NM+NEFiPVQq09nsGcWFx49nSltP1OFko
fktgMBfyogNObGPXYb7PV+nIEC6oLNk2eu5bHXbvQfPXQrlw6MfHiuThOty1
NW8wK5wLN4oMfii71WG9nPnm0otcoJZ/lQl0qsN5/5wKaJFcCHzePLnUrg4v
OkmLbo3iwsHT8pr3OynY/8VSz5cxXDhb7/3JrpWCP2zytfwQx4XIqWd5tg8p
2CyjU+PbVS509H/5StWi4OqfSkvmErjQFm8joqlMwVLul5l/r3FB7EAh31me
giM7PvUsSeYCP4VhL3StFk9oGRAyKVzY5vVs16rYWmyfmp6uepMLvxoLzupG
1OJGHitE7xYXaGksz4axGqx82PYQyuDC2rsbFuoN1eCktipjmywu7DZ/ufll
fw3mqworHMrmgujz+r09RjX42HUPgVO5XMgRsDyZtbUGV9/ftbK7hgtf4uNF
wpWqsJR8Me8jhQvHj8u8yJGvwpei/74fr+fC/qWPR6R+VeLxcddGDo0LBb/a
Y9W9KrG9zYM8gQYubHCIFrIg7+uPaCsvL73PhVvgGJaoXImVVgccX/OQ7N8y
pZW4ogInXXxlod5I9n+nX1FHEfleGNFQ29pM2l9ipheuV4Hddl8RNWvlgv1U
ht2xsXL8vHZk2raNC+GVsV0wVI43rzDtdn1M6llQNV9/TznOuZBT7/WUC8IK
Yb3qa8ux0Bf+zeBOLiSE7GnoXVWOz5g7Bkc/54KvE/XjnjNleKCi/uCNF1x4
l8eTMnQow7BU3DD3FRdqDY54ZFuX4eogb7nK11x4qrfxhkZWKV754emfhjdc
iN251qUhthRf3LF+uL2XnB/hO/WIi6V4vPjS49f9XLhQV2st1F6C7UUHSz8N
cIF4++9mE60EPzqzPX7yAxeYG+cNDKtLsFJfmg9vkAsnn3+ma08V4ySDWesF
X8j+CH13NPBzMebfsdZZ9h8XmpIP6uzpL8bHFlZKyo9wQVVDhVi0rBg/9xbi
aHwl56/bJHN+YTHWe+3+bts3LnQtjkvh/izCuVtaHphPcKFUQ9PQRa8IC2XL
5thNcWH8R8Hf8xpF2P/v+YtH6GQ8SVObbBSK8PsTvW4+TC5s9/7ySNaxEEua
ygo4znJhRCuhJ8yqEFvJuBeZsLmw8ofM03tmhTh2rtxcjUPuf6TOt46ej5tf
Mb8u45Hz0id0g9G7fMwr33rlB5/sx/2v4vQ787FOdITa13kuXNzy2sdR7w72
Ovz42aufXPB6qDHmK3kHF25b7HP/NxcsaCBCW3AHf1xmL1b4l4yvFsLTk3Lx
iunMmkQBHlj2/Igat8zF1k+/2JxbwINDVqcrqgxzcVy+yswRIR58/8b1+3gq
B3uLwLmF4jy4ty3S4kJFFp6vpsTf0eLB8vlfb/puJOE1cwnUt148eHFYduVL
sWDkcT719pgPD5h271/sOh+Mquazor778aB8p1H6dGQEYkUUeIv580A6vHZT
17MIZPCv3H5tAA8GDedFWI4X0eWYOgPdIB6c2lH/qiU/GnUuur/OIpgHJwSe
Oqq2RSOJxBbRgyE8iK0KOT6kGYMOiHewvEN5UGIWaPMz7ApKVRPcLJDIg1T5
jWmr1qcikcNhNJ1qHsj0GwQpP8tG+4aiss1qyf36bzzSHs9GmccTop3qeGA+
e2Lb6oRc9GUsxceLyoMUacq1+axcpOKdtT+c4MF/CjsEJp/motP0fMPkBh6U
bWuSOXHgDrrrX76+8D4PCi9TPm7zvIN+simL7z4k4+c7vGu9dweZn7/H7mgk
83fBM/Pw2gJ0bb7544dmHgT7ee7J3FCA3kY8bae38sCpWc1gAbcAyfx7WfW3
jcyvtLXj1NlC5B7Td3P5Ex6YHLy1kBFSiCoXfQpT6eAB0jJ71KhYhGYTRo/r
P+OBmoiByZ59RWi7+PReqy5yvUhV59iBIhSZwt589CXpzzBRiFYUo84VP2QD
unnQbX1EoFazGC3NFFgQ28MDxdsifmKbi5GTrOh0xlseZET1yz+YK0Z5ect6
K/t4sPXJ32auYAn6qri6sekdD8x0fB4NLi5BWiUKxa/f82DRxWs/i1+WoCA1
tWsjH3lQ3f1uVvB9CXpUtTGI+4kHv8qcv774rwQJbNzmKjLEg+xH6MzlglK0
h2pivmaYB3IXZ1lEZSlK2bJTa+MoD1jar405RCkauG+9AsZ4kHlCWV/sbBlS
MHL86TDOgw0pfnsnQsrQyRbX0ZOTZL0k0sruxZahWvB4ETrNg1q/SfPLRuWI
+8SHuM7gwZMc4kekWTla0nz4UMQMD/bR3RfP7ytHSg22An4scr/12cZhAhXI
sBZVuM7xYPincdIGkQpkX7p5nxWXBwFzi9TWLq9AXnnKPEM+qWf9wxcy2ytQ
ZLp0nuY8D1bHhjku7KpAGUkiFrI/eeB71lPl95sKVBv3Y0r0Nw9K3TMWoshK
9OQiPXX+Dw/2nIsjRq9WosHgL/qT/0j9cbihpcmViH26Z+i9IB96Fpw6NLat
ComebL/ybCEfCtuThCugCikevav9YBEfHE7OrymwrELbD5T1lYvwwb9HsRpN
VKF9tlnhmYv54Ii3++rwq9DJXYnrry7hg7uk5oriX1Xo4o6I5+eX8mF+ZqG6
7I1qlL7tzNmTy/jw7ef6C84V1ahm47FVB5bzQabi7PELtdXoser+lp0r+SC0
pU9MWqYGfVxr4blVmg9iRxN5Ak41iCW9bYnKaj68LBLQ57jUIBEJdWKlLB+2
6x9yPBxXgxSEZQ8tlOMDfQ1xfPHvGrTtr5gAR54PjD+KqbMCtciG/7t8VIEP
i3sjDU9K1aITMzO2vev4sO4/Y5l9BbUofHyY267Eh9+9OqusSmvRzaHeXJoK
n7z/1N6WptaiyoGn5kVqfPJ+mPG0agcF4df3p1I1+NBlOv1r1JyCBjorU6O0
+LBziCq425qCmK05+gHafIh4uFSOPUBBQg+Sho7p8KGo8YdL3mcKkquPvGKn
y4dLeEu32lcK0qsI0EZ6fMiJFDOm+9ahvQUefTpb+WDibdh5KLAOuWc5hSts
58Pp4VGHJyF1KDTFcr2EAZl/yTCLHT/qUEq8wfM/hnwYnHCTFxCsR+WXtc4y
jcn1HOVtlEX1qPWC/KovO/jwyFx9Rj26Hr07K9HyCvHhT3mexfnr9YjhJeDZ
bMYHP6nvO0tS6tFC9zmxWgs+RF0f6d0uQEVrXMZoubv4MKkXImQvSkWb7Qdc
ru/mg0GOnYKJGBXt2fP8X/hePqw6sODDo+1UdAway32t+aAtbft9yx4qCjGo
tXW15cPJwUN+QlZUlKybz91rxwe8WUGKe5SKSjVScw3384G9wve86xUqaloX
Y67pyIfDvosfy8VTUa9M8JTMAT5cMBE7tDWFiqYkT6WKOvPhwJerkQ8wFQks
dtGfd+HDgK2Zzvl2KlotaDU04cqHp7Q9EYs6qUjnh/GV90fIegofu2f6nYp2
sTdqP3Pjw3ScjfCiH1R0ZEqx7747H5Lmwnzkf1PRuZHl4eUefFjtdDZ7dAMN
Xfu4cH2mJx9+hH3Pb9tIQ8Vvec+unOLDrfVwc7kuDT3qmvA/782HupBFz9KO
0lDDnLvzYV8+WNk1p2UdoyGq3CAyO82H7OKfXx2P01DtTkcNdX8+lMrwOU+v
01DlmVeSSwP48PC7lFTEDRoqzdz1Yy6QDwUhVx1GU2ioALeOfDjHhyWrPvBv
36OhnEn9F63n+bDnRf8z/0YaylxOI0ov8CHXJHN5RRMNpRlp5V4L40PTw367
R700lHyiJDYgguwf1PfE+ysNJSTJnz54iQ+HEsQNE8doKO5ehpPJZT5I2iZ+
WTJNQ1FDEjuUovnAWVr/2G0xgS6KJKiKxvLh/dV6tzAxAoXqCkrMxPEh3LP0
86g4gc4dCuf3XeVDn4Rn/E5tAvnHcIYeJfChQX7H2dMbCeRbc/pZwTU+WHz3
/TWhQ6BT/d/qrySR/eb3XlPEhkAef9xu+93gQ9UqkQeHbAlkX2RhtDCT1MeP
3TwJPwLZvGhWmsriQ+zEp1ufogi0m7NtSU82H/YHJWwWiSOQuXw9pyGXD6r3
zt14SLLpLo3POXf4oEPZ5lWUQiAj/6KnUQV8UCyzZzblEGh71hrKqSJS36XW
As65BNJru5VhU8KHM+mhv0fvEGjjlHikXhnpz6fXIY51BNJYcfWUTAVZv3+B
0iMkqxj/2/e3kg/nGp4a/a4n0DrPUP2xavL7sZ+2Xa0Ekk9mK76o5cOYlmO5
PSaQzH1fUWodH/69rUdzJK/87ysrg8qHNe949jKvCCQhevRjBEHO38Z3J4v+
/3uTzQPtxxvIepntKxDpJpCwq1317vt8sFuppqw/QCDB2OdpGx+S81LrxYk3
JP+uMYtY2ciHBe+0j6x4T6D5/sYTP5r48LhCpP3fZwJx/2yx+a+FDy2Ud2Of
vhCIpUbZ2oHJed1wOX7hEIEYdmpra9r5kHk5fWfffwSaCC1YdPMJuR91efiT
EQKNFsnMhPyvomuPpzLdwqhcClHMpFKDEEklpdnRWnZUKEKRXHMptyj35MhU
VJTBJI6iok3Ytr13Rrn8fDIlR6gkak8u0dlKCdF+v5A53/nz+eNd7/M+61nP
+vN9LMHoTYMBXQzua83s9njCzHNDe7LSoBBEkwsp9n+Y8xH3Yy4yuHvl+ZK1
T5n6matqfmNwp/WP35XbmbyJqNGMZHB7WEzcVIcE940pOm0YEEJLzpiP6LkE
1WKnti1k8KPGQJvGTgluSvPQ7Wf4NH58t6m4S4KBQZN2j0RCqFvivvxytwSX
lsfKhjG4enuXTMRrCVbEyOD//7sQ+u/75CqSYMl1PcGJTiHclje5MvZOgvJG
vIsdj4VQJgqpnxti8lmqbegIg6u4nE9KYmbfPfBLvFMjhIbE/uWaH5j8pP8+
xqtm+O3XsDUaYfaZwkM3XQZ3ajuf2v6Z8UNtnFRqsRDeTl2+a/uF0bcjrivg
jhDEzc09buPM/Ii3W9cXMXrnSskFfWXmIeWeSl2GEKaDWVvjpiRYH6QvQ6cL
Yb5FVMAFiQTDRTMCfQYrL+ZdvUZL0LX5/Bs6lvHPu+G/ONPM+4onswNjhKB9
T2uyapbh2xahHhgtBKNkd+1Hc8x5reuNGzwYf7tmO76UImiUtuJu3WEhoMGz
pEEZghBffzLBTQi2M/L8ifkE17dvLD1sIYQD7ex+KTmCrn7Sj75tF4LXzQRl
FQWCpyaXJfuwhBB4stpi9SKCCVeOr4pfIYSIneOhxkoEW+C0eMVyJh/UDW9Y
LCa447x9pvwyIaQM+z3dq0rQQxzinikRQEZN/rT7UoKnRyPjN39j8iutxyBE
nWDVh2x9l69M3nmqusX/TLBBbrMup0MAvA12Fy9pMPfLZDuz2wXwQDr5fu4K
gn/L/D4x1SKAppcN4hJNgpGacrZ1RQJo49Dq91cTbLazKbYvFEB3rIl1sxbB
xu8HZ7ryBDBgExr1Sofg7kQ5P1G0AEZWFBe91yVY9nb1rFeUAKZG+zsn9Qly
yq26nP0FMEdpyMwzJKgxKnNPwVoA8lnOm5YYEazfZacdv1MAS/yv+GgZE/w4
7ZhqrCOAlVuf/L5xI8H9j62WOqoKQE9emgITRv/DZxeXLBbARhHri70pwU6p
3Slr3vOBxY3S9NpK8FFH8PADER+sEnl7j28jGNWbWfv5NR/s9384ncAiqC19
Vf5oCR8OaWuXp5kTTK3qU7O9zQffKXdR3g7mfSMN3Y43+RDanK1QhgQvp1+d
5AQx+zb32bYaNsF1KjCrFMCHpGCFwBYrggKzTJ+3vnxINd+Z07OLoGxdP7/L
gA9Xlf/VLN5D0P4ZJ1JZjw8FA9XfvtkSlLO/8DRDhw93heNrFuwjOHrFMt78
WSUIzxseUHMgGPZ239nylkqod/E/p+NIsC1P8GqgqRKa1xYITZwJZn7fzeuw
roTn0z3vLA8SfLJX37AXKkHUpqrq6Epw0HJY9/O2SnhfYIc+bgS9zX1fOd3n
wZcTyeHh7ox+cz9kWwQ8oNlUQaInQSfWiyMrS3kgo/69/Yo3QU23D6XtOjxQ
HDb5ceMIQXPW/O9nV/Hgp5pQI64fQbOs/crzlvLgl7Ri97oAgu5/OXftTauA
6RetNiXHCJ49GukTnVIBL5eNmf0RxPTPyTBInFABXO+lemdCmHp90UMlY1xI
KTZTCzlO8AHcnFg8wgWfUXcZ13CCtUPWIa2DXGCZJo2zTxJ066bFPAcuqJ2+
02ccSXBB2nBQ1x4ujD5saVseTVCte6Kqms2FZvnRWtlYgjcWXT85n1sOtxxU
S7/GEbT1v60yWFgO8de25PTFE1xT5nTSN78cDvS6JbcmEMzrN3t6WLYcjNck
RlYnMnq2tVa60WUgF1J4pDCJ4DPWxCe9yTIYEDQ7pJ9l9PNSevUmoAxq6RGL
+PMEez9POXnZlMHBoxt++bWIYKui9SWLfxeDcYWzsi6H4JbNBXl7s4pBfip2
VqWE4OxD25lf+zgwyLoxMnuXIJu0v8t+wYH63xpffygjuCi5t4v9lAPXWt43
d3EJBrjv7vNfwYHwxQp/NvII9hctbDogy4E9LuuLuHymX5bL2HZSHNDOd8zM
FRK0mMuQdg25A+MvI2XohwQdT+foKKcWQqrlg/fVAwQNct/ByKEbUD0+T+Ht
IMHCPySZ8gN5MHjTYb30fwnemZwwc8nJA2WH6456w8w8pM+8kb6QB6w5cbTd
R4L3HPbY6A7kwtEKk7wTnxg/P/1VMacpF7I8EhuyRxl/bFk3Z8LLhYZFrYO1
YwR/25y/oPDHNRipVZcbmGD42hoV1n+8BramkQYK82iUGbl0P8s1ExbqG4e5
69LoVu9w9bZKHGztPpWVpE9jpfLx9JfxseCb/LiaY0Cjkm+rEq6LhXRT1b9b
19EYkWKYM6VyAmqHPP4ZW09j/pbpqtKQcBBn3dVR30jjpaHxlIYLYbCEPbWb
ZULjUt0Jk2/BPrBjAkK9TWns4LTe5d33huBbaRnnt9Iotb3TaO8bd7jm0FNV
uo1Gl8euolcaGtA0p/2mg0Xj7Naic4dKpeFLRdiPSXMaY5zWaInZztRyz1ot
DaBxxLv+8cabntQuRdldOyxpfOY7nh9X6kVF1DkG++2k0Wp5WYL2kuNUQXB+
+kVrGntCo4+KfcKoVo2PwordNJoFFjksmQmjJC2mPZ02NCqomDx5nR1Daccl
zRA7GjUdzpQWfIuh7PXbVmva01izn6f42TuWiu/+2Yq9n0Y15RmreWGJVHGy
X+AxJxpfxFzkzFYnUp2mlZcvH2DqGSRdXXvpDDU3NM0XuNC4PSaAKtU4Rxn+
setV9yFG/3UZLB3WOcqFnfV95jCN09Uvwn+xTqbOTvRqannS2NQ3vGqfJIXi
3TJg7/Jm9Py+z7z3pwuUyCH6aMgRhr/nWJT/iVRK9p/G1Aw/GvWynvs1tadS
JjzFyj8DaAy9rRNz42sq5eV56KXoGI3Ox3KjPMLSqVTFO+SfIBoH51k+0LqV
Tv0Pd4vOrg==
         "]]},
       Annotation[#, "Charting`Private`Tag$155048#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "       ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"S2sol", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tfin"}], "}"}],
      NumberForm[#, 16]& ], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8617494370256777`*^9, 3.861749446600301*^9}, {
  3.8617501549619007`*^9, 3.861750171610655*^9}, {3.8617502251499968`*^9, 
  3.86175023698571*^9}, {3.8617503224759083`*^9, 3.861750322734969*^9}, {
  3.861750400936005*^9, 3.861750401080289*^9}, {3.861750614623445*^9, 
  3.861750615390649*^9}, {3.861750652522147*^9, 3.861750652821941*^9}, {
  3.861751427913333*^9, 3.861751487075881*^9}, {3.8617515290353193`*^9, 
  3.861751529607774*^9}, {3.861751647376646*^9, 3.86175164766881*^9}, {
  3.86175310261197*^9, 3.8617531207051153`*^9}, {3.861753210957512*^9, 
  3.8617532123739767`*^9}, {3.861753248534112*^9, 3.861753254545247*^9}, {
  3.861753317292193*^9, 3.8617533218360767`*^9}, {3.861753471434822*^9, 
  3.861753490161663*^9}, {3.8617535344240417`*^9, 3.861753538288238*^9}, {
  3.8617537033396597`*^9, 3.8617537183601007`*^9}, {3.861753834712483*^9, 
  3.8617538383356752`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"136bbf8a-f698-46b3-b8be-4d0096814682"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
oayzdu5JQy5+nS/yUmp8ElT97gq9uJaHdVmO8BrPToL6nW8eEcZ5ePyqdGTg
4iTwbKNOnbubh28XKAhWfJuESf/TXF2/8/ACy7lY+uoktP+ZMuZjzsd21zR2
86yfghMf3J3tOfLx7wLdRMVNU8CemrP/T0Q+dme9ue8e7xTwpOfW58flY3YD
s9TI3VNwX0O+cDU9H78ovH+g6cAUhB/evrJRvADzrX+c+eUoY77rRIGSVAFO
MHD9b/eJKeD+O9H+8XQBPkDxzVVVnIJINtsPC7gA560POfro/BTY/73KUt1U
gKUNowpTNKdg198su0e9BbiKknTsjd4UbMtpVfdVL8RKG7KL/tycAt/9/TbM
lwtxuyEhI2o+BaVHjs3ymhRiLaKi7MqDKWjVyNzQ0V+IRzY0yLs/noLH4v+8
/gwXYqPrHVX5rozxpgN+mz4V4jmi7/SY7xSEsEYx9Rym4Ptsb/GGkClY04Hh
9iMU/P36zBmpKAZr7/qccZqCncmFRqOkKSgRwaW/71IwC/u3c4FZU5BOjAmN
WVJwwI3V1nLKFAysT/r115uCuYtYL9LLp+Dlcw1HwzQKjmLf1MVdPwVhm9MV
92dQ8N6bvJqK7VOQEiEn6dNJwRlFu3sse6fgsvCLxflxChbnOKgdOToFXIke
KgmTFFxyU3ygkTYFVZuvfUhgJ7CjL/Wy6fspcF3K/e7EQ2CghL1Zt8QYf84o
4Oc2Am8YVdZIWZkC7YXHDWL7CTzn5kQXYqKC8sRDg0/KBFZ9dSXtCwsV3u5K
PG54nsB52UdN69iocBz2fjVXI/CW2g3CIRupYHOalLZxILBd3xTVaAsVBPaw
XZp+SODBufJEiW1U2Hi75dKrJwSW+xN68x8fY/zR50xLSQSO3XJv95sdVJhR
fsHqnkLgNRHl8YQ9VPhDXYvWTiOwidzu2PvCVCif+vdZt4PATeo/rikepMJ3
QfLC0S4CHzR5I7D5MBVavkR3B3cT2P9h1vDEUSqcbAnNu/mFwIv+7hH5x6iQ
cf3uucllAmsmGOg+k2HMf1r6599XAhOk1HYNeSpslXz7bpWbxNtbufp3nabC
wPHR1ed8JE4SsH1tqE6FLeIbqrfJkZjl6MUgMS0qZPJJOV5WILHZGRH1PzpU
8P1qzV93hcTtuqucnfqM+h22OBijS+IjloPtMYZUkD1Lz3TXJ/ELlwI/SyMq
PPeVC5N9QOLlMF+Vk6ZUiNvZepXHhsS6mcYbOM2pIF4tWy5nS+LyKvnmUUsq
4Bl+r+c+JN7Zw+OVfZ8KcoNa3x/6kthldkHpqR3D3z3LrWf8SExbaWJWfUSF
ze8veGTHkFh5U0KdgCOjfu4J73EsiTP3PXadf0aFM1aRD/TiSMx5Qkux3J0K
i7EV1/VySWx18b+/vt5UEIn2lFzMI/Gbm+uq9f2pEJt946xxPomP2791PBRE
BWv5Z68Ey0gc7lss/zOECt3jQdU/K0n8MzZopSWcChfLDldrV5HYgGJWFhFF
hbsXbI6U1ZC4pgk9MoujwtObOt7UZhILjQrInEiiwsIddOBQC4k9Py59XZ9G
BbWvn9rmGDzH3EkOZlJBUc26M72bxKp8abbpuVRg/6t3Z5TBeYefST4spILE
nzbu/16TeAvS+6xcRAVyWubdhT4S2+lIFGwvo8LYnhvs5gweNGe3nq2kAs0x
aI8Xg+WcaWLFtVRwTwpZ19NP4tiQyg+eDVR4TAyMvWbwWtrLbJ0WKtwY2riu
m8EmFVZ3RTqo0O+1PlqbMb+p+9yhr91U0D4z1L6VwYem98w19FJhbsVA8Wcv
iQN+/EwLG6TCI+alAUOGv4+cvaa3Rhn97ZT8epThX2tvjvDxCSrEODKbrHWR
mJTypDHTqEAYEE/fdJCY98L1pN5ZKrQF1CyJMuoVXlC6+HWeCqqfdlPGmhj7
lZdbnu8jFXI/vAvSqGfoTve85ZaooJ6lKkSvYOjTzb0G36nw1zH9PxcGh18Q
2vPsFxVyMvmXNlNIvK3Q0TLxLxXeJ62Lc2D0P4x3sLSemQZwX5VYziExj7ME
y+x6GiQP0cCfsV/Cpv0vbeCkgZmF2bGxaIauOhsrupkG3TtNT8kzOKxQcf4i
Dw0GF4jjmxj7k5svWtqajwaRRy9zCnqTOMT5q9uLHTSQtJu00/Yi8dYZjW5i
Dw22CNh3D9xn6KpZggPCNKBoiJVJWzN0yjqzHwdpcJY5eo+iFUPnu0EKiNFA
xo/lXIYOo9/PytZOStBAceb78WPaJA6e4Va7IUUDKXW+6V9aJN580SrSVZYG
iR9CLW1lGDqlZSb5FA3eVZbP8EgzdP59kk2IBnPu8bddjjP0Z07Oc2dpcEzA
o+f4dhJvmh1sY79AgwImeuQkD4kDL0ryiqnTgB625V3ZVhJzEQEmGlo00Of4
/HvhM4ED+en5D67QgHddgFv0JwJzuaDfoVdpkAN/zz5YYOiz0eeLr9PA6ndW
T1IbgTeqfQsbMqbBysOAQ6qtBA4gNKdWbtNA5b4r/5d6AnMKZIvttKCB++ex
eL0Ehu7C8uS0NQ2O/BA3/hpHYA76jSYjWxpM6+85ZBpKYD+18q0eD2mQbyKe
ts2WwOwkz420pzQYs/0onvCAoQtYZ7c8o8FIcunahisM3bX1+7w7DTaVR89M
AkOn71Pa6EODiMbrKZcQgdnUnYOPBjD6k2x+voePwD7k0NilYBpc331yFW9i
3B+Cxw7ZhdHA18g0bBMXQ3d9bh8eQYPCghEv1QkK3jBHx6UxjHw9v+3EwxTs
ow5cowk00DOhiE8MUvD6opirf1JocKb336aVFAr2EvyetjuTBti5e2k2gYJZ
3S4toVwacCiuiTXEMfS57NO3Cmnwy25iR7AZ437VYA3wKqKBecF46klTCvYo
ujmUUUaDyncNu2uMKXjdjgrh9ioapHoL3Co8xNDdtj1YwDQYTdnc0r6fob+z
rtrURANVx9tDrfsYukYbm2QbDT44sXq5dhVi5mLhK9pdNNjsWpQk11qI3XY8
S3LoYdRnY0tvFC7ETO7DixEDDD8l0xa2ygz93TH5ihHGfqzWOvgUMXTNQO+3
4zTYwOaxlU+GoRfP9f6l0qCICDotX1aA/+04s0eIToNatZ9almQBdnGPtVR6
TwMLBemIJykFeO3d99LbH2ngVDR5b3Z/Ad4td8Adlmignfyu1E6oACv4XVHb
9Z0GznsLSxy3FWDDEU/elRUa0Cye0L4E52NH0aKp/lUaSEdYc7IG5OPoJ9PZ
hUzTcEgiUpDFPR+Xt3E7PGedBudgJ/2L3/LwsMAZRXP2abhiaDsa9ykP/7hr
w36WaxoiU7eQT9/lYd6KxL49W6fh/r+Y9lO6eVia403c723TwC5uggw087DO
tTWzIf5pcPzE6Sx/IQ/bZR89Ru6chuJhlkU1MheH/rr+J2jvNFjWXtUxyM7F
FNXAZguRaVh8U8HSmZqL30RXvTh3aBoEz949VsGViz+9/3Btn9g0CP+dc6n+
l4MnFqZWJ+5OQ3jYO5Omu5l49dSW1gqradBgMYtBRpl4R6Bi6CubaRD9tST7
ID8Dy49bG9o6TINJX8qm1PQMfPVI/AGNJ9PwoP15aH18Bn7s3PVZ1Hka3ouH
bnGYT8cRXX8qWN2m4XeXTkDJZDou2SXmRfWcBr+KhZ6G4XQ8YGWgWe07Daio
wMt5Xzr+Wu0vEPV8Gj6d22+2b3s65tlUMW3/Yho820zkSjel42M35vMuvWSs
L7vne7BhGtbK538sFjkN7vtYIjedZ3yf/T1/hi12GiKUlvEsSsPBGo82ziRM
A1Ssn7mblorz49MHa1OmIe7MOuFUh1Tc9XEgMSZjGr6ellTwuZ+Kqz+3K+nP
TsPqLpX0fkjAK6GOMd7z08DsO3KNlhiHpaXFlosWpyFFdB3e4h+HbYbeqk5/
mQaV7PvNAg5xOPdJYPLW79PgfU/Lcqg7Bs/tOP1L8dc00DcWGm6sisHCNR+1
rP9Ow49G/UnTxBh80yghK5Z5BtbHFaxt/BWFY5gvMXWsnwEWh3PEg/ko/Hjb
QI3CoRnYnnfwS5fZS3xcdlJO2HIG5BdN6WefeuL7o8EhWvdnwPjZIbN/m9xw
jhOad7GbgeBhsxXlMVc8t/sLyn80A3pc6RSXQhe8ry4p8q3jDBSGOsi/uvEE
X791+TOH6wx4hfrrx+x5gqNY16nIec7Azuqohf3JDnggg0ww852B6rhjK9lx
NnirqumP8OczILxp7wS+YYM/GswXseXPwFBv29inYgOU5bIs/vHzDOz17+Yx
8/dH+R4EB/u3GZhhfen9wCQAkT42s8IrMxByLlfjtFsAKg2QwKdXZ6CIPLHi
VRiEqoI/RV9lmgXD4jenfSWDUV1YvoM96ywUGO/O2KwVjJoirC4Fs8+Cy7jQ
cHBPCGqPETuczTULJyytRk79DUGvEz6wNm2dBa9DW5+EbwpF/SnZU5PbZ+FQ
jogU1IShkYy7lb8EZuFk0MPKy1NhaCLn0Kvtu2dBel53zeNLGJoumHsgsW8W
Zr/KjQWnhKN3ZPrFiwdmgdtMN/5EbThaLL194M5/s/DojdWGyJ5w9KVShMnt
6CzYa+ufFvOIQN9rp8dijs3Cqz0SvHHREUjpX5/PBftZeOzw9YPNSCJSYQkz
MX08C/uSfXJxThJSZ7us4OI0C3s8LS16iSSktXErf7TrLPRMcwpKv01Culve
LBV5zsJro0UFBb9kZLAtuOu17yz88P7Zvv1FMrrJr5H5/jmjHt5Xx8TeJiPT
nVwerCGzsEZbkyy9lYLu7u28vjd8Fj58ddW4Z5GCrEUCZE9GMfxtsJMKWkxB
dodUeXTjZiH19BcprpOp6LEY+8cHSbOwwPKMlYRU5CzR2hqQxsifNF3nT09F
7lI+KelZs3CflcjatTkN+ciee1aXNwvzTe/XtW5PQwGnWK++pTD83ulTHWtO
Qy9Q4/EfxbPQyb220DyZhsLPemzirpiFrNr/kv3paShK5cy8WM0sDP4Q3GwS
k47i1Zgaz9fPQq6tuedcbjpKuYTjTZpnIYgpiTZGpqNMHZcnzu2zwDOx2eyz
eQbK0z+tE9k9C9Z7fNCNhxmIMFw9SvbOghJRw5PgnIFKjarYuwcZ/b1uOrRf
MhNVmTrOvBtl7C+3JV2OU5mozly+dt3kLPD1a85UKGWipnsrUbunGayVJhX9
NRO1Pyizl5ubheempQ87VjPRa/tHmjofZkGBNefKjvVZqO+xzH/3P80C+/k9
8Z5kFhp2+sbivzwLZ9ZLjrhVZqFx16LJ1B+z8HD/Xq/ixizkZq0i++T3LHQp
zKjM3ctG+w3fvlBfmwXl0FF1A/ts1HbhwbzQOjrsMWaVP+mYjaxOsJz5vp4O
C3NPNDn35KCt+yOj2znooK6yMzH6UA4q5hZbjt9Eh/gtRbduH81BV//VXrTj
pkNLw78hjvYc9HdRO/U8Lx1kH7SqPRrOQSljc392CNJhXTIRmjqeg863OV75
vIsOwWO9dmumuehDyeb8RiE6jHfu2tvlkYuCU1PWR+2nA1ukMleWby46Hnri
ppUoHa5Wp9751pKLhlw6SuEIw692U87D//KQo9XNLbySdGDSmOA/JZ6H9hgs
m7+XokMAV4rWI6U81KDiU1cjSwepqplp1c48ZCazQzDsFB26Gl+kH+vJQ5wi
BbZmiA79KfdeLY3loYKtSh0nz9LhtNT4J767+Uh7bVB4iwodWrP1x82s89GP
BQunmYt0aGvi21jikI9iRv/2l2nSoXrzQkv4v3yEWkOPBGrTwejUQ/+K9QVo
tviAt7EeHeJemysabixAfikVE9IGjHjt0HAytAAdCdE4wXGTDq7mlFrO6ALU
84wWPGFCh49vEplq4wuQw72H74g7dPg22qkZsLMQCVzjAB8LOvQyly4qHCpE
1efjowys6XCyMubGHbFCZCx9bEnclg5k7JadlyILEatwsyrLQzqEUAV3SFEK
UdaWaynDT+jwcn/w4S3FhUj97+LvXGc6DM8z912kF6IvH9x03Nzo4KOXtvxO
kILCR7bnXfGiw4QXl2rrTgqSa8li/c+PDi7KwdfjRShovEjhxt/ndLjg5zr3
6yoFuSf3lPS+oEOSyJIN1YCCDr64vTnjJR3WNFgGmI0oqMN5xcwxkg5VR2yx
wisKum8ZiDVj6XDFV8lROZKCeK4KCYgk0sH+t5wdZwwFlZ4rtvmZQofVdcOi
Ea8pyEDqQntnBh0abov4zvVQ0JrQ+L6kHDpcqsjiWtdPQSmbbRwdCuiAYoSY
/v9/2PlVlv4LJB0Mk4QmK9kI9OF9pNjuUjos8fd+fshBoOBhMa+lCka9Ov9Z
2MgSSKoZjzfX0OGTSF1o6SkCjZA6MjH1dBA2pAbIniaQc9K7oPvNdCiDBvs+
UwIJBTvNKbXT4defDafeWBGoyWkL4u+mg1CUs9/R+wS6a5EaudBDh9dSGXyn
XQnEpS/7BQ/Q4alEZO7vGAJRlDsvhI/QYV9twx6VOAJdOW6UfHecDpfLIqxT
kwm0svfrLwUqHVJsw23EWwgUt8lXm3uWsd/4ffIetxII/uzIpb+jw1DTyFuF
DgLR5wtYKhcYfpaFum9+IlCGaNN76mdG/87Evez8TCCzu6Nv2L7RwdFAYS1v
mUCHsj6ViK8w9Peq6tu3k2j+HUuc7iqjP+faOC7ykmhx7qr0Etcc7N5lxNaN
SJR/8P4OAe456FQX0ziiR6L7Zp5MiHcO5u7zfd2pTyLxjKi5O4JzkFZuPxZ3
l0Sf6fldgbvnYMT2t1ygHYkoBxrJon1zsLXYo/22PYls7oxEjR2YA0EuM52T
fiQ6lv7RhfnwHDTa6Ot0PifR8uy6O6Lic8D6LGUuNJBERfsF1C4dZ8RnZWbd
m0Qih9tHjz06MQfzcwfIuWQSyaQp8cefnIOz/uP7E1NI9GNG/2+j4hwsLlae
6Sz6H8VmHg7l18ZxSkiSiiKi7CRJizXnRqksEYpUkpSthCRLyVYoIlmyZN8Z
Zp602Q4VpZJCKpUfkm1mmDFL2t/n/fNznZ5zb9/7PudcJgI9UD7zddp8HM4q
H4r81ECg0BMxXct3j0MQc9n7hHsEMijJqjewHgfvNvD5/oRAP0ZrM47ZjYNH
qq5MxVMCNSo9jrjqOA6Hz1o9se4gULjH++MU53EwkV9b3feGQMbFjN39h8fh
5qfgDbvfEuj3iKDOr2Pj8PXV/sXfSG5Zv1pKyXMcXDc9jw8YJFDkce2fe7zH
Yci2+tEjklGR2fDZ0+PQq2CTv/8TgQRGDnZmBoxDpWdee/8wgdrXna5tCR6H
Es+n8n9IjnGPThsLHYdh4ZrEayMEsijMDF1yaRx89iy/vnCMQELDNW560eMw
tZe6QJLkDsX2nYeujEOUTF6lC8lXjw1oRSWOg/nSfy1/vxLIsoAuWZFM1qPy
yzE2ySL/CXzvvjkObZqGOzePEui5wqov3AwynlzXx89I+wluG57I5YxD3Y8q
x0KS9+ZDlXn+OFTpVs6cJ/0XGzqQ4lM8Du9yBuePkfG9XOt3PrV8HOLYizhy
JCcdjTr8oHocuj6tZxFkfmzvZJgN1Y3DOqWO2edkPiXIC9Oiu+OwuurykAfJ
PfJtS7UfjMP69DXdn8l6pB55x3FoGofvj95dEiJ5f970xzA8DulnfNyDyPqt
+PwPFz4ZBwUTp/0TZL375KTLnz0bB90L63ukSE4/rJU085K0l/Lr4E5SH065
KEj6zThsT4/500PqSfqTk4tJ/zio+yv7/Cb1NrDG1/TEh3FYOJIT1VVAoEzX
yyrXPo+DZ9mm4SxSr8456WK04XFwGH6r3nqNQDKDVaz3Y+T63tjjA6S+P8ri
gb+T4xBoIlZhRvZDzqH+ZlUm2Q+ZYVuOBhLocPZUsQ17HA4GTUm9PkMg+Y9/
E87xxiE3t/H7mwMEurhgiuH4YxwadYQbmU4E+ryhz37rn3G4uN5Wm9hPIJMD
LQ1SghOQFuHVkradQHciK2R4QhPw1DvhzvVtBPpbcfPiO9EJcNprucp4C4Hc
3kYM3xOfANhwXPsA2f+tP0/uzJScAHF6ofr/f9+loGJfGSI1AdmHTGmGy0m9
2hqJO8tMQF/PVlAl58lQiEqAvvwE0DK+nKph0pBpoUT/6nUT8NAkr/8fnYby
u+b155UnYNZrX+sqcl79nRvN/aA+AWZ9sWJGHTTkJt/97+GGCfil/MmG8oSG
Wnc9OJG9aQIeB17/aEPOQ8WzRc/CtkxA2Vo7n7fZNBR1+/oGV/0J+C6becfx
Ng0Nt59PMTKegFd+x7qkz5LzkH6MswZNwJStQnKYHw0VSlk5/zKfgMWbZ13/
+dCQgOnWpk+WE6Aw5tN3BGjI3UtBsdlqAnYtMrI0NqKhtlTR2Lx9E8Cao0GT
ATnfG+fGLzpMgGq6WPwCKdL+189WRw9OwPCMofU6YdK++LO6Ha4TkFl52Psm
ed7AdtoKBbcJOObvxgpmU1HRsdyQv8cnQKZT9uyWHipSWrRTOCpwAnZM/Khv
uEVFMTo6vu7nJ+Bya232nRtUNOos8xrCJuB5SeDF1YeoyDx6gd76SxOAM7Qj
VzlTUUk1I0MwegLqriwUcXGkIqH+gR8jcRMg/adnRnQNFXn+aTv6OIG0X+Ss
3ryaip6q1bQXJ03AXo2gpFopKlKxz1CNTSX9N1LgfCLvA3FhlxNPpJPrx3zW
etTUo7FiH6bF7QmI2d6mvri8Hu185bhfJY/0Z6HqhUGNelTK23FPqHACtvCa
YYESeb9Q1JD9VjIBXUpud9eurUeee1Zc6qiYgBYdL/WivDr0NPD3cFnNBJj+
J/408FYdUs0d33m1fgKebLiHXt+oQ1efvqk8dZesl6X8muKldWic2Si++8EE
6Ihbr3hJ3qcsV5cFqDdNwIdXJ2osflFQOaT0i+AJsFDovPUnioKEfcMMJh9P
wIzIrL6WFwWdunUi73nnBFwzjLtZ6EFBnc22AlUvJqC9vHBJ2BIKUhvX90x8
PQHdusdsKF216Ooypec+vROw8PnLl0IdtWjcQFzbamACgt9sKf5XWIssPfgp
WoMTIFhBUzmvXosqrg9zxIYmIGdVhnSKUi0SvffCmT5C6nfI9Z+9ZC3yHmpo
evltAjxaLdPLo2rQc5ECxdopsv6PdowdjahBGpsTY5OYE2AsLVOy62wN2t8c
7XuIPQETosM7C99Vo/Dd4fvVeBPgt+ZMMe6pRqW9QQac+Qm4/kFKsvZZNeo+
6qfY9nsCbgj8XLOBvI/zJ08IJwtMwu5Spd5mxWq0LvgI85DQJFimXt5sK1uN
9v5z6lcTnYSxnLOzaiFVKOiabRNnySTYhBlMnCDfA3nSlsVtyyZhYsOJnQ9O
VqGOQtPE5JWTcC3f2Rk9q0QzG/QDXFdPgtvoAZUh8r0h82CTs7rcJLinbzoS
QalEZuYaplyFSfBY+snFzrQS+XavU21XmoQYmVxRV34FSneRFb+hNglf0l1C
JlkVqOXrco6r1iQotbmwbvRVIIfMHA9Nr0n4q+VU/CqefP/9qjHrHJ6EX34F
11Q60tFfG2X3kskpkL+yysPybzoeWxnkcJExBbUHFC++P5SBuwbbdh5gTcGM
vhEvzisD1xUt09fhTkG/5/j9bOVMnO7tpikyPwV7Wey3aHMWDttEkRv+NQW3
hofLp0yzsBv/19JH/6Ygbxk73DgqC+9ssRJIWzgNQZ2Ca88JZWPNuOw5X5Fp
cBXae7xgRTaWsJ4cs1gyDcFXV6d92ZaNucv138svm4Ynv+v3sHtz8McPV7p4
K6ZBu1Rw987RHNxa0N/0etU0OC2ZSDn3MweXnlKuq1gzDcm+xq7L8/Jw4sag
wiiFaciNMFt7kZKH/bltaYeUpkFa09J/T1sedmpadkVPbRq+ydzf1emWj6s1
f1e1nyC/T92UZxRVglNZVnk5XtNgHMqWe3y1BJ9/kH3jnN80vDp4t9M+owS7
Rk5G2ZydhtXuIk0e+0sx7NI/p3puGj6JiBwMdSnFquJXT/4NmQZGt5ppk0cp
Fuvrd34fPg1ZB7ov3FMow6xsZStq5DQoGdK29KiV4XfuQSaJMdPwQ82t6qtO
GW5Ub9fxuDoNJUtDXtdMlOHCmWXrja9Nw4bDyi/y2WX4yj23lVI3puG3hiPl
3HwZ9r1IWcS8SeYzLWfH6ppybG/x+3tHxjSo3WGub3tYjreJWU/nZ08DZ6O6
xEBrOV7zNvvzhTvTcNv/iMwvzwoscHvytX3RNND1tNLFL1bgA8LvOP8Nkf5U
xXIdpWqwi2LZuSVfp+FQt07QOvka7GpwnrN9YhpGBhd4hjyswUf27zrnQZ+G
ine5cW64Brv5SnOSZ6dBcr/WjFBXDXaP/Rb0iDMNUp99ZwaO1WKPvHtzY9+n
4aL8+77Gk7XY896VIMnf0/DPHjzhXC0+9frAnLEAHW7YTt8XX0DB3hOqQV5C
dPArHz9uL0LBvgJ8dpooHS6Obz5/WpGCT8t2BraK02Hq3rU65QIK9tfLZE9J
0uHtWt4HkVIKDrA+FSgtTQddDxHDrDEKDvLczgZZOlxenpu9Sr8OB18SDjy9
lg7J2xbVvDSuwyGZA6ys9XSIW/rZ8welDofWlwc8UaWDpUpoyIeuOhz+PIQ1
o0mHH05SKxNf1+GLI5YBa3To8OfSkwvbrepx5M9VrF16dHjwei7DxbkeR62c
OBu4nQ4FCdv+bT5Sj2O0H8zmGdHhU47Uk83v63Hcrvizz03p8GjRTHbcf/X4
qpvzLMecjDfz9I72sXqccEH9rOJuOqwQPrV/tQ4VX0v9PmNlTQdlJ60nKpup
OKnqmX+IHenPkXuXlLZS8Y3HWTNFjnSorjVUdz1DxamfvPy7nekgVZKq++Is
Fadx9WfmD9Ph+tJ2k8vnqDh9qai/ijsd1t4Ij86uouIstQ9MO086pMVF21bV
UHEOqjwT4U2H7s0Db2aoVJznEsosP02HvJOdc+OjVJwfuOdMbwAdYkRrNz0a
o+LCazLMP8F0aKf//Z45Q8XFJZOnNcPo8E15xNNSloZLmx8ynC7RYSzrUAB7
DQ2Xv0s4HRVNB62jB5o9t9Fw5YwLo+YKHXbsvb7uvg0NV4tonn6fSAfZQqkj
VvtouHbdD/qCG3QwORLJunyehusMu/x00ugQ2K/N2HyJhqkO2fRDmXRYqTm5
oyWShgk/H78rOXQQtQ6Jniqn4YY4Qzo1nw6rzBr9G6pp+P6dxX6fi+mg5CAx
s7OWhh/e/zgtUkH6c1De6HUvDTf2VPluqaFDhPeZIf13NNw8GTbtVk+Hc6el
l/43QMOtgla+1+7SwSGH7j3/k4bb1qyZvveADtkuk0fv/6bh55GuUyeek/He
7XrurUzgF1laPimv6JDULLDknBmBX1F/Tja+oUPjXeUvyeYEft31wnu8nw7b
wqRfPNhF4DejOZPLP9IhdfiqE/MYgXt/+Xrv+ELW74qF8Wd3AvdLGU96j5D6
K/hlPXWKwAMbl3inf6MD+qbhbBZB4I+WnybwFB12/xdxRfIigUvbH02/Z5J6
Wm4T+iOBwAEmt5mzbFJP03GXvW4R2PhBCEuET4eA3V8yZNMJLKx3gKP4kw7/
jmvSTpQQ+G3tFr7+Xzq05OV0////w+epr/hht4ABz7YsbxaoIrBXMeuXlzAD
TEM+itEeEFhvbc/fy2IMSH6b9mRHI4H/ZFEEb0swoKokefNjkp+vSBKirmDA
H3r+tqhnBE5P9hV5vooBEKVHYTwn8DHRvWLDa8j1tvB81y4Ca8WqL51XYED8
+MrJO30E5v9ZJCmpzADlLS7WAf0Ebg8dW6GhzoBO6TOSz0hO4jyWhg0MGOFX
VDh8JrCzf5GMyyYGDBSPv+8kWWnqslzAFnK/ZzZ0oS8EnjnhppCgz4DnqUR2
4wiBHw2ZrC80ZsANy3jRWZLjDsmpPEQMCEgQfbN8lMD2/T/U3lgwINRsh8Po
VwLL2X3QnNzNgJMySZKTJI933dcWsGHAujPDAXSSaTszNsnYMyCxY+WhN+T3
F/E5PV0nBmg1ri2mkbzbyGHbHhcG/HdYxTyF5BX3dA3cjzAgdd70QcIQgb9s
WmYc6s4AWWrPjDXJldXMHameDMi6kDjyg/Q/WPUVVHqT+Y+UPy/xnsCosNqi
7TQD2mMqKx4MEFhMLtHyQwADSlsrP6qSPJDhtZcVzAD8o97a8xWBiyQtbUTD
GFDzPv837yWBT19XsVt3ibR3dGufKMn6wgsdDKIZkGn/+U9SK4EXRI842V9h
wBapmFxRkrt/YWfvRAbcqxK5kNRM4Nsh+a5RyQwQf+SQcJ1C4BPsi0dv32TA
gXCDOnYtgXVOH3anZjDg1IVu0fBqAv8cNzzxPJsBGyLqTE5kE7jjuMyp4TsM
WLZZ+8Pd2wRO/cz3ni9iwJjh5u9GpD6POL/zkyxngJKH59vVMQRW773rr1HN
gLdfqvQcogk8Z5MWCHUMaH1g3G4bSuCWZwHBLgQDVs56+FG8CJxgbnch4D4D
Whzf7H5D9o9Ty8bwhEYGbMpO5AweILCigfilwlbS39ipEg0rAk8T05cfPmbA
u4CrS/T2Evj+xq6YN50MSKhwnx3XJXB0ZcWVyRcMsLFYnHRDk8A2ylcTBHoY
4PidfBlqEHh1vud1mT4G7Ekljv0VI/CojMUN3fcMkHpbUDe2iMCUW+tv7vnE
gEuEkSkhROBQCYF09/8YYFkmr636lYYtEocyQ7+S+lKH5Zv/o2EJoZbs1Amy
vttZeoNfaHgwMjevks6Aju0lf549pOGyH2EFbbMMuCJ3dGv4PRqWdNu4Lo1D
6qVw4L/1DTQc/ni48MR3sn6XIp4NJtPwN7X09dt+MaBrJp0jkUjD9td3Fwv/
I/vbfDztYTw5D2d/Kn1YwITsB3nMAm8aVnWqK6kSZkJr7Lf8lkM0nPrwuEqE
GBPMF7FmnV1o+Ke8dJmNBBM0V081BJPz2zP6uarCCiZQ+LzqW+o03PMtonxW
mgmPvi0sXaJGw0ZWm9TbZZmwak3g+pr15HlRN1qRtpYJJ5de8CmZo2KJlZka
nuuZEOaRVDHEouKwC3urtqky4Y7xUd15JhWPffqtKaLJhPP9Dg2Lm6h4H1Cr
P2iTfPeC4OeHVPyw9MSGal0m+DX4UlLuU7Hy4tW1EVuZQNMXifgXRZ6fZ15o
2xowgX802HBZJBXPv71EUTBhwrfTDruWXKRij+2bdViICc51UppKu6i4O2es
rt2CCbVJ/MY4oGKDf1mbbu1mQmnIomsFpuT5d8Ka6mlN2he8nmorRsXiz//q
brdjku8V6gErASq+oE3QRByZ0P6azun5XY9HU0/qfTzIhF3Jo5aUJ/XYhidz
t9qV5EktveHwesy/On6P5cOEM9NiH1vpddidnr398RkmbD71YMR0tA6/tLN9
cCuQCUenEc3bvQ5vbxAwOHmeCff/nKg9fLgOF8o0PNwexoTcxfWdqU51WOyS
l6HoJSbESy+OMXlFwedH1jR+jGKCTdC1fWMdFDy867VRTRwTGnirxRzaKNiq
OrrpYgITNikNth/fSsENEttM9iUxoWnp9dcXNlCw4rnJZsVUJoQHpTheUqPg
a+9zd7BvMeHK4W3St3NrMdfYrvVxFhP6KJ579JNqcX63fLtoBRMcoyOtrnyt
waJ6b8wGq5nwvvdxVWNTDT6XGfu4po4JWzSSFftQDR76ud3iEkHWb1tx+iuj
Grzn2PSTffeZYMKSnlu2oQYTT+7sXNfIhF8Gm/2X36rGazX2d7BbmHCt7X3s
heRqnJAkZPmknQkaL3TdKLHVeI71oDO9gwmcElXsOFqFjxzw232qiwlffgl7
13yqws8eKTzX72bCEu8AU9P+Kqyn0Ltn8VsmyD0WFdysU4XzYq50DfYzYfyL
pk2yahUWnjCwqv3AhLMp+5osFKtwoDXjxaXPTMhMb9LYFFqJP9cXWNsNMyFN
eK2zhV8ltpRyfLVujAlbfxhkxZ+sxN0v4gd3TjKB0eT8xa2lAjtFN096M5jQ
KRxfsqC2An/WZ/OTWEw4Fh+VZ1VWgU/MqC6icZlA3DyVzeWW4+lS15Xv5plw
eXCLlMNkOQ46nLL+x28m+IpdzH8zXI5/LH+6aa3gDDjuoeTNaZXjqOfzO8wW
zYCJdVNKx7py3Hgxv/642gzIyb5uiG0qwTrfptKKvWdgkyGdUfUmH0vfjzqk
wpwBG//lYztfx2GTg9e+CbJn4IXP1PTGkGjswb8V+B93Bsosbsn9kYnGiZl3
/jTPz8ClqrLEO7+iMHV7RWLO7xnQ33Jj1IYTgQcGqNKhArOgdtvyMis2HP8J
aSw6IDQLs0aXaA+swrHK6qcbt4jOwqti1Tc2d0Ow1YPuR5Lis+Dfmzuo2xuE
A5zf75pZRv57w+iorttBOOv78NuXK2dhM96att88ELdmTR+tWj0Lh/vu3Gk1
OYXH9LlTV+VmwY82tlGh8yQW+/DnvKfiLAxIyfY2u3nizaEiC8yVZyHgVs36
Kw7W2EVm+Q1F9Vl4sqz6TKjLXhz5cM2aP1qzcMuPz+5J3YUnGhsG33nPgoVT
pe29ojgkcbj11N3Ts6DiEKxJjb6Ctv56NpcaMAt/uoQJ8fwr6HDu20j/4Fmg
+cj5iIrHoxjjT2I2obPQo8PN3Lc/EVV+GsvUvDgLjGPUn51nElFPxIySSNQs
BMVkOPf/SkR8ufm6sdhZKBl7yFKUT0byzYLGj+Nn4XV79N2bhsnI/MiSZwXX
Z2Gd8PvXaxOTkc9vKcdLKbNwqcs5Li8gFaXmKfznemsWQuSs8g9GpaL7Jhp+
Blmz8L5+nRwjNxV9/rz5u3QuGY9bb3mrXRpaeMk4lpM/CyZXi+t1j6chrbW7
lr0tngW5k/E55SFpyL5lX25d+Szcy85hE1rp6BGePBw/NgvnnmhuXOl6B1W2
C/jtn5wl3yf+YTped9DtJzLhcoxZiPUsvqCScQcldOgmfpudhbj2mly2fAEK
fbbndj1nFjao+41KbChA3l3uFWHfZ0H386DvrEUBcn4Zet/iF1lvyoR/9elC
ZNmd2rH03ywsZnvUzwYXolwvp2k/QRZY3HhwtvFSIUrzHmbbL2QB+7eve41l
Ebrmc/rHtkUsaFp7+WDu/iIU4zsvICfCgoeBJjNNLkUo3C9OVGAxC3bvyQ92
lS1GQaclJb+JsUDHJtjHeUMx8j2Tt/qFOAuCV7wNrNlcjDz8NRTrJVgwQJ9d
GdxTjFzPNqilS5L7iX75OyNYgj5EBheM6bAggqs61yJcgd5cFqjo0mVBvN/1
H4fFK9DzqKS6Oj0WaCxId10VUYHaomXu39rKgm2rf82qP69AD2NKW0K3s2Ch
XXl3XncFosbqdhw1YAFacOGJxWQFqoxrfmVuxIKoAfNNx69UosIre/rVTVhw
assfYYnrlSjrav8ncVMyfufD9sZZlehGvPtXNmJBnobuG1nTKnQ1gTE9YMaC
TWe3b47YWYUiE0PnmixYcLv9iXqQTRUKuSb0s3AXC3Ymp0a2sauQ//VUwau7
WaCpnIYe/KhCp5LkF/vtZYHfXL39539VyC25UtLemgUHbHbMduZXo4M3tsps
s2VBw4VHR29XV6N9KW2Ka+xY8HWEX/++vhpZptqo/7NngfSbnXs1d9Qg05sf
dMYcWGAakSLJO1iDtqV5bu9yYoGWXLTby8M1SPsWa0fdQRbElkq82Xy7Bqmk
X9x1y4UFXmFVQ4V/a5B8hqhtqCsLngbU+59aWIukMtOdjh5hgfUSCbqSVC0S
z1p3xNyNBS2anxacKqpFQrdrT6i7s8CG0bcpqLwW/b5t4CfuwQKjxY/7nOtr
ETf7aRD7BAsKIm4u5ZlSECPHPnzgJAtYszf9n+ykoLHcz9FNXixYZ22RMGtF
QZ/zvBMLfVjwfD60tXaAgvrucFOv+LHgXqf0pa1DFDS42+y/W2dY0NrqI/Xf
VwoaZidvLD5L6qUjQmjOrw6N5w5GUANJnknbUnGuDjF2qb9oPUfmt0EkoSKs
Ds3NnpPpPk/WdyAKXf1Th+az2059usACky1h5zgL69Ffi6X3psJYMJ7rkXFe
rB4JzRxaOB/Bgv8E+W8vJtYjsdvl+4UjWbA0q4QimFKPJM05BVJRpP9P31ju
yaxHqxhoRimGRZ63uZ9YIlS0NjPJZHMcC9xPyScdFaMiFfh4DV1lwfREfFCO
BBVpTat+tE1gweebEq6H9lCRbnqQ+pFrLHjHWvglzoqKtpvi875JLMi4c+b6
YzsqMplc8jT0Bgvatt6041yhIvM0lxXxqWS+6jWNGPFUtMekzD0jjQVTFbJv
FqdQkd04u64knQVVSk/8HrZR0cFU0z+0TBacsZy/kviYio4YXbduu82CbwXP
v3Z0U5HH2Pvs1zks2OMxG180T0XeN1QmP+exIDxTRdbxJxX5GwRup+ezQERr
+Q3XZTQUPNoS96OQBV/4jaoVG2koPEmsT6SEBeVr5J6hTTQUtd15/aoycj9V
vKrLnoauDpecVakg9Tm+/1H7MRpKusZq0atiQYJKzFfL4zSUtnWHuFkNCzxa
NJ9GxNNQ9lCiqx2FrKfL8MDUDRoqTBioPFrPgvM+EXvcU2moXE/5ux+NBfk9
ysPl92mo9vPZXeF3Sf0GNdrJNNEQcbX5VsI9sn9XfDsW10xDD3UXj2Y+YEFi
Nv2T2QgNtQ4e0C17xIIJ6ZJdlmM09DSuOPJuEwsYvn66td9o6IXO7Kv2lv/n
U2qnviiB3nwwlnuDWfBmw7z+GTECDcQk+Ay1k/0k1Xfu7RICfdZ+94DxhKzv
2jC3/g0E+jqwXvhXB6mHIyPi8RsJNB3l77T4OQuc0rNbZnQIxNJqKl79ggUl
O2eWbrchEL9fhK36ipyH65+svmFLoN+RTmjraxYo+bI7/u0j0ALNomTzNyxo
t0is9PIhkGgf85N9LwsO6zxZe8mXQBKXjLSO9ZP9VWkpsuA0gaTV40PPDJB6
txXYfSaWQPJv+zojPpD2NV+72MURSClinfS1QRbMevlu5F8hkIbqmRO3P7PA
0OX28905BNLpeUQrH2KB8m7nMIFcAm0NExa4N0z2R+vIwNc8AhkpO+57MsqC
XYcCs/gUAkF3Qd7bMXL9/FR5Uh2BLC8wpv8bJ+evlMytMSqBbNYbGs5MsoAj
2xgb2kogh5dX4n9Ps8A8LOQyi2SX873vxJgs+HTh4SQ8JtAxRUUV2VkW6MmF
b3/1krRvenCzEJsFPVq+FkqvCCR2NNl0do4FMuOK3xq7CTQc8dR6kMuC9Ki7
SUPvCHQ/55dLB5+cx831x9cNECjpkd4p6jwLbJPlPFpI9vjgcy73Jzm/f3XJ
vPpMIIPvhVFXf7NgrfSDsh8kS6z6kBz4lwXFOie+mXwh0NjWZblHBNjg//Dr
ycxhAjU6WlbuXsCGcp6Adi3JqUGX7ukJscGr8KF4O8knbzY8XivMBunoMhWL
ETJfVHqPqCgbbs6JSuiTLNmj9IWzmA3GRkVlG0keZx6aHlrCBtbJLW5jQwRq
Fr/5vWspG7qDhhxySE7b8Fzo3jKST9XohpHsbfVveeFyNki9f7648yOBTH22
K15fyYbOpZXfBz4QSCrhjHaINBuWvPwuX0jydHmp4fHVbDCM5nx/00egto5P
ljaybDBZniQ120OgzLEVTvpybEj2bA8tItlvodVxpbVsuJZvGltO5heUov2X
KpL7J53WG39CoFVmDyPm17FBdov3wCWSGcdmE74qsaHX5lqLPVm/x5Fqma9V
2HB0obbY4wYC3b5ztOSRGhviTsYPbSfZvzmdWqrBhrfes5933yXQzk8vW1K0
2HDuq+3+pGICrfm54GW4Nhss6+KV///3b5aM0YeTOmzYwvm5aL6QQJ36gd/s
ddkgoN/3yDmZQHkHK+eM9diwcfdeKaskAgWd/++f2lY2KP56VBJ+nUB70lct
XbGdDVaFacb7zxNI4a7tmj/6bEgvcFpYe45A3Ldx6pOGbHiurxY2GESgLlbT
1j5jNvwZcmOuPEyg/GUcs9YdbKh/52rx05lAwTpadlWIDdrStwkFkq1sjx9J
N2ODwevAlWvNCbTu9G2fyxZseGco5WlsSKDQieD8DdakHgpDPM+sItA+4dqa
VbZswHs9K4dWEEhF9etDQTvSfr3J2sY5GvppsaaTYc+GC7lNdXFsGnrjsb/v
vQMbFgQmK2ycJedfdMLwYyc26AnV4RUv//97IMykHGTDJnfVxJwuGnLA/J+3
Xdggf6HjC35GQ+pDG0XjXNmwgfv6WV4hDf3+7Sl99ggbSryEqu/n01CvXJ6S
qxsb7knc1V59h4Yqjfo27XJnw4rnL2zTztFQ5CGxHboepJ4q05JGAmjIKdTM
Ss6TDW4XRJWOnqUhraxQZ+FTbLgcs0a0eCcNCdyv92R7kXotbipUARoa6B8P
/OxD2g+1W1ZhSkONeUMdLD826Ka+XxC/gobyPQdkF/mzQfnks8W7xGkoRvv1
GdkANtCul3AviNGQF7ejfWMQG745iapd/khFNs0t0ubBpP66itZ6viPPz7h7
PgdDyHrWTd3Y30dFUjaUFt9QNlh/Clf/mE9F8yvLll8OZ8O6mKWD1blUtMbx
BG39dTYEfgqga7eR5/+aw4u2J7MhUkL41I2mejQ66nDIKoWsh9Zi+w5KPeqs
tqK43WRDV5paYcb2elQTZC547hYbVGwfTi3Tq0epRkYH4jPYwDjyYeSXVD0K
XqBXlZvFhqgVe1peV9Qhlxeaf+qz2fC9WcB9R0kdMklbv/9pLhua/xksrnOo
Q+tcZcs+3CHrGd/7YnJlHRJSWv6DUcCGpy/XHNRYVocmp0RtBYvZsDpSv2zg
FgW9ogkUSZeyYeHWgw3fwymIGjbP1SxnQ42U4pv/zlNQuhlrj2klG3YsTk7d
QK9FoYsn8xyqyXklbJWx/EstOvr2P9apWjaITZ6PO/O+Fplnv98ZUceGVIdA
x8M7a5Ha8Z7bKVRS/653JPYZ1SIxzWeMEoL8njY527OlFs2wWuFhAxvuNshp
fMqpQb0P76e/uk/Oly/XBjvSatD9qLrJ4YdsaGj9uoxxrQbl7Ck34TWywZSx
wiyNWY0iJfNTF7eQ9XiWEp42Xo0K7Y7o1naT82JDWyL9VSWKW+0U19ZDfr9r
av+Pzkrk/Z/1h/63bMg+7y7hGFuJbCostKf62HD62d/365ZVos1njaP+vGND
tOWZBrnFlWiV/pb+5R/YULxwb5voxQr086+WhtogG5Jq4wadbSvQUKfSRaPP
bPjZX9mwbHcFenxjzZt9Q2xIlOha03unHJUfXKFyYpi0tytGoSa+HF1TEAu9
MMqGh726veNR5ch/XPDV9TGyHrlxFTdelSHHuh+KheOkXqwy3PVby5BBCPtc
wyQbBKdqxyrvlyF506lnz6fZEBS0yerPr1IkIDwi94XBhleZf1+tYZeise4P
Z9kzbHj9oUNo72Qpui3WFDPKYkPA8SSeyIZSZLP7TkbfHBs6tA7rm60nv4+7
XPmUy4b47L4XjbKlqKHteNM9PhtSpsP5Q64lyPuPxevyeXK/P3WLAvaVIHkj
tZGsn2wYj9qaFb67BL0JEeUm/CbrL2vz9VFiMYq9Oy0c/pcNCf7+I96hxWg7
65Wsn8AcfL60pbQrsBhNa9drH1kwB1qnnX8kNhWhfJ+byFZoDryVV250LChC
DuXnHEyF50CwUUDry+0iJPz1wMlNonPwn95Q3K9/hahR0SB0ndgcnDv/4Inz
k0Lkf2TN9eXic/CkI/j8WHMhUsr+fWeBxBwImw1uSfcvRO6e616t3DgHB1fb
TT7szUSff3ppbPebgxpB2UNXPpxBwd5vL649MwciGUdKvtueQUsHjN4KnSXt
731icbjHDZVblKoyAubg0ES6kO7QEWRKWxreFzQHf7Q+0hPoh9GAwoXXjcFz
cKlPrvTDkBw6mzSsVBwyBxLOA8ID/opY9OfeC+STDgwNBYX0etVwodfdlwHh
c9D2Yamoc4sjPtH/178mcQ4eC4wSpj0X8DQl4966yjk4eUBOdunKFBwj92+x
aPUc5BXK5cq6pWC5RG+32Zo5KHunVrrh8E3cwH9LDFDI/RZO/17odxPbeBqL
tNbPgcWd8809MTfx2NvSw2W0OaDca/rdtv0WvoQkqEl352BuKWO6du8tvIpy
QSj43hy8Z2199ejwLVy3ZsTl8IM5uEML0G9fkoEtE6wo5o/m4G/Oz3Wyqhn4
P95dQa0mct1pg5/11gwcemLtweUtc7A+2PW4TF8mlnx7tXq+lfTnp4bMyO9M
HBiv/Tujcw4QNVHpvy+38bz7E/Ml3+bAyCFF+etYIS64wPwiNzEHZ7wN8pWK
i7DljdVh2lNzkDvln5beWIQZpWZSO+hzcHp+5ZVv7UX4VpNfvS1zDnTdD3mM
xRZjo94MK7fZObiZrPDpYHoxHp7E3/zZc+Ci5dcsnleM4/9NRV3mzIGdXXFc
nFsJ1lklJZ/KmwNL9PvGjG8Jfqdt+qDw+xzEPpE6setcCb5o4e1A+zEHkbRI
mtbWUqzsmsZs/zUHtzfaNRialuIXAc0JvX/m4EZk1reE3aVkfOPKX//NgYHl
NkbCojIsky+JOYIcqHTGmaskynBrg5GrkBAHtO+dFafLlOGTLz15UsIcKGpM
0xnsLcPiozdSVUU5ELukcubEYBkm5h9u2C7Ggb1Xr0e2TJThQ8u+dlqKc2BF
63zshrxyLKC21MNZggO0GCkhwZJyXGGi/8dLkgNsFaW8vw3leJ/j8duhKziw
sNW4/PzxCszzub4lUYoDzxMd33Z7VeC8qHuvs1dxYE8ut35RXAW2yPrPp1qG
A062jwIrlCpJ/S1e1LSGA29X39eq0ajEqU+3FL6U58AN2ds0++OVWP/TUePP
ChwQ5cnTqv+rxEPs+AHGOg7YLDzICv9WieNEicA/ShxoXX2ws8e5Cm9Q/Cwu
ocqBWrkz8aduV+HebcKVCuoc2OSZ6LQuvwqH2ehabNLkgOG8zPWETdV43QnX
IbSBA6sK63GbTTXuDIsLs9/IgRzHu3uiHKrxmdQ6qeObOPDP+Vh9Or0aS1V8
qA/czIGd6o4p+b+rcWPLAuuYLRwIE/TfHLOgBh/v1x5P20ba1yjMlc+rwaL0
g9El+hyo8zdf+q2iBtcLRss3GHKgpr9Zc3ldDT4oU/PgqTEHJlCj7MVdtfi3
zjuHdzs4cOyuwuWwfbW4ZNc/5jdE+vdrWYjCgVpsdUQzkW/GAebuHBHeZC1m
BTmqiOwk448eSTZj1eKsxEt4tSUHkil3H5R/r8WmhRWuGns4wBNxseNcpeBv
99/yDKw4IGa98rRyMgUndf9K3WvDgd8DC2xaMyhYb0xV23UfB9zf+VByFOvw
x592z3ztSf+9IjmLVOtw1PJwjwgHDiy3vLH17qY6rKZR+ue6EweuXIrmsYk6
3G36+nbeQQ40rN/W+uZBHQ4+ML+F4sKBZYuahS911mG500o9La4cSA3XJ1Vf
jx/H2Pi+PsKBz9NBpqd31WOf7JBF/7lxAN0+4xJ7tB5LUgsLZ905UFr93vxm
Vz1+0PnCWOAEB1osg9+3d9djty/cAcmTHNih2VSiIkDFQlyFoPVeHPi2BBW5
qVFxjdjepXo+HNiwR+PvUQ0qVso86qXox4EeSlKs2C4qvr0+qF38DAdOnl7S
OOFJxRKUq3I//TmwoC/GmnKKiuMMcs9PBHBAc+Bx3tEAKv75pL6nP4jcf6VV
TGwhFQfaPdV8HMwBDb3ivzuLqXhy8ENsfQgHgmqu6ypWULHbKeaXvFAOnDvH
ZVt9pOJ+tqDBtXAO2Ee3G8l8omLrS6vSLlwk9ZSSVm44RMWPRTcwPCM5IOXf
aqizjIYN0pGlQxQHnPdxI+SW03CdolMhiuFAlKjkJa+VNKxa4/1TO44DuZ+i
l8iY03De9ktOa66S9iVkzXbupOEVj2/WiSSQ+i3bum2VJQ0n2JaL8hI5oByn
1/A1kIb/fWj0GL3OgTNGWh8Tgmk4xLOnuSeZA1uHz4tJhNAwY/brqpYUDkDZ
s279fBr2iJgPqL7JAbsHR82Hi2j4o/DSl1m3OHC36Wa8XgkN26etV72SQfbz
U7+9uIOGO9duvxyURepl1nq5+SsaNqmy+ngsmwNNW1M+BnbT8N2tx7bY5pL6
PuBfs3OUhrXaziUb3eGAZ9+KQ+UcGi60TphQLyD7Y1f7Zsyl4VXv88ykiziQ
Lre49+ovGk72oOUuKCH1p+eRtEiGwEIzHbzZUg4MGDXHS8oSODxs0O5LOQc2
f2xR0ZYnMEtotupFJan/s3Z7XQwJ7JW6UOhhNVl/HduMo0YEHpKTcSurJePd
pxe9w4TAThXaD9PqyPyMpM9kOhP4hZ7ZiigqGd+45sECFwKbtR44fYbgwFnf
+/+mDhH44V7fTtcGDhxO9sp9GERgnXeR6/bc58CXBvOnPecIXOp+K3zbQw5U
C/6dfBpMYDlGRb9SIwf0Fu12ol4jcNqFZh3JZg4k1q++O3WdwKIL3yb8aeGA
pO1IWkUSgSNvfBudxhxQK5Rs8yggME/2p8mHdrJ/b+U3TxYS+HSZRFbHEzJ+
s82ll4sIPKqrzCY6ONB1WlL9HJXALs361oXPOKDTO2LYRRC4Z7dNWXIXB47k
Sd8yv0tgyz73f+EvyXwk3gzQbSZws9v5Q97dHLg6NbEroZ3AetOJdw/0cEC8
Rz1liuSq8/lLLd5ywCQyuTbpKYHXCd710u3jgMWZ2m7lbgJnJj1rX/uOA3+5
uZNnSRaX+Sy35D0HlhqfSPN4TeDYEtb5+Q/kPDQfuZ/zjsA/dRa9+TZI6vOD
2eFekgMaZbX6PnPg+mA3z2SAwOO7dOLahjhQIXHAgDlI4CNvzYcowxxQ/Oj2
QOITgXuPOBvkjnJg6CsKMCR576RfWsIYByIdQoi1Xwj8Wt5sS8E4qZfi7n/K
JDvsX9V/b5KcnzfPF2mS/P4KPfjVNAdS1nV0Kn8m929sk/7KIM/PhX+wGMkj
Mxn3f8xwwKxTQP8duf8pZT9nSTYHOlYVcVnvCUx3hnk1DgcEjfyIVpIDkqSz
d/A40K86Is8h/ee1TRs6fefAmj83Hye+IfXJw4O+P8jzTLucgUj+q5kREf2L
Axe57XbvXpH5cfOVv/2HzLdFgw27g9TDLdRS948D9Iw1sTdITnom5dYhyIVU
AfFvp5oIvPz31N9PC7nwROG9rdZDMv+6uGBuERfUH23bVv2A1NvJdFgsygWF
RcpzQlUELsz2GVEU48Idz/54/QoCq742jdkuzgXzSxsbb5YTuHqBlLKtBBc0
M/p3XEgn8Cb9qScnJLmwWcF5Vu4WgRv8Wj3DV3DBM+aKklkagQ0Kby26KcWF
o3D0lsglArf0e5dXrOKC+6MVzYMRBDZfbLq7VYYLVg2HUinhBO7csXKyfw0X
FnhMzqR6ENg6aDKBLs+FpdR+7wvHCfymvEVzgSIXRgtCQh8cI/CBT2kvZNZz
IY05NyC2i8CDy7z9NilzoTJvQTnPgsDHdu4Qt1TlQmFSZswsEHgsdAXliDoX
LoW5zQWrENiHMmF7TpP096i98SFlAs+MNM8kbuDCdOimj9LkfAhalZZSuJEL
faPd0r0CBP5u5aX7YBMXlhN7X5f9o+GLl03edm/mwqZDb3riJ2lYoGF50NgW
LsR7RNSrDdLwlcnxFb+2cYE10HZ+6AMNi61tvrvcgAsGabl/Ne7TcMr+m04a
RlyI6ZLSDKXSsNTVUzxTEy487m0dFqqn4exG48wDplzYtyN/DMXTsMKspP5p
4JLvs7g7r2JpuER5/H2MOZmfb9GRq2NoWMOlKTR7J2nfNtCk8yAN1yalylIt
uRA6+o+i5UTDm9tPNnbu4YJx8Qu+uAMN3+cZHf5ixYXsk8OrepRp2EhL8jfH
hqzvfZ/j2etpGLt9yxOz40KN8TfhZwo0vPNW4471+7kgQeOwlWaouOtZypC+
IxdWPB5asI5Bxft+e17ed4ALf1RWLxidoOI+XaN1J525AC8Do+/eo2KXk8va
Iw5x4bo1m9dxl4ojFz96puvLhWDxmy9bv9fjSX/p6h2nuZDytCw7iVOP9/cH
Jln5cyGTFaJ9M6oeNxq+9ncO4MJ/NM+NEFiPVQq09nsGcWFx49nSltP1OFko
fktgMBfyogNObGPXYb7PV+nIEC6oLNk2eu5bHXbvQfPXQrlw6MfHiuThOty1
NW8wK5wLN4oMfii71WG9nPnm0otcoJZ/lQl0qsN5/5wKaJFcCHzePLnUrg4v
OkmLbo3iwsHT8pr3OynY/8VSz5cxXDhb7/3JrpWCP2zytfwQx4XIqWd5tg8p
2CyjU+PbVS509H/5StWi4OqfSkvmErjQFm8joqlMwVLul5l/r3FB7EAh31me
giM7PvUsSeYCP4VhL3StFk9oGRAyKVzY5vVs16rYWmyfmp6uepMLvxoLzupG
1OJGHitE7xYXaGksz4axGqx82PYQyuDC2rsbFuoN1eCktipjmywu7DZ/ufll
fw3mqworHMrmgujz+r09RjX42HUPgVO5XMgRsDyZtbUGV9/ftbK7hgtf4uNF
wpWqsJR8Me8jhQvHj8u8yJGvwpei/74fr+fC/qWPR6R+VeLxcddGDo0LBb/a
Y9W9KrG9zYM8gQYubHCIFrIg7+uPaCsvL73PhVvgGJaoXImVVgccX/OQ7N8y
pZW4ogInXXxlod5I9n+nX1FHEfleGNFQ29pM2l9ipheuV4Hddl8RNWvlgv1U
ht2xsXL8vHZk2raNC+GVsV0wVI43rzDtdn1M6llQNV9/TznOuZBT7/WUC8IK
Yb3qa8ux0Bf+zeBOLiSE7GnoXVWOz5g7Bkc/54KvE/XjnjNleKCi/uCNF1x4
l8eTMnQow7BU3DD3FRdqDY54ZFuX4eogb7nK11x4qrfxhkZWKV754emfhjdc
iN251qUhthRf3LF+uL2XnB/hO/WIi6V4vPjS49f9XLhQV2st1F6C7UUHSz8N
cIF4++9mE60EPzqzPX7yAxeYG+cNDKtLsFJfmg9vkAsnn3+ma08V4ySDWesF
X8j+CH13NPBzMebfsdZZ9h8XmpIP6uzpL8bHFlZKyo9wQVVDhVi0rBg/9xbi
aHwl56/bJHN+YTHWe+3+bts3LnQtjkvh/izCuVtaHphPcKFUQ9PQRa8IC2XL
5thNcWH8R8Hf8xpF2P/v+YtH6GQ8SVObbBSK8PsTvW4+TC5s9/7ySNaxEEua
ygo4znJhRCuhJ8yqEFvJuBeZsLmw8ofM03tmhTh2rtxcjUPuf6TOt46ej5tf
Mb8u45Hz0id0g9G7fMwr33rlB5/sx/2v4vQ787FOdITa13kuXNzy2sdR7w72
Ovz42aufXPB6qDHmK3kHF25b7HP/NxcsaCBCW3AHf1xmL1b4l4yvFsLTk3Lx
iunMmkQBHlj2/Igat8zF1k+/2JxbwINDVqcrqgxzcVy+yswRIR58/8b1+3gq
B3uLwLmF4jy4ty3S4kJFFp6vpsTf0eLB8vlfb/puJOE1cwnUt148eHFYduVL
sWDkcT719pgPD5h271/sOh+Mquazor778aB8p1H6dGQEYkUUeIv580A6vHZT
17MIZPCv3H5tAA8GDedFWI4X0eWYOgPdIB6c2lH/qiU/GnUuur/OIpgHJwSe
Oqq2RSOJxBbRgyE8iK0KOT6kGYMOiHewvEN5UGIWaPMz7ApKVRPcLJDIg1T5
jWmr1qcikcNhNJ1qHsj0GwQpP8tG+4aiss1qyf36bzzSHs9GmccTop3qeGA+
e2Lb6oRc9GUsxceLyoMUacq1+axcpOKdtT+c4MF/CjsEJp/motP0fMPkBh6U
bWuSOXHgDrrrX76+8D4PCi9TPm7zvIN+simL7z4k4+c7vGu9dweZn7/H7mgk
83fBM/Pw2gJ0bb7544dmHgT7ee7J3FCA3kY8bae38sCpWc1gAbcAyfx7WfW3
jcyvtLXj1NlC5B7Td3P5Ex6YHLy1kBFSiCoXfQpT6eAB0jJ71KhYhGYTRo/r
P+OBmoiByZ59RWi7+PReqy5yvUhV59iBIhSZwt589CXpzzBRiFYUo84VP2QD
unnQbX1EoFazGC3NFFgQ28MDxdsifmKbi5GTrOh0xlseZET1yz+YK0Z5ect6
K/t4sPXJ32auYAn6qri6sekdD8x0fB4NLi5BWiUKxa/f82DRxWs/i1+WoCA1
tWsjH3lQ3f1uVvB9CXpUtTGI+4kHv8qcv774rwQJbNzmKjLEg+xH6MzlglK0
h2pivmaYB3IXZ1lEZSlK2bJTa+MoD1jar405RCkauG+9AsZ4kHlCWV/sbBlS
MHL86TDOgw0pfnsnQsrQyRbX0ZOTZL0k0sruxZahWvB4ETrNg1q/SfPLRuWI
+8SHuM7gwZMc4kekWTla0nz4UMQMD/bR3RfP7ytHSg22An4scr/12cZhAhXI
sBZVuM7xYPincdIGkQpkX7p5nxWXBwFzi9TWLq9AXnnKPEM+qWf9wxcy2ytQ
ZLp0nuY8D1bHhjku7KpAGUkiFrI/eeB71lPl95sKVBv3Y0r0Nw9K3TMWoshK
9OQiPXX+Dw/2nIsjRq9WosHgL/qT/0j9cbihpcmViH26Z+i9IB96Fpw6NLat
ComebL/ybCEfCtuThCugCikevav9YBEfHE7OrymwrELbD5T1lYvwwb9HsRpN
VKF9tlnhmYv54Ii3++rwq9DJXYnrry7hg7uk5oriX1Xo4o6I5+eX8mF+ZqG6
7I1qlL7tzNmTy/jw7ef6C84V1ahm47FVB5bzQabi7PELtdXoser+lp0r+SC0
pU9MWqYGfVxr4blVmg9iRxN5Ak41iCW9bYnKaj68LBLQ57jUIBEJdWKlLB+2
6x9yPBxXgxSEZQ8tlOMDfQ1xfPHvGrTtr5gAR54PjD+KqbMCtciG/7t8VIEP
i3sjDU9K1aITMzO2vev4sO4/Y5l9BbUofHyY267Eh9+9OqusSmvRzaHeXJoK
n7z/1N6WptaiyoGn5kVqfPJ+mPG0agcF4df3p1I1+NBlOv1r1JyCBjorU6O0
+LBziCq425qCmK05+gHafIh4uFSOPUBBQg+Sho7p8KGo8YdL3mcKkquPvGKn
y4dLeEu32lcK0qsI0EZ6fMiJFDOm+9ahvQUefTpb+WDibdh5KLAOuWc5hSts
58Pp4VGHJyF1KDTFcr2EAZl/yTCLHT/qUEq8wfM/hnwYnHCTFxCsR+WXtc4y
jcn1HOVtlEX1qPWC/KovO/jwyFx9Rj26Hr07K9HyCvHhT3mexfnr9YjhJeDZ
bMYHP6nvO0tS6tFC9zmxWgs+RF0f6d0uQEVrXMZoubv4MKkXImQvSkWb7Qdc
ru/mg0GOnYKJGBXt2fP8X/hePqw6sODDo+1UdAway32t+aAtbft9yx4qCjGo
tXW15cPJwUN+QlZUlKybz91rxwe8WUGKe5SKSjVScw3384G9wve86xUqaloX
Y67pyIfDvosfy8VTUa9M8JTMAT5cMBE7tDWFiqYkT6WKOvPhwJerkQ8wFQks
dtGfd+HDgK2Zzvl2KlotaDU04cqHp7Q9EYs6qUjnh/GV90fIegofu2f6nYp2
sTdqP3Pjw3ScjfCiH1R0ZEqx7747H5Lmwnzkf1PRuZHl4eUefFjtdDZ7dAMN
Xfu4cH2mJx9+hH3Pb9tIQ8Vvec+unOLDrfVwc7kuDT3qmvA/782HupBFz9KO
0lDDnLvzYV8+WNk1p2UdoyGq3CAyO82H7OKfXx2P01DtTkcNdX8+lMrwOU+v
01DlmVeSSwP48PC7lFTEDRoqzdz1Yy6QDwUhVx1GU2ioALeOfDjHhyWrPvBv
36OhnEn9F63n+bDnRf8z/0YaylxOI0ov8CHXJHN5RRMNpRlp5V4L40PTw367
R700lHyiJDYgguwf1PfE+ysNJSTJnz54iQ+HEsQNE8doKO5ehpPJZT5I2iZ+
WTJNQ1FDEjuUovnAWVr/2G0xgS6KJKiKxvLh/dV6tzAxAoXqCkrMxPEh3LP0
86g4gc4dCuf3XeVDn4Rn/E5tAvnHcIYeJfChQX7H2dMbCeRbc/pZwTU+WHz3
/TWhQ6BT/d/qrySR/eb3XlPEhkAef9xu+93gQ9UqkQeHbAlkX2RhtDCT1MeP
3TwJPwLZvGhWmsriQ+zEp1ufogi0m7NtSU82H/YHJWwWiSOQuXw9pyGXD6r3
zt14SLLpLo3POXf4oEPZ5lWUQiAj/6KnUQV8UCyzZzblEGh71hrKqSJS36XW
As65BNJru5VhU8KHM+mhv0fvEGjjlHikXhnpz6fXIY51BNJYcfWUTAVZv3+B
0iMkqxj/2/e3kg/nGp4a/a4n0DrPUP2xavL7sZ+2Xa0Ekk9mK76o5cOYlmO5
PSaQzH1fUWodH/69rUdzJK/87ysrg8qHNe949jKvCCQhevRjBEHO38Z3J4v+
/3uTzQPtxxvIepntKxDpJpCwq1317vt8sFuppqw/QCDB2OdpGx+S81LrxYk3
JP+uMYtY2ciHBe+0j6x4T6D5/sYTP5r48LhCpP3fZwJx/2yx+a+FDy2Ud2Of
vhCIpUbZ2oHJed1wOX7hEIEYdmpra9r5kHk5fWfffwSaCC1YdPMJuR91efiT
EQKNFsnMhPyvomuPpzLdwqhcClHMpFKDEEklpdnRWnZUKEKRXHMptyj35MhU
VJTBJI6iok3Ytr13Rrn8fDIlR6gkak8u0dlKCdF+v5A53/nz+eNd7/M+61nP
+vN9LMHoTYMBXQzua83s9njCzHNDe7LSoBBEkwsp9n+Y8xH3Yy4yuHvl+ZK1
T5n6matqfmNwp/WP35XbmbyJqNGMZHB7WEzcVIcE940pOm0YEEJLzpiP6LkE
1WKnti1k8KPGQJvGTgluSvPQ7Wf4NH58t6m4S4KBQZN2j0RCqFvivvxytwSX
lsfKhjG4enuXTMRrCVbEyOD//7sQ+u/75CqSYMl1PcGJTiHclje5MvZOgvJG
vIsdj4VQJgqpnxti8lmqbegIg6u4nE9KYmbfPfBLvFMjhIbE/uWaH5j8pP8+
xqtm+O3XsDUaYfaZwkM3XQZ3ajuf2v6Z8UNtnFRqsRDeTl2+a/uF0bcjrivg
jhDEzc09buPM/Ii3W9cXMXrnSskFfWXmIeWeSl2GEKaDWVvjpiRYH6QvQ6cL
Yb5FVMAFiQTDRTMCfQYrL+ZdvUZL0LX5/Bs6lvHPu+G/ONPM+4onswNjhKB9
T2uyapbh2xahHhgtBKNkd+1Hc8x5reuNGzwYf7tmO76UImiUtuJu3WEhoMGz
pEEZghBffzLBTQi2M/L8ifkE17dvLD1sIYQD7ex+KTmCrn7Sj75tF4LXzQRl
FQWCpyaXJfuwhBB4stpi9SKCCVeOr4pfIYSIneOhxkoEW+C0eMVyJh/UDW9Y
LCa447x9pvwyIaQM+z3dq0rQQxzinikRQEZN/rT7UoKnRyPjN39j8iutxyBE
nWDVh2x9l69M3nmqusX/TLBBbrMup0MAvA12Fy9pMPfLZDuz2wXwQDr5fu4K
gn/L/D4x1SKAppcN4hJNgpGacrZ1RQJo49Dq91cTbLazKbYvFEB3rIl1sxbB
xu8HZ7ryBDBgExr1Sofg7kQ5P1G0AEZWFBe91yVY9nb1rFeUAKZG+zsn9Qly
yq26nP0FMEdpyMwzJKgxKnNPwVoA8lnOm5YYEazfZacdv1MAS/yv+GgZE/w4
7ZhqrCOAlVuf/L5xI8H9j62WOqoKQE9emgITRv/DZxeXLBbARhHri70pwU6p
3Slr3vOBxY3S9NpK8FFH8PADER+sEnl7j28jGNWbWfv5NR/s9384ncAiqC19
Vf5oCR8OaWuXp5kTTK3qU7O9zQffKXdR3g7mfSMN3Y43+RDanK1QhgQvp1+d
5AQx+zb32bYaNsF1KjCrFMCHpGCFwBYrggKzTJ+3vnxINd+Z07OLoGxdP7/L
gA9Xlf/VLN5D0P4ZJ1JZjw8FA9XfvtkSlLO/8DRDhw93heNrFuwjOHrFMt78
WSUIzxseUHMgGPZ239nylkqod/E/p+NIsC1P8GqgqRKa1xYITZwJZn7fzeuw
roTn0z3vLA8SfLJX37AXKkHUpqrq6Epw0HJY9/O2SnhfYIc+bgS9zX1fOd3n
wZcTyeHh7ox+cz9kWwQ8oNlUQaInQSfWiyMrS3kgo/69/Yo3QU23D6XtOjxQ
HDb5ceMIQXPW/O9nV/Hgp5pQI64fQbOs/crzlvLgl7Ri97oAgu5/OXftTauA
6RetNiXHCJ49GukTnVIBL5eNmf0RxPTPyTBInFABXO+lemdCmHp90UMlY1xI
KTZTCzlO8AHcnFg8wgWfUXcZ13CCtUPWIa2DXGCZJo2zTxJ066bFPAcuqJ2+
02ccSXBB2nBQ1x4ujD5saVseTVCte6Kqms2FZvnRWtlYgjcWXT85n1sOtxxU
S7/GEbT1v60yWFgO8de25PTFE1xT5nTSN78cDvS6JbcmEMzrN3t6WLYcjNck
RlYnMnq2tVa60WUgF1J4pDCJ4DPWxCe9yTIYEDQ7pJ9l9PNSevUmoAxq6RGL
+PMEez9POXnZlMHBoxt++bWIYKui9SWLfxeDcYWzsi6H4JbNBXl7s4pBfip2
VqWE4OxD25lf+zgwyLoxMnuXIJu0v8t+wYH63xpffygjuCi5t4v9lAPXWt43
d3EJBrjv7vNfwYHwxQp/NvII9hctbDogy4E9LuuLuHymX5bL2HZSHNDOd8zM
FRK0mMuQdg25A+MvI2XohwQdT+foKKcWQqrlg/fVAwQNct/ByKEbUD0+T+Ht
IMHCPySZ8gN5MHjTYb30fwnemZwwc8nJA2WH6456w8w8pM+8kb6QB6w5cbTd
R4L3HPbY6A7kwtEKk7wTnxg/P/1VMacpF7I8EhuyRxl/bFk3Z8LLhYZFrYO1
YwR/25y/oPDHNRipVZcbmGD42hoV1n+8BramkQYK82iUGbl0P8s1ExbqG4e5
69LoVu9w9bZKHGztPpWVpE9jpfLx9JfxseCb/LiaY0Cjkm+rEq6LhXRT1b9b
19EYkWKYM6VyAmqHPP4ZW09j/pbpqtKQcBBn3dVR30jjpaHxlIYLYbCEPbWb
ZULjUt0Jk2/BPrBjAkK9TWns4LTe5d33huBbaRnnt9Iotb3TaO8bd7jm0FNV
uo1Gl8euolcaGtA0p/2mg0Xj7Naic4dKpeFLRdiPSXMaY5zWaInZztRyz1ot
DaBxxLv+8cabntQuRdldOyxpfOY7nh9X6kVF1DkG++2k0Wp5WYL2kuNUQXB+
+kVrGntCo4+KfcKoVo2PwordNJoFFjksmQmjJC2mPZ02NCqomDx5nR1Daccl
zRA7GjUdzpQWfIuh7PXbVmva01izn6f42TuWiu/+2Yq9n0Y15RmreWGJVHGy
X+AxJxpfxFzkzFYnUp2mlZcvH2DqGSRdXXvpDDU3NM0XuNC4PSaAKtU4Rxn+
setV9yFG/3UZLB3WOcqFnfV95jCN09Uvwn+xTqbOTvRqannS2NQ3vGqfJIXi
3TJg7/Jm9Py+z7z3pwuUyCH6aMgRhr/nWJT/iVRK9p/G1Aw/GvWynvs1tadS
JjzFyj8DaAy9rRNz42sq5eV56KXoGI3Ox3KjPMLSqVTFO+SfIBoH51k+0LqV
Tv0Pd4vOrg==
        "]]},
      Annotation[#, "Charting`Private`Tag$155048#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$4106#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.861749447099881*^9, 3.8617501766650467`*^9, {3.861750223370763*^9, 
   3.861750244204874*^9}, {3.861750323187965*^9, 3.8617503401426077`*^9}, 
   3.861750408378697*^9, 3.861750462591717*^9, 3.861750585014387*^9, 
   3.8617506247072887`*^9, 3.861750660870882*^9, 3.86175129077925*^9, {
   3.861751458291781*^9, 3.861751495643647*^9}, 3.861751537624015*^9, {
   3.861751632579475*^9, 3.8617516598208227`*^9}, 3.8617530657195253`*^9, {
   3.861753114732526*^9, 3.8617531294484053`*^9}, 3.861753224951848*^9, 
   3.861753265691888*^9, 3.861753333506036*^9, 3.861753441120867*^9, {
   3.861753483186969*^9, 3.861753546615752*^9}, {3.861753720622814*^9, 
   3.861753748159259*^9}, 3.861753870164297*^9, 3.8617539454934397`*^9, 
   3.8617603757486277`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"2a7f9412-6d63-40a1-86d5-cec4ab85ecec"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.861498418258443*^9, 3.8615033610086412`*^9, 3.8615070701351624`*^9, {
   3.86167998827601*^9, 3.8616800580305023`*^9}, {3.861680130881605*^9, 
   3.8616802157624083`*^9}, {3.86168033651266*^9, 3.861680424951936*^9}, {
   3.861680627914113*^9, 3.8616806921166277`*^9}, {3.861680873003611*^9, 
   3.861680882125839*^9}, {3.8617495167540483`*^9, 3.861749545169695*^9}, {
   3.861749581828719*^9, 3.861749613591425*^9}, {3.861753179380156*^9, 
   3.861753183700836*^9}, 3.861753496316852*^9, 3.861753843668561*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"34f2dee4-8147-407e-b929-8f081ab02e84"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.861576035735178*^9, 3.861576037953273*^9}, {
  3.861680797914468*^9, 3.8616808008005323`*^9}, {3.861750364251659*^9, 
  3.861750382322798*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"fb62bd56-021a-4d81-a0f2-75a0426aee4d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8616732641307087`*^9, 3.861673412403957*^9}, {
  3.861673456812845*^9, 3.86167359253759*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"cad2d3ad-2185-4eb0-af05-9293044739ee"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.861673417837101*^9, 3.8616734203102283`*^9}, {
  3.8616734841996593`*^9, 3.861673505481653*^9}, {3.861680083709804*^9, 
  3.861680103178504*^9}, {3.861741339874304*^9, 3.861741375572804*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"6211003d-3e5a-456b-91be-2b434a774acc"]
}, Open  ]]
},
WindowSize->{1920, 1027},
WindowMargins->{{1728, Automatic}, {Automatic, -13}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
CellContext->Notebook,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"21467c99-2b65-4a6b-a1a8-32689b407aa1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 163, 3, 123, "Title",ExpressionUUID->"c28aa2a7-d21e-426d-960c-e1f494daa54f"],
Cell[746, 27, 431, 8, 37, "Input",ExpressionUUID->"b4bce99e-c48b-4c62-b18f-f1b511f509a4"],
Cell[1180, 37, 8784, 194, 803, "Input",ExpressionUUID->"cec9ec4b-9ab9-499f-a003-9b8815933399"],
Cell[9967, 233, 5613, 135, 636, "Input",ExpressionUUID->"e5d261c3-dec1-4280-af62-24891e4eb90a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15617, 373, 320, 5, 123, "Title",ExpressionUUID->"93e68de5-0837-4f20-899e-f3a3d61b9519"],
Cell[15940, 380, 3997, 85, 325, "Input",ExpressionUUID->"46ca37b3-b282-4e19-bd6f-d7095dd05190"],
Cell[19940, 467, 4951, 142, 632, "Input",ExpressionUUID->"b679f6b1-cc78-4998-b53c-e65093b74335"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24928, 614, 256, 4, 123, "Title",ExpressionUUID->"235c7a58-0182-47a7-9361-cdc6f24d11dd"],
Cell[25187, 620, 3383, 80, 119, "Input",ExpressionUUID->"7b21dda6-0b67-4411-bf34-de2d9fb94bbe"],
Cell[28573, 702, 2369, 54, 194, "Input",ExpressionUUID->"46216a88-e346-4f16-ba31-ce4764f2b520"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30979, 761, 393, 12, 124, "Title",ExpressionUUID->"7755eab6-9597-4055-b1fd-35fda311e642"],
Cell[31375, 775, 3971, 107, 367, "Input",ExpressionUUID->"1ca705eb-b49e-4392-9c52-bb5dd4b2c6b6"],
Cell[35349, 884, 3708, 76, 194, "Input",ExpressionUUID->"d3823868-0507-44e2-8d43-00b0f4197af2"],
Cell[39060, 962, 4254, 75, 168, "Input",ExpressionUUID->"ec48aafb-95d3-4d76-b9be-9daab44bffc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43351, 1042, 209, 4, 123, "Title",ExpressionUUID->"86473ad7-0ae0-48f6-89ed-6d3302af9776"],
Cell[43563, 1048, 4385, 113, 302, "Input",ExpressionUUID->"6fb91cf1-9dd8-4516-bdb9-a3f21d548fd5"],
Cell[47951, 1163, 5635, 135, 330, "Input",ExpressionUUID->"9471877c-6c41-4542-951d-d342a150ffd8"],
Cell[53589, 1300, 2503, 44, 116, "Input",ExpressionUUID->"bd4799a1-2cba-4e36-a3c5-904b80f5858f"],
Cell[56095, 1346, 560, 10, 37, "Input",ExpressionUUID->"c1e0d1d8-7add-4971-8770-e5a0580905ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56692, 1361, 308, 5, 123, "Title",ExpressionUUID->"a85e9fdd-e3cb-4bc7-96b5-5042be5778a7"],
Cell[57003, 1368, 10077, 273, 848, "Input",ExpressionUUID->"95fab333-158f-4a26-8378-c3f5ce013768"],
Cell[CellGroupData[{
Cell[67105, 1645, 49900, 843, 516, "Input",ExpressionUUID->"136bbf8a-f698-46b3-b8be-4d0096814682"],
Cell[117008, 2490, 93743, 1558, 449, "Output",ExpressionUUID->"2a7f9412-6d63-40a1-86d5-cec4ab85ecec"]
}, Open  ]],
Cell[210766, 4051, 684, 11, 37, "Input",ExpressionUUID->"34f2dee4-8147-407e-b929-8f081ab02e84"],
Cell[211453, 4064, 275, 5, 37, "Input",ExpressionUUID->"fb62bd56-021a-4d81-a0f2-75a0426aee4d"],
Cell[211731, 4071, 225, 4, 37, "Input",ExpressionUUID->"cad2d3ad-2185-4eb0-af05-9293044739ee"],
Cell[211959, 4077, 323, 5, 37, "Input",ExpressionUUID->"6211003d-3e5a-456b-91be-2b434a774acc"]
}, Open  ]]
}
]
*)

